contract main {




// =====================  Runtime code  =====================


#
#  - sub_0906a252(?)
#  - increaseAmount(uint256 arg1)
#  - recoverWrongTokens(address arg1, address arg2, uint256 arg3)
#  - createLockFor(address arg1, uint256 arg2, uint256 arg3)
#  - unlock()
#  - createLock(uint256 arg1, uint256 arg2)
#  - sub_ca2f8d93(?)
#  - sub_ff5f200a(?)
#
const decimals = 18

const GOVERN_ROLE = 0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392

const DEFAULT_ADMIN_ROLE = 0


mapping of struct roleAdmin;
address owner;
uint256 stor2;
mapping of uint256 balanceOf;
uint256 totalSupply;
array of struct stor6;
array of struct stor7;
array of struct checkpoints;
mapping of uint256 numCheckpoints;
mapping of address delegates;
address wtfAddress;
address sub_6bfdb278Address;
address sub_c375a48bAddress;
uint256 sub_fa78668f;
uint256 sub_3ff03207;
mapping of struct lockedAmount;
mapping of uint8 stor17;

function checkpoints(address arg1, uint256 arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 < checkpoints[arg1].field_0
    return checkpoints[arg1][arg2].field_0, checkpoints[arg1][arg2].field_256
}

function totalSupply() payable {
    return totalSupply
}

function getRoleAdmin(bytes32 arg1) payable {
    require calldata.size - 4 >= 32
    return roleAdmin[arg1].field_256
}

function sub_2da303b0(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return bool(stor17[arg1])
}

function wtf() payable {
    return wtfAddress
}

function sub_3ff03207(?) payable {
    return sub_3ff03207
}

function delegates(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return delegates[arg1]
}

function sub_6bfdb278(?) payable {
    return sub_6bfdb278Address
}

function numCheckpoints(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return numCheckpoints[arg1]
}

function balanceOf(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return balanceOf[address(arg1)]
}

function owner() payable {
    return owner
}

function hasRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    return bool(roleAdmin[arg1][address(arg2)].field_0)
}

function getLockedAmount(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return lockedAmount[address(arg1)].field_512
}

function sub_c375a48b(?) payable {
    return sub_c375a48bAddress
}

function getLockData(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return lockedAmount[address(arg1)].field_0, lockedAmount[address(arg1)].field_256, lockedAmount[address(arg1)].field_512
}

function isGovernor(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return bool(roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(arg1)].field_0)
}

function sub_fa78668f(?) payable {
    return sub_fa78668f
}

function _fallback() payable {
    revert
}

function sub_b9d50832(?) payable {
    require calldata.size - 4 >= 32
    require arg1 == address(arg1)
    return (block.timestamp > lockedAmount[address(arg1)].field_256)
}

function renounceOwnership() payable {
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    emit OwnershipTransferred(owner, 0);
    owner = 0
}

function totalLocked() payable {
    require ext_code.size(wtfAddress)
    staticcall wtfAddress.0x70a08231 with:
            gas gas_remaining wei
           args this.address
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    return ext_call.return_data[0]
}

function supportsInterface(bytes4 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == Mask(32, 224, arg1)
    if 0x7965db0b00000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1):
        return True
    return (0x1ffc9a700000000000000000000000000000000000000000000000000000000 == Mask(32, 224, arg1))
}

function sub_8ac9b019(?) payable {
    require calldata.size - 4 >= 64
    if not roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Permissions::onlyGovernor: Caller is not a governor'
    sub_3ff03207 = arg1
    sub_fa78668f = arg2
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'Ownable: caller is not the owner'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Ownable: new owner is the zero address'
    emit OwnershipTransferred(owner, arg1);
    owner = arg1
}

function getCurrentVotes(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not numCheckpoints[address(arg1)]:
        return 0
    if numCheckpoints[address(arg1)] < 1:
        revert with 0, 17
    if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
        revert with 0, 50
    return checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256
}

function renounceRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if arg2 != msg.sender:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: can only renounce roles for self'
    if roleAdmin[arg1][address(arg2)].field_0:
        roleAdmin[arg1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function createRole(bytes32 arg1, bytes32 arg2) payable {
    require calldata.size - 4 >= 64
    if not roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Permissions::onlyGovernor: Caller is not a governor'
    emit RoleAdminChanged(arg1, roleAdmin[arg1].field_256, arg2);
    roleAdmin[arg1].field_256 = arg2
}

function revokeRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if not roleAdmin[roleAdmin[arg1].field_256][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: sender must be an admin to revoke'
    if roleAdmin[arg1][address(arg2)].field_0:
        roleAdmin[arg1][address(arg2)].field_0 = 0
        emit RoleRevoked(arg1, arg2, msg.sender);
}

function grantRole(bytes32 arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg2 == arg2
    if not roleAdmin[roleAdmin[arg1].field_256][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: sender must be an admin to grant'
    if not roleAdmin[arg1][address(arg2)].field_0:
        roleAdmin[arg1][address(arg2)].field_0 = 1
        emit RoleGranted(arg1, arg2, msg.sender);
}

function setStaking(address arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 == arg1
    require arg2 == arg2
    if not roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Permissions::onlyGovernor: Caller is not a governor'
    if not arg1:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: staking zero address'
    if not arg2:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: staking zero address'
    sub_6bfdb278Address = arg1
    sub_c375a48bAddress = arg2
    emit 0xea27d6b3: address(arg1), arg2
}

function revokeGovernor(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Permissions::onlyGovernor: Caller is not a governor'
    if not roleAdmin[roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392].field_256][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: sender must be an admin to revoke'
    if roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(arg1)].field_0:
        roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(arg1)].field_0 = 0
        emit RoleRevoked(0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392, arg1, msg.sender);
}

function grantGovernor(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if not roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                    'Permissions::onlyGovernor: Caller is not a governor'
    if not roleAdmin[roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392].field_256][address(msg.sender)].field_0:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'AccessControl: sender must be an admin to grant'
    if not roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(arg1)].field_0:
        roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(arg1)].field_0 = 1
        emit RoleGranted(0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392, arg1, msg.sender);
}

function getMultiplier(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    if arg1 <= 0:
        return 0
    if arg1 <= 2629746:
        return 10
    if arg1 <= 5259492:
        return 12
    if arg1 <= 7889238:
        return 13
    if arg1 <= 10518984:
        return 15
    if arg1 <= 13148730:
        return 17
    if arg1 <= 15778476:
        return 20
    if arg1 <= 18408222:
        return 23
    if arg1 <= 21037968:
        return 27
    if arg1 <= 23667714:
        return 31
    if arg1 <= 26297460:
        return 35
    if arg1 <= 28927206:
        return 40
    if arg1 <= 31556952:
        return 47
    if arg1 <= 34186698:
        return 54
    if arg1 <= 36816444:
        return 62
    if arg1 <= 39446190:
        return 71
    if arg1 <= 42075936:
        return 81
    if arg1 <= 44705682:
        return 94
    if arg1 <= 47335428:
        return 108
    if arg1 <= 49965174:
        return 124
    if arg1 <= 52594920:
        return 142
    if arg1 <= 55224666:
        return 164
    if arg1 <= 57854412:
        return 188
    if arg1 <= 60484158:
        return 216
    if arg1 > 63113904:
        return 0
    return 249
}

function sub_1eeac76c(?) payable {
    require calldata.size - 4 >= 64
    require cd[4] <= test266151307()
    require cd[4] + 35 < calldata.size
    if ('cd', 4).length > test266151307():
        revert with 0, 65
    if (32 * ('cd', 4).length) + 128 > test266151307() or (32 * ('cd', 4).length) + 128 < 96:
        revert with 0, 65
    require calldata.size >= cd[4] + (32 * ('cd', 4).length) + 36
    s = cd[4] + 36
    t = 128
    idx = 0
    while idx < ('cd', 4).length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        s = s + 32
        t = t + 32
        idx = idx + 1
        continue 
    require cd[36] == bool(cd[36])
    if not roleAdmin[0xfe899bd46557473cb80307a9dabc297131ced39608330a2d29b2d52b660c0392][address(msg.sender)].field_0:
        revert with 0, 'Permissions::onlyGovernor: Caller is not a governor'
    idx = 0
    while idx < ('cd', 4).length:
        if idx >= ('cd', 4).length:
            revert with 0, 50
        mem[0] = mem[(32 * idx) + 140 len 20]
        mem[32] = 17
        stor17[mem[(32 * idx) + 140 len 20]] = uint8(bool(cd[36]))
        if idx >= ('cd', 4).length:
            revert with 0, 50
        _35 = mem[(32 * idx) + 128]
        mem[(32 * ('cd', 4).length) + 128] = bool(cd[36])
        emit 0x9f6b0cfe: bool(cd[36]), msg.sender, address(_35)
        if idx == -1:
            revert with 0, 17
        idx = idx + 1
        continue 
}

function getPriorVotes(address arg1, uint256 arg2) payable {
    mem[64] = 96
    require calldata.size - 4 >= 64
    require arg1 == arg1
    if arg2 >= block.number:
        revert with 0, 'VeWTF: not yet determined'
    if not numCheckpoints[address(arg1)]:
        return 0
    if numCheckpoints[address(arg1)] < 1:
        revert with 0, 17
    if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
        revert with 0, 50
    if checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_0 <= arg2:
        if numCheckpoints[address(arg1)] < 1:
            revert with 0, 17
        if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
            revert with 0, 50
        return checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256
    if not checkpoints[address(arg1)].field_0:
        revert with 0, 50
    if checkpoints[address(arg1)].field_0 > arg2:
        return 0
    if numCheckpoints[address(arg1)] < 1:
        revert with 0, 17
    idx = 0
    while numCheckpoints[address(arg1)] - 1 > idx:
        if numCheckpoints[address(arg1)] - 1 < idx:
            revert with 0, 17
        if numCheckpoints[address(arg1)] - 1 < numCheckpoints[address(arg1)] + -idx - 1 / 2:
            revert with 0, 17
        mem[32] = 8
        if numCheckpoints[address(arg1)] + -(numCheckpoints[address(arg1)] + -idx - 1 / 2) - 1 >= checkpoints[address(arg1)].field_0:
            revert with 0, 50
        mem[0] = sha3(address(arg1), 8)
        _34 = mem[64]
        mem[64] = mem[64] + 64
        mem[_34] = checkpoints[address(arg1)][stor9[address(arg1)] + -(0.5 / stor9[address(arg1)] + -idx - 1) - 1].field_0
        mem[_34 + 32] = checkpoints[address(arg1)][stor9[address(arg1)] + -(0.5 / stor9[address(arg1)] + -idx - 1) - 1].field_256
        if checkpoints[address(arg1)][stor9[address(arg1)] + -(0.5 / stor9[address(arg1)] + -idx - 1) - 1].field_0 == arg2:
            return checkpoints[address(arg1)][stor9[address(arg1)] + -(0.5 / stor9[address(arg1)] + -idx - 1) - 1].field_256
        if arg2 > checkpoints[address(arg1)][stor9[address(arg1)] + -(0.5 / stor9[address(arg1)] + -idx - 1) - 1].field_0:
            idx = numCheckpoints[address(arg1)] + -(numCheckpoints[address(arg1)] + -idx - 1 / 2) - 1
            continue 
        if numCheckpoints[address(arg1)] + -(numCheckpoints[address(arg1)] + -idx - 1 / 2) - 1 < 1:
            revert with 0, 17
        idx = idx
        continue 
    if idx >= checkpoints[address(arg1)].field_0:
        revert with 0, 50
    return checkpoints[address(arg1)][idx].field_256
}

function name() payable {
    if bool(stor6.length):
        if bool(stor6.length) == stor6.length.field_1 < 32:
            revert with 0, 34
        if bool(stor6.length):
            if bool(stor6.length) == stor6.length.field_1 < 32:
                revert with 0, 34
            if stor6.length.field_1:
                if 31 < stor6.length.field_1:
                    mem[128] = uint256(stor6.field_0)
                    idx = 128
                    s = 0
                    while stor6.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor6[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor6.length.field_1), data=mem[128 len ceil32(stor6.length.field_1)])
                mem[128] = 256 * stor6.length.field_8
        else:
            if bool(stor6.length) == stor6.length.field_1 < 32:
                revert with 0, 34
            if stor6.length.field_1:
                if 31 < stor6.length.field_1:
                    mem[128] = uint256(stor6.field_0)
                    idx = 128
                    s = 0
                    while stor6.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor6[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor6.length.field_1), data=mem[128 len ceil32(stor6.length.field_1)])
                mem[128] = 256 * stor6.length.field_8
        mem[ceil32(stor6.length.field_1) + 192 len ceil32(stor6.length.field_1)] = mem[128 len ceil32(stor6.length.field_1)]
        if ceil32(stor6.length.field_1) > stor6.length.field_1:
            mem[stor6.length.field_1 + ceil32(stor6.length.field_1) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor6.length.field_1), data=mem[128 len ceil32(stor6.length.field_1)], mem[(2 * ceil32(stor6.length.field_1)) + 192 len 2 * ceil32(stor6.length.field_1)]), 
    if bool(stor6.length) == stor6.length.field_1 < 32:
        revert with 0, 34
    if bool(stor6.length):
        if bool(stor6.length) == stor6.length.field_1 < 32:
            revert with 0, 34
        if stor6.length.field_1:
            if 31 < stor6.length.field_1:
                mem[128] = uint256(stor6.field_0)
                idx = 128
                s = 0
                while stor6.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor6[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor6.length % 128, data=mem[128 len ceil32(stor6.length.field_1)])
            mem[128] = 256 * stor6.length.field_8
    else:
        if bool(stor6.length) == stor6.length.field_1 < 32:
            revert with 0, 34
        if stor6.length.field_1:
            if 31 < stor6.length.field_1:
                mem[128] = uint256(stor6.field_0)
                idx = 128
                s = 0
                while stor6.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor6[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor6.length % 128, data=mem[128 len ceil32(stor6.length.field_1)])
            mem[128] = 256 * stor6.length.field_8
    mem[ceil32(stor6.length.field_1) + 192 len ceil32(stor6.length.field_1)] = mem[128 len ceil32(stor6.length.field_1)]
    if ceil32(stor6.length.field_1) > stor6.length.field_1:
        mem[stor6.length.field_1 + ceil32(stor6.length.field_1) + 192] = 0
    return Array(len=stor6.length % 128, data=mem[128 len ceil32(stor6.length.field_1)], mem[(2 * ceil32(stor6.length.field_1)) + 192 len 2 * ceil32(stor6.length.field_1)]), 
}

function symbol() payable {
    if bool(stor7.length):
        if bool(stor7.length) == stor7.length.field_1 < 32:
            revert with 0, 34
        if bool(stor7.length):
            if bool(stor7.length) == stor7.length.field_1 < 32:
                revert with 0, 34
            if stor7.length.field_1:
                if 31 < stor7.length.field_1:
                    mem[128] = uint256(stor7.field_0)
                    idx = 128
                    s = 0
                    while stor7.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor7[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor7.length.field_1), data=mem[128 len ceil32(stor7.length.field_1)])
                mem[128] = 256 * stor7.length.field_8
        else:
            if bool(stor7.length) == stor7.length.field_1 < 32:
                revert with 0, 34
            if stor7.length.field_1:
                if 31 < stor7.length.field_1:
                    mem[128] = uint256(stor7.field_0)
                    idx = 128
                    s = 0
                    while stor7.length.field_1 + 96 > idx:
                        mem[idx + 32] = stor7[s].field_256
                        idx = idx + 32
                        s = s + 1
                        continue 
                    return Array(len=2 * Mask(256, -1, stor7.length.field_1), data=mem[128 len ceil32(stor7.length.field_1)])
                mem[128] = 256 * stor7.length.field_8
        mem[ceil32(stor7.length.field_1) + 192 len ceil32(stor7.length.field_1)] = mem[128 len ceil32(stor7.length.field_1)]
        if ceil32(stor7.length.field_1) > stor7.length.field_1:
            mem[stor7.length.field_1 + ceil32(stor7.length.field_1) + 192] = 0
        return Array(len=2 * Mask(256, -1, stor7.length.field_1), data=mem[128 len ceil32(stor7.length.field_1)], mem[(2 * ceil32(stor7.length.field_1)) + 192 len 2 * ceil32(stor7.length.field_1)]), 
    if bool(stor7.length) == stor7.length.field_1 < 32:
        revert with 0, 34
    if bool(stor7.length):
        if bool(stor7.length) == stor7.length.field_1 < 32:
            revert with 0, 34
        if stor7.length.field_1:
            if 31 < stor7.length.field_1:
                mem[128] = uint256(stor7.field_0)
                idx = 128
                s = 0
                while stor7.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor7[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor7.length % 128, data=mem[128 len ceil32(stor7.length.field_1)])
            mem[128] = 256 * stor7.length.field_8
    else:
        if bool(stor7.length) == stor7.length.field_1 < 32:
            revert with 0, 34
        if stor7.length.field_1:
            if 31 < stor7.length.field_1:
                mem[128] = uint256(stor7.field_0)
                idx = 128
                s = 0
                while stor7.length.field_1 + 96 > idx:
                    mem[idx + 32] = stor7[s].field_256
                    idx = idx + 32
                    s = s + 1
                    continue 
                return Array(len=stor7.length % 128, data=mem[128 len ceil32(stor7.length.field_1)])
            mem[128] = 256 * stor7.length.field_8
    mem[ceil32(stor7.length.field_1) + 192 len ceil32(stor7.length.field_1)] = mem[128 len ceil32(stor7.length.field_1)]
    if ceil32(stor7.length.field_1) > stor7.length.field_1:
        mem[stor7.length.field_1 + ceil32(stor7.length.field_1) + 192] = 0
    return Array(len=stor7.length % 128, data=mem[128 len ceil32(stor7.length.field_1)], mem[(2 * ceil32(stor7.length.field_1)) + 192 len 2 * ceil32(stor7.length.field_1)]), 
}

function delegate(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    delegates[address(msg.sender)] = arg1
    if delegates[address(msg.sender)] != arg1:
        if balanceOf[address(msg.sender)] > 0:
            if delegates[address(msg.sender)]:
                if not numCheckpoints[stor10[address(msg.sender)]]:
                    if 0 < balanceOf[address(msg.sender)]:
                        revert with 0, 17
                    if not numCheckpoints[stor10[address(msg.sender)]]:
                        checkpoints[stor10[address(msg.sender)]].field_0++
                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = -balanceOf[address(msg.sender)]
                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                            revert with 0, 17
                        numCheckpoints[stor10[address(msg.sender)]]++
                    else:
                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                            revert with 0, 17
                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                            revert with 0, 50
                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                revert with 0, 17
                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                revert with 0, 50
                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = -balanceOf[address(msg.sender)]
                        else:
                            checkpoints[stor10[address(msg.sender)]].field_0++
                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = -balanceOf[address(msg.sender)]
                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                revert with 0, 17
                            numCheckpoints[stor10[address(msg.sender)]]++
                    emit DelegateVotesChanged(0, -balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                else:
                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                        revert with 0, 17
                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                        revert with 0, 50
                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 < balanceOf[address(msg.sender)]:
                        revert with 0, 17
                    if not numCheckpoints[stor10[address(msg.sender)]]:
                        checkpoints[stor10[address(msg.sender)]].field_0++
                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 - balanceOf[address(msg.sender)]
                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                            revert with 0, 17
                        numCheckpoints[stor10[address(msg.sender)]]++
                    else:
                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                            revert with 0, 17
                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                            revert with 0, 50
                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                revert with 0, 17
                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                revert with 0, 50
                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 -= balanceOf[address(msg.sender)]
                        else:
                            checkpoints[stor10[address(msg.sender)]].field_0++
                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 - balanceOf[address(msg.sender)]
                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                revert with 0, 17
                            numCheckpoints[stor10[address(msg.sender)]]++
                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
            if arg1:
                if not numCheckpoints[address(arg1)]:
                    if 0 > !balanceOf[address(msg.sender)]:
                        revert with 0, 17
                    if not numCheckpoints[address(arg1)]:
                        checkpoints[address(arg1)].field_0++
                        checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_0 = block.number
                        checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_256 = balanceOf[address(msg.sender)]
                        if 1 > !numCheckpoints[address(arg1)]:
                            revert with 0, 17
                        numCheckpoints[address(arg1)]++
                    else:
                        if numCheckpoints[address(arg1)] < 1:
                            revert with 0, 17
                        if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
                            revert with 0, 50
                        if checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_0 == block.number:
                            if numCheckpoints[address(arg1)] < 1:
                                revert with 0, 17
                            if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
                                revert with 0, 50
                            checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256 = balanceOf[address(msg.sender)]
                        else:
                            checkpoints[address(arg1)].field_0++
                            checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_0 = block.number
                            checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_256 = balanceOf[address(msg.sender)]
                            if 1 > !numCheckpoints[address(arg1)]:
                                revert with 0, 17
                            numCheckpoints[address(arg1)]++
                    emit DelegateVotesChanged(0, balanceOf[address(msg.sender)], arg1);
                else:
                    if numCheckpoints[address(arg1)] < 1:
                        revert with 0, 17
                    if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
                        revert with 0, 50
                    if checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256 > !balanceOf[address(msg.sender)]:
                        revert with 0, 17
                    if not numCheckpoints[address(arg1)]:
                        checkpoints[address(arg1)].field_0++
                        checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_0 = block.number
                        checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_256 = checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256 + balanceOf[address(msg.sender)]
                        if 1 > !numCheckpoints[address(arg1)]:
                            revert with 0, 17
                        numCheckpoints[address(arg1)]++
                    else:
                        if numCheckpoints[address(arg1)] < 1:
                            revert with 0, 17
                        if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
                            revert with 0, 50
                        if checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_0 == block.number:
                            if numCheckpoints[address(arg1)] < 1:
                                revert with 0, 17
                            if numCheckpoints[address(arg1)] - 1 >= checkpoints[address(arg1)].field_0:
                                revert with 0, 50
                            checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256 += balanceOf[address(msg.sender)]
                        else:
                            checkpoints[address(arg1)].field_0++
                            checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_0 = block.number
                            checkpoints[address(arg1)][checkpoints[address(arg1)].field_0].field_256 = checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256 + balanceOf[address(msg.sender)]
                            if 1 > !numCheckpoints[address(arg1)]:
                                revert with 0, 17
                            numCheckpoints[address(arg1)]++
                    emit DelegateVotesChanged(checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256, checkpoints[address(arg1)][stor9[address(arg1)] - 1].field_256 + balanceOf[address(msg.sender)], arg1);
    emit DelegateChanged(msg.sender, delegates[address(msg.sender)], arg1);
}

function sub_be9aa2db(?) payable {
    require calldata.size - 4 >= 64
    require arg1 == address(arg1)
    if stor2 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor2 = 2
    if not stor17[msg.sender]:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow:: Caller is not whitelisted'
    if not lockedAmount[address(arg1)].field_512:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Lock does not exist'
    if arg2 < sub_3ff03207:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Less than minimum MIN_LOCK_TIME'
    if arg2 > sub_fa78668f:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Greater than MAX_LOCK_TIME'
    if block.timestamp > lockedAmount[address(arg1)].field_256:
        if block.timestamp > !arg2:
            revert with 0, 17
        lockedAmount[address(arg1)].field_0 = block.timestamp
        if lockedAmount[address(arg1)].field_512 and arg2 > -1 / lockedAmount[address(arg1)].field_512:
            revert with 0, 17
        if arg2 <= 0:
            if lockedAmount[address(arg1)].field_512 * arg2 and 0 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                revert with 0, 17
            if not sub_fa78668f:
                revert with 0, 18
            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
            if not address(arg1):
                revert with 0, 'ERC20: mint to the zero address'
            if totalSupply > !(0 / sub_fa78668f / 100):
                revert with 0, 17
            totalSupply += 0 / sub_fa78668f / 100
            if balanceOf[address(arg1)] > !(0 / sub_fa78668f / 100):
                revert with 0, 17
            balanceOf[address(arg1)] += 0 / sub_fa78668f / 100
            emit Transfer((0 / sub_fa78668f / 100), 0, address(arg1));
            if delegates[address(arg1)] != 0:
                if 0 / sub_fa78668f / 100 > 0:
                    if delegates[address(arg1)]:
                        if not numCheckpoints[stor10[address(arg1)]]:
                            if 0 > !(0 / sub_fa78668f / 100):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(arg1)]]:
                                checkpoints[stor10[address(arg1)]].field_0++
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(arg1)]]++
                            else:
                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 0 / sub_fa78668f / 100
                                else:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                            emit DelegateVotesChanged(0, 0 / sub_fa78668f / 100, delegates[address(arg1)]);
                        else:
                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                revert with 0, 17
                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                revert with 0, 50
                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(0 / sub_fa78668f / 100):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(arg1)]]:
                                checkpoints[stor10[address(arg1)]].field_0++
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(arg1)]]++
                            else:
                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 0 / sub_fa78668f / 100
                                else:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100), delegates[address(arg1)]);
            if sub_6bfdb278Address:
                require ext_code.size(sub_6bfdb278Address)
                staticcall sub_6bfdb278Address.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_6bfdb278Address)
                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(arg1), 0 / sub_fa78668f / 100
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            if sub_c375a48bAddress:
                require ext_code.size(sub_c375a48bAddress)
                staticcall sub_c375a48bAddress.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_c375a48bAddress)
                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(arg1), 0 / sub_fa78668f / 100
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        else:
            if arg2 <= 2629746:
                if lockedAmount[address(arg1)].field_512 * arg2 and 10 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                    revert with 0, 17
                if not sub_fa78668f:
                    revert with 0, 18
                lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                if not address(arg1):
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                    revert with 0, 17
                totalSupply += 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                if balanceOf[address(arg1)] > !(10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                    revert with 0, 17
                balanceOf[address(arg1)] += 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                emit Transfer((10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                if delegates[address(arg1)] != 0:
                    if 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                        if delegates[address(arg1)]:
                            if not numCheckpoints[stor10[address(arg1)]]:
                                if 0 > !(10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(arg1)]]:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                                else:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                    else:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                emit DelegateVotesChanged(0, 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                            else:
                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(arg1)]]:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                                else:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                    else:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                if sub_6bfdb278Address:
                    require ext_code.size(sub_6bfdb278Address)
                    staticcall sub_6bfdb278Address.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_6bfdb278Address)
                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(arg1), 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                if sub_c375a48bAddress:
                    require ext_code.size(sub_c375a48bAddress)
                    staticcall sub_c375a48bAddress.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_c375a48bAddress)
                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(arg1), 10 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            else:
                if arg2 <= 5259492:
                    if lockedAmount[address(arg1)].field_512 * arg2 and 12 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                        revert with 0, 17
                    if not sub_fa78668f:
                        revert with 0, 18
                    lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                    if not address(arg1):
                        revert with 0, 'ERC20: mint to the zero address'
                    if totalSupply > !(12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                        revert with 0, 17
                    totalSupply += 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                    if balanceOf[address(arg1)] > !(12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                        revert with 0, 17
                    balanceOf[address(arg1)] += 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                    emit Transfer((12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                    if delegates[address(arg1)] != 0:
                        if 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                            if delegates[address(arg1)]:
                                if not numCheckpoints[stor10[address(arg1)]]:
                                    if 0 > !(12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(arg1)]]:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                    else:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        else:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                    emit DelegateVotesChanged(0, 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                else:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(arg1)]]:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                    else:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        else:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                    if sub_6bfdb278Address:
                        require ext_code.size(sub_6bfdb278Address)
                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_6bfdb278Address)
                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(arg1), 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    if sub_c375a48bAddress:
                        require ext_code.size(sub_c375a48bAddress)
                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_c375a48bAddress)
                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(arg1), 12 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if arg2 <= 7889238:
                        if lockedAmount[address(arg1)].field_512 * arg2 and 13 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                            revert with 0, 17
                        if not sub_fa78668f:
                            revert with 0, 18
                        lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                        if not address(arg1):
                            revert with 0, 'ERC20: mint to the zero address'
                        if totalSupply > !(13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                            revert with 0, 17
                        totalSupply += 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                        if balanceOf[address(arg1)] > !(13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                            revert with 0, 17
                        balanceOf[address(arg1)] += 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                        emit Transfer((13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                        if delegates[address(arg1)] != 0:
                            if 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                if delegates[address(arg1)]:
                                    if not numCheckpoints[stor10[address(arg1)]]:
                                        if 0 > !(13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(arg1)]]:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                        else:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            else:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                        emit DelegateVotesChanged(0, 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                    else:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(arg1)]]:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                        else:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            else:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                        if sub_6bfdb278Address:
                            require ext_code.size(sub_6bfdb278Address)
                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_6bfdb278Address)
                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        if sub_c375a48bAddress:
                            require ext_code.size(sub_c375a48bAddress)
                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_c375a48bAddress)
                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), 13 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if arg2 <= 10518984:
                            if lockedAmount[address(arg1)].field_512 * arg2 and 15 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                revert with 0, 17
                            if not sub_fa78668f:
                                revert with 0, 18
                            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                            if not address(arg1):
                                revert with 0, 'ERC20: mint to the zero address'
                            if totalSupply > !(15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                revert with 0, 17
                            totalSupply += 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                            if balanceOf[address(arg1)] > !(15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                revert with 0, 17
                            balanceOf[address(arg1)] += 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                            emit Transfer((15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                            if delegates[address(arg1)] != 0:
                                if 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                    if delegates[address(arg1)]:
                                        if not numCheckpoints[stor10[address(arg1)]]:
                                            if 0 > !(15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                            else:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                else:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                            emit DelegateVotesChanged(0, 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                        else:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                            else:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                else:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                            if sub_6bfdb278Address:
                                require ext_code.size(sub_6bfdb278Address)
                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_6bfdb278Address)
                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            if sub_c375a48bAddress:
                                require ext_code.size(sub_c375a48bAddress)
                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_c375a48bAddress)
                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), 15 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg2 <= 13148730:
                                if lockedAmount[address(arg1)].field_512 * arg2 and 17 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                    revert with 0, 17
                                if not sub_fa78668f:
                                    revert with 0, 18
                                lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                if not address(arg1):
                                    revert with 0, 'ERC20: mint to the zero address'
                                if totalSupply > !(17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                    revert with 0, 17
                                totalSupply += 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                if balanceOf[address(arg1)] > !(17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                    revert with 0, 17
                                balanceOf[address(arg1)] += 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                emit Transfer((17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                if delegates[address(arg1)] != 0:
                                    if 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                        if delegates[address(arg1)]:
                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                if 0 > !(17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    else:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                emit DelegateVotesChanged(0, 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                            else:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    else:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                if sub_6bfdb278Address:
                                    require ext_code.size(sub_6bfdb278Address)
                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_6bfdb278Address)
                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                if sub_c375a48bAddress:
                                    require ext_code.size(sub_c375a48bAddress)
                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_c375a48bAddress)
                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), 17 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg2 <= 15778476:
                                    if lockedAmount[address(arg1)].field_512 * arg2 and 20 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                        revert with 0, 17
                                    if not sub_fa78668f:
                                        revert with 0, 18
                                    lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                    if not address(arg1):
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if totalSupply > !(20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    totalSupply += 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                    if balanceOf[address(arg1)] > !(20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    balanceOf[address(arg1)] += 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                    emit Transfer((20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                    if delegates[address(arg1)] != 0:
                                        if 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                            if delegates[address(arg1)]:
                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                    if 0 > !(20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        else:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                    emit DelegateVotesChanged(0, 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                else:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        else:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                    if sub_6bfdb278Address:
                                        require ext_code.size(sub_6bfdb278Address)
                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_6bfdb278Address)
                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args address(arg1), 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    if sub_c375a48bAddress:
                                        require ext_code.size(sub_c375a48bAddress)
                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_c375a48bAddress)
                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args address(arg1), 20 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg2 <= 18408222:
                                        if lockedAmount[address(arg1)].field_512 * arg2 and 23 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                            revert with 0, 17
                                        if not sub_fa78668f:
                                            revert with 0, 18
                                        lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                        if not address(arg1):
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if totalSupply > !(23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        totalSupply += 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        if balanceOf[address(arg1)] > !(23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        balanceOf[address(arg1)] += 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                        emit Transfer((23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                        if delegates[address(arg1)] != 0:
                                            if 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                if delegates[address(arg1)]:
                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                        if 0 > !(23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            else:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                        emit DelegateVotesChanged(0, 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                    else:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            else:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                        if sub_6bfdb278Address:
                                            require ext_code.size(sub_6bfdb278Address)
                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_6bfdb278Address)
                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        if sub_c375a48bAddress:
                                            require ext_code.size(sub_c375a48bAddress)
                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_c375a48bAddress)
                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args address(arg1), 23 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if arg2 <= 21037968:
                                            if lockedAmount[address(arg1)].field_512 * arg2 and 27 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                revert with 0, 17
                                            if not sub_fa78668f:
                                                revert with 0, 18
                                            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                            if not address(arg1):
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if totalSupply > !(27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            totalSupply += 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            if balanceOf[address(arg1)] > !(27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            balanceOf[address(arg1)] += 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                            emit Transfer((27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                            if delegates[address(arg1)] != 0:
                                                if 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                    if delegates[address(arg1)]:
                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                            if 0 > !(27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                else:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                            emit DelegateVotesChanged(0, 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                        else:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                else:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                            if sub_6bfdb278Address:
                                                require ext_code.size(sub_6bfdb278Address)
                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                            if sub_c375a48bAddress:
                                                require ext_code.size(sub_c375a48bAddress)
                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args address(arg1), 27 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if arg2 <= 23667714:
                                                if lockedAmount[address(arg1)].field_512 * arg2 and 31 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                    revert with 0, 17
                                                if not sub_fa78668f:
                                                    revert with 0, 18
                                                lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                if not address(arg1):
                                                    revert with 0, 'ERC20: mint to the zero address'
                                                if totalSupply > !(31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                totalSupply += 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                if balanceOf[address(arg1)] > !(31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] += 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                emit Transfer((31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                if delegates[address(arg1)] != 0:
                                                    if 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                        if delegates[address(arg1)]:
                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                if 0 > !(31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    else:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                emit DelegateVotesChanged(0, 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                            else:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    else:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                if sub_6bfdb278Address:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args address(arg1), 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                if sub_c375a48bAddress:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args address(arg1), 31 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if arg2 <= 26297460:
                                                    if lockedAmount[address(arg1)].field_512 * arg2 and 35 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                        revert with 0, 17
                                                    if not sub_fa78668f:
                                                        revert with 0, 18
                                                    lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                    if not address(arg1):
                                                        revert with 0, 'ERC20: mint to the zero address'
                                                    if totalSupply > !(35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    totalSupply += 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    if balanceOf[address(arg1)] > !(35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)] += 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                    emit Transfer((35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                    if delegates[address(arg1)] != 0:
                                                        if 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                            if delegates[address(arg1)]:
                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                    if 0 > !(35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        else:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                    emit DelegateVotesChanged(0, 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                else:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        else:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                    if sub_6bfdb278Address:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args address(arg1), 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                    if sub_c375a48bAddress:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args address(arg1), 35 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if arg2 <= 28927206:
                                                        if lockedAmount[address(arg1)].field_512 * arg2 and 40 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                            revert with 0, 17
                                                        if not sub_fa78668f:
                                                            revert with 0, 18
                                                        lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                        if not address(arg1):
                                                            revert with 0, 'ERC20: mint to the zero address'
                                                        if totalSupply > !(40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        totalSupply += 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        if balanceOf[address(arg1)] > !(40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)] += 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                        emit Transfer((40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                        if delegates[address(arg1)] != 0:
                                                            if 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                if delegates[address(arg1)]:
                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                        if 0 > !(40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            else:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                        emit DelegateVotesChanged(0, 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                    else:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            else:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                        if sub_6bfdb278Address:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args address(arg1), 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                        if sub_c375a48bAddress:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args address(arg1), 40 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if arg2 <= 31556952:
                                                            if lockedAmount[address(arg1)].field_512 * arg2 and 47 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                revert with 0, 17
                                                            if not sub_fa78668f:
                                                                revert with 0, 18
                                                            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                            if not address(arg1):
                                                                revert with 0, 'ERC20: mint to the zero address'
                                                            if totalSupply > !(47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            totalSupply += 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            if balanceOf[address(arg1)] > !(47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] += 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                            emit Transfer((47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                            if delegates[address(arg1)] != 0:
                                                                if 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                    if delegates[address(arg1)]:
                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                            if 0 > !(47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                else:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                            emit DelegateVotesChanged(0, 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                        else:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                else:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                            if sub_6bfdb278Address:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args address(arg1), 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                            if sub_c375a48bAddress:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args address(arg1), 47 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if arg2 <= 34186698:
                                                                if lockedAmount[address(arg1)].field_512 * arg2 and 54 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                    revert with 0, 17
                                                                if not sub_fa78668f:
                                                                    revert with 0, 18
                                                                lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                if not address(arg1):
                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                if totalSupply > !(54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                totalSupply += 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                if balanceOf[address(arg1)] > !(54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] += 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                emit Transfer((54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                if delegates[address(arg1)] != 0:
                                                                    if 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                        if delegates[address(arg1)]:
                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                if 0 > !(54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    else:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                emit DelegateVotesChanged(0, 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                            else:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    else:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                if sub_6bfdb278Address:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args address(arg1), 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                if sub_c375a48bAddress:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args address(arg1), 54 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if arg2 <= 36816444:
                                                                    if lockedAmount[address(arg1)].field_512 * arg2 and 62 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                        revert with 0, 17
                                                                    if not sub_fa78668f:
                                                                        revert with 0, 18
                                                                    lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                    if not address(arg1):
                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                    if totalSupply > !(62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    totalSupply += 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    if balanceOf[address(arg1)] > !(62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] += 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                    emit Transfer((62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                    if delegates[address(arg1)] != 0:
                                                                        if 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                            if delegates[address(arg1)]:
                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                    if 0 > !(62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        else:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                    emit DelegateVotesChanged(0, 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        else:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                    if sub_6bfdb278Address:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args address(arg1), 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                    if sub_c375a48bAddress:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args address(arg1), 62 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if arg2 <= 39446190:
                                                                        if lockedAmount[address(arg1)].field_512 * arg2 and 71 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                            revert with 0, 17
                                                                        if not sub_fa78668f:
                                                                            revert with 0, 18
                                                                        lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                        if not address(arg1):
                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                        if totalSupply > !(71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        totalSupply += 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        if balanceOf[address(arg1)] > !(71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] += 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                        emit Transfer((71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                        if delegates[address(arg1)] != 0:
                                                                            if 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                if delegates[address(arg1)]:
                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                        if 0 > !(71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            else:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                        emit DelegateVotesChanged(0, 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            else:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                        if sub_6bfdb278Address:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args address(arg1), 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                        if sub_c375a48bAddress:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args address(arg1), 71 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if arg2 <= 42075936:
                                                                            if lockedAmount[address(arg1)].field_512 * arg2 and 81 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                revert with 0, 17
                                                                            if not sub_fa78668f:
                                                                                revert with 0, 18
                                                                            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                            if not address(arg1):
                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                            if totalSupply > !(81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            totalSupply += 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            if balanceOf[address(arg1)] > !(81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] += 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                            emit Transfer((81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                            if delegates[address(arg1)] != 0:
                                                                                if 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                    if delegates[address(arg1)]:
                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                            if 0 > !(81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                else:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                            emit DelegateVotesChanged(0, 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                else:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                            if sub_6bfdb278Address:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args address(arg1), 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                            if sub_c375a48bAddress:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args address(arg1), 81 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            if arg2 <= 44705682:
                                                                                if lockedAmount[address(arg1)].field_512 * arg2 and 94 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                    revert with 0, 17
                                                                                if not sub_fa78668f:
                                                                                    revert with 0, 18
                                                                                lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                if not address(arg1):
                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                if totalSupply > !(94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                totalSupply += 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                if balanceOf[address(arg1)] > !(94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                balanceOf[address(arg1)] += 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                emit Transfer((94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                if delegates[address(arg1)] != 0:
                                                                                    if 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                        if delegates[address(arg1)]:
                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                if 0 > !(94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                emit DelegateVotesChanged(0, 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                if sub_6bfdb278Address:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args address(arg1), 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                if sub_c375a48bAddress:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args address(arg1), 94 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                if arg2 <= 47335428:
                                                                                    if lockedAmount[address(arg1)].field_512 * arg2 and 108 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                        revert with 0, 17
                                                                                    if not sub_fa78668f:
                                                                                        revert with 0, 18
                                                                                    lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                    if not address(arg1):
                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                    if totalSupply > !(108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    totalSupply += 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    if balanceOf[address(arg1)] > !(108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    balanceOf[address(arg1)] += 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                    emit Transfer((108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                    if delegates[address(arg1)] != 0:
                                                                                        if 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                            if delegates[address(arg1)]:
                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                    if 0 > !(108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                    emit DelegateVotesChanged(0, 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                    if sub_6bfdb278Address:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args address(arg1), 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                    if sub_c375a48bAddress:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args address(arg1), 108 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    if arg2 <= 49965174:
                                                                                        if lockedAmount[address(arg1)].field_512 * arg2 and 124 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                            revert with 0, 17
                                                                                        if not sub_fa78668f:
                                                                                            revert with 0, 18
                                                                                        lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                        if not address(arg1):
                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                        if totalSupply > !(124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        totalSupply += 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        if balanceOf[address(arg1)] > !(124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        balanceOf[address(arg1)] += 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                        emit Transfer((124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                        if delegates[address(arg1)] != 0:
                                                                                            if 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                                if delegates[address(arg1)]:
                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                        if 0 > !(124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                        emit DelegateVotesChanged(0, 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                        if sub_6bfdb278Address:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args address(arg1), 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                        if sub_c375a48bAddress:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args address(arg1), 124 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        if arg2 <= 52594920:
                                                                                            if lockedAmount[address(arg1)].field_512 * arg2 and 142 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                                revert with 0, 17
                                                                                            if not sub_fa78668f:
                                                                                                revert with 0, 18
                                                                                            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                            if not address(arg1):
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            if totalSupply > !(142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            totalSupply += 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            if balanceOf[address(arg1)] > !(142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            balanceOf[address(arg1)] += 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                            emit Transfer((142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                            if delegates[address(arg1)] != 0:
                                                                                                if 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                                    if delegates[address(arg1)]:
                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                            if 0 > !(142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                            emit DelegateVotesChanged(0, 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                            if sub_6bfdb278Address:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args address(arg1), 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                            if sub_c375a48bAddress:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args address(arg1), 142 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            if arg2 <= 55224666:
                                                                                                if lockedAmount[address(arg1)].field_512 * arg2 and 164 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                                    revert with 0, 17
                                                                                                if not sub_fa78668f:
                                                                                                    revert with 0, 18
                                                                                                lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                                if not address(arg1):
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                if totalSupply > !(164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                totalSupply += 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                if balanceOf[address(arg1)] > !(164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                balanceOf[address(arg1)] += 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                emit Transfer((164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                                if delegates[address(arg1)] != 0:
                                                                                                    if 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                                        if delegates[address(arg1)]:
                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                if 0 > !(164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                emit DelegateVotesChanged(0, 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                                if sub_6bfdb278Address:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args address(arg1), 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                if sub_c375a48bAddress:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args address(arg1), 164 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                if arg2 <= 57854412:
                                                                                                    if lockedAmount[address(arg1)].field_512 * arg2 and 188 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                                        revert with 0, 17
                                                                                                    if not sub_fa78668f:
                                                                                                        revert with 0, 18
                                                                                                    lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                                    if not address(arg1):
                                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                                    if totalSupply > !(188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    totalSupply += 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    if balanceOf[address(arg1)] > !(188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    balanceOf[address(arg1)] += 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                    emit Transfer((188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                                    if delegates[address(arg1)] != 0:
                                                                                                        if 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                                            if delegates[address(arg1)]:
                                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    if 0 > !(188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    emit DelegateVotesChanged(0, 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                                    if sub_6bfdb278Address:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args address(arg1), 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                    if sub_c375a48bAddress:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args address(arg1), 188 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    if arg2 <= 60484158:
                                                                                                        if lockedAmount[address(arg1)].field_512 * arg2 and 216 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                                            revert with 0, 17
                                                                                                        if not sub_fa78668f:
                                                                                                            revert with 0, 18
                                                                                                        lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                                        if not address(arg1):
                                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                                        if totalSupply > !(216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        totalSupply += 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        if balanceOf[address(arg1)] > !(216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        balanceOf[address(arg1)] += 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                        emit Transfer((216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                                        if delegates[address(arg1)] != 0:
                                                                                                            if 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                                                if delegates[address(arg1)]:
                                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        if 0 > !(216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        emit DelegateVotesChanged(0, 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                                        if sub_6bfdb278Address:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args address(arg1), 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                        if sub_c375a48bAddress:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args address(arg1), 216 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        if arg2 > 63113904:
                                                                                                            if lockedAmount[address(arg1)].field_512 * arg2 and 0 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                                            if not address(arg1):
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !(0 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply += 0 / sub_fa78668f / 100
                                                                                                            if balanceOf[address(arg1)] > !(0 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(arg1)] += 0 / sub_fa78668f / 100
                                                                                                            emit Transfer((0 / sub_fa78668f / 100), 0, address(arg1));
                                                                                                            if delegates[address(arg1)] != 0:
                                                                                                                if 0 / sub_fa78668f / 100 > 0:
                                                                                                                    if delegates[address(arg1)]:
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            if 0 > !(0 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 0 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(0, 0 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(0 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 0 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), 0 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), 0 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if lockedAmount[address(arg1)].field_512 * arg2 and 249 > -1 / lockedAmount[address(arg1)].field_512 * arg2:
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            lockedAmount[address(arg1)].field_256 = block.timestamp + arg2
                                                                                                            if not address(arg1):
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !(249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply += 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            if balanceOf[address(arg1)] > !(249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(arg1)] += 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                            emit Transfer((249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), 0, address(arg1));
                                                                                                            if delegates[address(arg1)] != 0:
                                                                                                                if 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100 > 0:
                                                                                                                    if delegates[address(arg1)]:
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            if 0 > !(249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(0, 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100, delegates[address(arg1)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 += 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100)
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100), delegates[address(arg1)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), 249 * lockedAmount[address(arg1)].field_512 * arg2 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
    else:
        if lockedAmount[address(arg1)].field_256 < lockedAmount[address(arg1)].field_0:
            revert with 0, 17
        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 > !arg2:
            revert with 0, 17
        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 > sub_fa78668f:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Greater than MAX_LOCK_TIME'
        if lockedAmount[address(arg1)].field_256 > !arg2:
            revert with 0, 17
        if lockedAmount[address(arg1)].field_512 and lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 > -1 / lockedAmount[address(arg1)].field_512:
            revert with 0, 17
        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 0:
            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 0 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                revert with 0, 17
            if not sub_fa78668f:
                revert with 0, 18
            if 0 / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                revert with 0, 17
            lockedAmount[address(arg1)].field_256 += arg2
            if not address(arg1):
                revert with 0, 'ERC20: mint to the zero address'
            if totalSupply > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                revert with 0, 17
            totalSupply = totalSupply + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
            if balanceOf[address(arg1)] > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                revert with 0, 17
            balanceOf[address(arg1)] = 0 / sub_fa78668f / 100
            emit Transfer(((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
            if delegates[address(arg1)] != 0:
                if (0 / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                    if delegates[address(arg1)]:
                        if not numCheckpoints[stor10[address(arg1)]]:
                            if 0 > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(arg1)]]:
                                checkpoints[stor10[address(arg1)]].field_0++
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(arg1)]]++
                            else:
                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                else:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                            emit DelegateVotesChanged(0, (0 / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                        else:
                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                revert with 0, 17
                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                revert with 0, 50
                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(arg1)]]:
                                checkpoints[stor10[address(arg1)]].field_0++
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(arg1)]]++
                            else:
                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                else:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
            if sub_6bfdb278Address:
                require ext_code.size(sub_6bfdb278Address)
                staticcall sub_6bfdb278Address.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_6bfdb278Address)
                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(arg1), (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            if sub_c375a48bAddress:
                require ext_code.size(sub_c375a48bAddress)
                staticcall sub_c375a48bAddress.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_c375a48bAddress)
                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args address(arg1), (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        else:
            if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 2629746:
                if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 10 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                    revert with 0, 17
                if not sub_fa78668f:
                    revert with 0, 18
                if (10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                    revert with 0, 17
                lockedAmount[address(arg1)].field_256 += arg2
                if not address(arg1):
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                    revert with 0, 17
                totalSupply = totalSupply + ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                if balanceOf[address(arg1)] > !(((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                    revert with 0, 17
                balanceOf[address(arg1)] = (10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                emit Transfer((((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                if delegates[address(arg1)] != 0:
                    if ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                        if delegates[address(arg1)]:
                            if not numCheckpoints[stor10[address(arg1)]]:
                                if 0 > !(((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(arg1)]]:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                                else:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    else:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                emit DelegateVotesChanged(0, ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                            else:
                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(arg1)]]:
                                    checkpoints[stor10[address(arg1)]].field_0++
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(arg1)]]++
                                else:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    else:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                if sub_6bfdb278Address:
                    require ext_code.size(sub_6bfdb278Address)
                    staticcall sub_6bfdb278Address.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_6bfdb278Address)
                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(arg1), ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                if sub_c375a48bAddress:
                    require ext_code.size(sub_c375a48bAddress)
                    staticcall sub_c375a48bAddress.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_c375a48bAddress)
                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args address(arg1), ((10 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (10 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (10 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            else:
                if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 5259492:
                    if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 12 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                        revert with 0, 17
                    if not sub_fa78668f:
                        revert with 0, 18
                    if (12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                        revert with 0, 17
                    lockedAmount[address(arg1)].field_256 += arg2
                    if not address(arg1):
                        revert with 0, 'ERC20: mint to the zero address'
                    if totalSupply > !(((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                        revert with 0, 17
                    totalSupply = totalSupply + ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                    if balanceOf[address(arg1)] > !(((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                        revert with 0, 17
                    balanceOf[address(arg1)] = (12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                    emit Transfer((((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                    if delegates[address(arg1)] != 0:
                        if ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                            if delegates[address(arg1)]:
                                if not numCheckpoints[stor10[address(arg1)]]:
                                    if 0 > !(((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(arg1)]]:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                    else:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        else:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                    emit DelegateVotesChanged(0, ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                else:
                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(arg1)]]:
                                        checkpoints[stor10[address(arg1)]].field_0++
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(arg1)]]++
                                    else:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        else:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                    if sub_6bfdb278Address:
                        require ext_code.size(sub_6bfdb278Address)
                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_6bfdb278Address)
                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(arg1), ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    if sub_c375a48bAddress:
                        require ext_code.size(sub_c375a48bAddress)
                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_c375a48bAddress)
                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args address(arg1), ((12 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (12 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (12 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 7889238:
                        if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 13 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                            revert with 0, 17
                        if not sub_fa78668f:
                            revert with 0, 18
                        if (13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                            revert with 0, 17
                        lockedAmount[address(arg1)].field_256 += arg2
                        if not address(arg1):
                            revert with 0, 'ERC20: mint to the zero address'
                        if totalSupply > !(((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                            revert with 0, 17
                        totalSupply = totalSupply + ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                        if balanceOf[address(arg1)] > !(((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                            revert with 0, 17
                        balanceOf[address(arg1)] = (13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                        emit Transfer((((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                        if delegates[address(arg1)] != 0:
                            if ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                if delegates[address(arg1)]:
                                    if not numCheckpoints[stor10[address(arg1)]]:
                                        if 0 > !(((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(arg1)]]:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                        else:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            else:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                        emit DelegateVotesChanged(0, ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                    else:
                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(arg1)]]:
                                            checkpoints[stor10[address(arg1)]].field_0++
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(arg1)]]++
                                        else:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            else:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                        if sub_6bfdb278Address:
                            require ext_code.size(sub_6bfdb278Address)
                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_6bfdb278Address)
                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        if sub_c375a48bAddress:
                            require ext_code.size(sub_c375a48bAddress)
                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_c375a48bAddress)
                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args address(arg1), ((13 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (13 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (13 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 10518984:
                            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 15 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                revert with 0, 17
                            if not sub_fa78668f:
                                revert with 0, 18
                            if (15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                revert with 0, 17
                            lockedAmount[address(arg1)].field_256 += arg2
                            if not address(arg1):
                                revert with 0, 'ERC20: mint to the zero address'
                            if totalSupply > !(((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                revert with 0, 17
                            totalSupply = totalSupply + ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                            if balanceOf[address(arg1)] > !(((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                revert with 0, 17
                            balanceOf[address(arg1)] = (15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                            emit Transfer((((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                            if delegates[address(arg1)] != 0:
                                if ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                    if delegates[address(arg1)]:
                                        if not numCheckpoints[stor10[address(arg1)]]:
                                            if 0 > !(((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                            else:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                else:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                            emit DelegateVotesChanged(0, ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                        else:
                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                checkpoints[stor10[address(arg1)]].field_0++
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(arg1)]]++
                                            else:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                else:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                            if sub_6bfdb278Address:
                                require ext_code.size(sub_6bfdb278Address)
                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_6bfdb278Address)
                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            if sub_c375a48bAddress:
                                require ext_code.size(sub_c375a48bAddress)
                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_c375a48bAddress)
                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args address(arg1), ((15 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (15 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (15 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 13148730:
                                if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 17 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                    revert with 0, 17
                                if not sub_fa78668f:
                                    revert with 0, 18
                                if (17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                    revert with 0, 17
                                lockedAmount[address(arg1)].field_256 += arg2
                                if not address(arg1):
                                    revert with 0, 'ERC20: mint to the zero address'
                                if totalSupply > !(((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                    revert with 0, 17
                                totalSupply = totalSupply + ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                if balanceOf[address(arg1)] > !(((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                    revert with 0, 17
                                balanceOf[address(arg1)] = (17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                emit Transfer((((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                if delegates[address(arg1)] != 0:
                                    if ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                        if delegates[address(arg1)]:
                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                if 0 > !(((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    else:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                emit DelegateVotesChanged(0, ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                            else:
                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(arg1)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    else:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                if sub_6bfdb278Address:
                                    require ext_code.size(sub_6bfdb278Address)
                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_6bfdb278Address)
                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                if sub_c375a48bAddress:
                                    require ext_code.size(sub_c375a48bAddress)
                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_c375a48bAddress)
                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args address(arg1), ((17 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (17 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (17 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 15778476:
                                    if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 20 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                        revert with 0, 17
                                    if not sub_fa78668f:
                                        revert with 0, 18
                                    if (20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                        revert with 0, 17
                                    lockedAmount[address(arg1)].field_256 += arg2
                                    if not address(arg1):
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if totalSupply > !(((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                        revert with 0, 17
                                    totalSupply = totalSupply + ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                    if balanceOf[address(arg1)] > !(((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                        revert with 0, 17
                                    balanceOf[address(arg1)] = (20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                    emit Transfer((((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                    if delegates[address(arg1)] != 0:
                                        if ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                            if delegates[address(arg1)]:
                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                    if 0 > !(((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        else:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                    emit DelegateVotesChanged(0, ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                else:
                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(arg1)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        else:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                    if sub_6bfdb278Address:
                                        require ext_code.size(sub_6bfdb278Address)
                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_6bfdb278Address)
                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args address(arg1), ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    if sub_c375a48bAddress:
                                        require ext_code.size(sub_c375a48bAddress)
                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_c375a48bAddress)
                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args address(arg1), ((20 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (20 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (20 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 18408222:
                                        if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 23 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                            revert with 0, 17
                                        if not sub_fa78668f:
                                            revert with 0, 18
                                        if (23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                            revert with 0, 17
                                        lockedAmount[address(arg1)].field_256 += arg2
                                        if not address(arg1):
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if totalSupply > !(((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                            revert with 0, 17
                                        totalSupply = totalSupply + ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                        if balanceOf[address(arg1)] > !(((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                            revert with 0, 17
                                        balanceOf[address(arg1)] = (23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                        emit Transfer((((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                        if delegates[address(arg1)] != 0:
                                            if ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                if delegates[address(arg1)]:
                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                        if 0 > !(((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            else:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                        emit DelegateVotesChanged(0, ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                    else:
                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(arg1)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            else:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                        if sub_6bfdb278Address:
                                            require ext_code.size(sub_6bfdb278Address)
                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_6bfdb278Address)
                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args address(arg1), ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        if sub_c375a48bAddress:
                                            require ext_code.size(sub_c375a48bAddress)
                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_c375a48bAddress)
                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args address(arg1), ((23 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (23 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (23 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 21037968:
                                            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 27 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                revert with 0, 17
                                            if not sub_fa78668f:
                                                revert with 0, 18
                                            if (27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                revert with 0, 17
                                            lockedAmount[address(arg1)].field_256 += arg2
                                            if not address(arg1):
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if totalSupply > !(((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                revert with 0, 17
                                            totalSupply = totalSupply + ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                            if balanceOf[address(arg1)] > !(((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                revert with 0, 17
                                            balanceOf[address(arg1)] = (27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                            emit Transfer((((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                            if delegates[address(arg1)] != 0:
                                                if ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                    if delegates[address(arg1)]:
                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                            if 0 > !(((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                else:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                            emit DelegateVotesChanged(0, ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                        else:
                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(arg1)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                else:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                            if sub_6bfdb278Address:
                                                require ext_code.size(sub_6bfdb278Address)
                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args address(arg1), ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                            if sub_c375a48bAddress:
                                                require ext_code.size(sub_c375a48bAddress)
                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args address(arg1), ((27 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (27 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (27 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 23667714:
                                                if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 31 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                    revert with 0, 17
                                                if not sub_fa78668f:
                                                    revert with 0, 18
                                                if (31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                    revert with 0, 17
                                                lockedAmount[address(arg1)].field_256 += arg2
                                                if not address(arg1):
                                                    revert with 0, 'ERC20: mint to the zero address'
                                                if totalSupply > !(((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                    revert with 0, 17
                                                totalSupply = totalSupply + ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                if balanceOf[address(arg1)] > !(((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                    revert with 0, 17
                                                balanceOf[address(arg1)] = (31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                emit Transfer((((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                if delegates[address(arg1)] != 0:
                                                    if ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                        if delegates[address(arg1)]:
                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                if 0 > !(((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    else:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                emit DelegateVotesChanged(0, ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                            else:
                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    else:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                if sub_6bfdb278Address:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args address(arg1), ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                if sub_c375a48bAddress:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args address(arg1), ((31 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (31 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (31 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 26297460:
                                                    if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 35 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                        revert with 0, 17
                                                    if not sub_fa78668f:
                                                        revert with 0, 18
                                                    if (35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                        revert with 0, 17
                                                    lockedAmount[address(arg1)].field_256 += arg2
                                                    if not address(arg1):
                                                        revert with 0, 'ERC20: mint to the zero address'
                                                    if totalSupply > !(((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                        revert with 0, 17
                                                    totalSupply = totalSupply + ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                    if balanceOf[address(arg1)] > !(((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                        revert with 0, 17
                                                    balanceOf[address(arg1)] = (35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                    emit Transfer((((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                    if delegates[address(arg1)] != 0:
                                                        if ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                            if delegates[address(arg1)]:
                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                    if 0 > !(((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        else:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                    emit DelegateVotesChanged(0, ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                else:
                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        else:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                    if sub_6bfdb278Address:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args address(arg1), ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                    if sub_c375a48bAddress:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args address(arg1), ((35 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (35 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (35 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 28927206:
                                                        if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 40 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                            revert with 0, 17
                                                        if not sub_fa78668f:
                                                            revert with 0, 18
                                                        if (40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                            revert with 0, 17
                                                        lockedAmount[address(arg1)].field_256 += arg2
                                                        if not address(arg1):
                                                            revert with 0, 'ERC20: mint to the zero address'
                                                        if totalSupply > !(((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                            revert with 0, 17
                                                        totalSupply = totalSupply + ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                        if balanceOf[address(arg1)] > !(((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                            revert with 0, 17
                                                        balanceOf[address(arg1)] = (40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                        emit Transfer((((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                        if delegates[address(arg1)] != 0:
                                                            if ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                if delegates[address(arg1)]:
                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                        if 0 > !(((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            else:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                        emit DelegateVotesChanged(0, ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                    else:
                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            else:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                        if sub_6bfdb278Address:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args address(arg1), ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                        if sub_c375a48bAddress:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args address(arg1), ((40 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (40 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (40 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 31556952:
                                                            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 47 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                revert with 0, 17
                                                            if not sub_fa78668f:
                                                                revert with 0, 18
                                                            if (47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                revert with 0, 17
                                                            lockedAmount[address(arg1)].field_256 += arg2
                                                            if not address(arg1):
                                                                revert with 0, 'ERC20: mint to the zero address'
                                                            if totalSupply > !(((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                revert with 0, 17
                                                            totalSupply = totalSupply + ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                            if balanceOf[address(arg1)] > !(((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                revert with 0, 17
                                                            balanceOf[address(arg1)] = (47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                            emit Transfer((((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                            if delegates[address(arg1)] != 0:
                                                                if ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                    if delegates[address(arg1)]:
                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                            if 0 > !(((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                else:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                            emit DelegateVotesChanged(0, ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                        else:
                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                else:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                            if sub_6bfdb278Address:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args address(arg1), ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                            if sub_c375a48bAddress:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args address(arg1), ((47 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (47 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (47 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 34186698:
                                                                if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 54 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                    revert with 0, 17
                                                                if not sub_fa78668f:
                                                                    revert with 0, 18
                                                                if (54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                    revert with 0, 17
                                                                lockedAmount[address(arg1)].field_256 += arg2
                                                                if not address(arg1):
                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                if totalSupply > !(((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                    revert with 0, 17
                                                                totalSupply = totalSupply + ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                if balanceOf[address(arg1)] > !(((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                    revert with 0, 17
                                                                balanceOf[address(arg1)] = (54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                emit Transfer((((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                if delegates[address(arg1)] != 0:
                                                                    if ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                        if delegates[address(arg1)]:
                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                if 0 > !(((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    else:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                emit DelegateVotesChanged(0, ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                            else:
                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    else:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                if sub_6bfdb278Address:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args address(arg1), ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                if sub_c375a48bAddress:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args address(arg1), ((54 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (54 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (54 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 36816444:
                                                                    if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 62 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                        revert with 0, 17
                                                                    if not sub_fa78668f:
                                                                        revert with 0, 18
                                                                    if (62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                        revert with 0, 17
                                                                    lockedAmount[address(arg1)].field_256 += arg2
                                                                    if not address(arg1):
                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                    if totalSupply > !(((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                        revert with 0, 17
                                                                    totalSupply = totalSupply + ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                    if balanceOf[address(arg1)] > !(((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                        revert with 0, 17
                                                                    balanceOf[address(arg1)] = (62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                    emit Transfer((((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                    if delegates[address(arg1)] != 0:
                                                                        if ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                            if delegates[address(arg1)]:
                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                    if 0 > !(((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        else:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                    emit DelegateVotesChanged(0, ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        else:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                    if sub_6bfdb278Address:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args address(arg1), ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                    if sub_c375a48bAddress:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args address(arg1), ((62 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (62 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (62 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 39446190:
                                                                        if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 71 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                            revert with 0, 17
                                                                        if not sub_fa78668f:
                                                                            revert with 0, 18
                                                                        if (71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                            revert with 0, 17
                                                                        lockedAmount[address(arg1)].field_256 += arg2
                                                                        if not address(arg1):
                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                        if totalSupply > !(((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                            revert with 0, 17
                                                                        totalSupply = totalSupply + ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                        if balanceOf[address(arg1)] > !(((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                            revert with 0, 17
                                                                        balanceOf[address(arg1)] = (71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                        emit Transfer((((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                        if delegates[address(arg1)] != 0:
                                                                            if ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                if delegates[address(arg1)]:
                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                        if 0 > !(((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            else:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                        emit DelegateVotesChanged(0, ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            else:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                        if sub_6bfdb278Address:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args address(arg1), ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                        if sub_c375a48bAddress:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args address(arg1), ((71 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (71 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (71 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 42075936:
                                                                            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 81 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                revert with 0, 17
                                                                            if not sub_fa78668f:
                                                                                revert with 0, 18
                                                                            if (81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                revert with 0, 17
                                                                            lockedAmount[address(arg1)].field_256 += arg2
                                                                            if not address(arg1):
                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                            if totalSupply > !(((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                revert with 0, 17
                                                                            totalSupply = totalSupply + ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                            if balanceOf[address(arg1)] > !(((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                revert with 0, 17
                                                                            balanceOf[address(arg1)] = (81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                            emit Transfer((((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                            if delegates[address(arg1)] != 0:
                                                                                if ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                    if delegates[address(arg1)]:
                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                            if 0 > !(((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                else:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                            emit DelegateVotesChanged(0, ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                else:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                            if sub_6bfdb278Address:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args address(arg1), ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                            if sub_c375a48bAddress:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args address(arg1), ((81 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (81 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (81 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 44705682:
                                                                                if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 94 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                    revert with 0, 17
                                                                                if not sub_fa78668f:
                                                                                    revert with 0, 18
                                                                                if (94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                    revert with 0, 17
                                                                                lockedAmount[address(arg1)].field_256 += arg2
                                                                                if not address(arg1):
                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                if totalSupply > !(((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                    revert with 0, 17
                                                                                totalSupply = totalSupply + ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                if balanceOf[address(arg1)] > !(((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                    revert with 0, 17
                                                                                balanceOf[address(arg1)] = (94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                emit Transfer((((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                if delegates[address(arg1)] != 0:
                                                                                    if ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                        if delegates[address(arg1)]:
                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                if 0 > !(((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                emit DelegateVotesChanged(0, ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                if sub_6bfdb278Address:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args address(arg1), ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                if sub_c375a48bAddress:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args address(arg1), ((94 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (94 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (94 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 47335428:
                                                                                    if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 108 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                        revert with 0, 17
                                                                                    if not sub_fa78668f:
                                                                                        revert with 0, 18
                                                                                    if (108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                        revert with 0, 17
                                                                                    lockedAmount[address(arg1)].field_256 += arg2
                                                                                    if not address(arg1):
                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                    if totalSupply > !(((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                        revert with 0, 17
                                                                                    totalSupply = totalSupply + ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                    if balanceOf[address(arg1)] > !(((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                        revert with 0, 17
                                                                                    balanceOf[address(arg1)] = (108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                    emit Transfer((((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                    if delegates[address(arg1)] != 0:
                                                                                        if ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                            if delegates[address(arg1)]:
                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                    if 0 > !(((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                    emit DelegateVotesChanged(0, ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                    if sub_6bfdb278Address:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args address(arg1), ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                    if sub_c375a48bAddress:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args address(arg1), ((108 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (108 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (108 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 49965174:
                                                                                        if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 124 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                            revert with 0, 17
                                                                                        if not sub_fa78668f:
                                                                                            revert with 0, 18
                                                                                        if (124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                            revert with 0, 17
                                                                                        lockedAmount[address(arg1)].field_256 += arg2
                                                                                        if not address(arg1):
                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                        if totalSupply > !(((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                            revert with 0, 17
                                                                                        totalSupply = totalSupply + ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                        if balanceOf[address(arg1)] > !(((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                            revert with 0, 17
                                                                                        balanceOf[address(arg1)] = (124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                        emit Transfer((((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                        if delegates[address(arg1)] != 0:
                                                                                            if ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                                if delegates[address(arg1)]:
                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                        if 0 > !(((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                        emit DelegateVotesChanged(0, ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                        if sub_6bfdb278Address:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args address(arg1), ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                        if sub_c375a48bAddress:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args address(arg1), ((124 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (124 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (124 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 52594920:
                                                                                            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 142 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                                revert with 0, 17
                                                                                            if not sub_fa78668f:
                                                                                                revert with 0, 18
                                                                                            if (142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                                revert with 0, 17
                                                                                            lockedAmount[address(arg1)].field_256 += arg2
                                                                                            if not address(arg1):
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            if totalSupply > !(((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                revert with 0, 17
                                                                                            totalSupply = totalSupply + ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                            if balanceOf[address(arg1)] > !(((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                revert with 0, 17
                                                                                            balanceOf[address(arg1)] = (142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                            emit Transfer((((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                            if delegates[address(arg1)] != 0:
                                                                                                if ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                                    if delegates[address(arg1)]:
                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                            if 0 > !(((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                            emit DelegateVotesChanged(0, ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                            if sub_6bfdb278Address:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args address(arg1), ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                            if sub_c375a48bAddress:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args address(arg1), ((142 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (142 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (142 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 55224666:
                                                                                                if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 164 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                                    revert with 0, 17
                                                                                                if not sub_fa78668f:
                                                                                                    revert with 0, 18
                                                                                                if (164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                                    revert with 0, 17
                                                                                                lockedAmount[address(arg1)].field_256 += arg2
                                                                                                if not address(arg1):
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                if totalSupply > !(((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                    revert with 0, 17
                                                                                                totalSupply = totalSupply + ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                if balanceOf[address(arg1)] > !(((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                    revert with 0, 17
                                                                                                balanceOf[address(arg1)] = (164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                                emit Transfer((((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                                if delegates[address(arg1)] != 0:
                                                                                                    if ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                                        if delegates[address(arg1)]:
                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                if 0 > !(((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                emit DelegateVotesChanged(0, ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                if sub_6bfdb278Address:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args address(arg1), ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                if sub_c375a48bAddress:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args address(arg1), ((164 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (164 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (164 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 57854412:
                                                                                                    if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 188 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                                        revert with 0, 17
                                                                                                    if not sub_fa78668f:
                                                                                                        revert with 0, 18
                                                                                                    if (188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                                        revert with 0, 17
                                                                                                    lockedAmount[address(arg1)].field_256 += arg2
                                                                                                    if not address(arg1):
                                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                                    if totalSupply > !(((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                        revert with 0, 17
                                                                                                    totalSupply = totalSupply + ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                    if balanceOf[address(arg1)] > !(((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                        revert with 0, 17
                                                                                                    balanceOf[address(arg1)] = (188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                                    emit Transfer((((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                                    if delegates[address(arg1)] != 0:
                                                                                                        if ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                                            if delegates[address(arg1)]:
                                                                                                                if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                    if 0 > !(((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    emit DelegateVotesChanged(0, ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                    if sub_6bfdb278Address:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args address(arg1), ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                    if sub_c375a48bAddress:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args address(arg1), ((188 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (188 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (188 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 <= 60484158:
                                                                                                        if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 216 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                                            revert with 0, 17
                                                                                                        if not sub_fa78668f:
                                                                                                            revert with 0, 18
                                                                                                        if (216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                                            revert with 0, 17
                                                                                                        lockedAmount[address(arg1)].field_256 += arg2
                                                                                                        if not address(arg1):
                                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                                        if totalSupply > !(((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                            revert with 0, 17
                                                                                                        totalSupply = totalSupply + ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                        if balanceOf[address(arg1)] > !(((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                            revert with 0, 17
                                                                                                        balanceOf[address(arg1)] = (216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                                        emit Transfer((((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                                        if delegates[address(arg1)] != 0:
                                                                                                            if ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                                                if delegates[address(arg1)]:
                                                                                                                    if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                        if 0 > !(((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        emit DelegateVotesChanged(0, ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                        if sub_6bfdb278Address:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args address(arg1), ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                        if sub_c375a48bAddress:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args address(arg1), ((216 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (216 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (216 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        if lockedAmount[address(arg1)].field_256 - lockedAmount[address(arg1)].field_0 + arg2 > 63113904:
                                                                                                            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 0 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            if 0 / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                                                revert with 0, 17
                                                                                                            lockedAmount[address(arg1)].field_256 += arg2
                                                                                                            if not address(arg1):
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply = totalSupply + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if balanceOf[address(arg1)] > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(arg1)] = 0 / sub_fa78668f / 100
                                                                                                            emit Transfer(((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                                            if delegates[address(arg1)] != 0:
                                                                                                                if (0 / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                                                    if delegates[address(arg1)]:
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            if 0 > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(0, (0 / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !((0 / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), (0 / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512) and 249 > -1 / (lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (arg2 * lockedAmount[address(arg1)].field_512):
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            if (249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100 < balanceOf[address(arg1)]:
                                                                                                                revert with 0, 17
                                                                                                            lockedAmount[address(arg1)].field_256 += arg2
                                                                                                            if not address(arg1):
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !(((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply = totalSupply + ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                            if balanceOf[address(arg1)] > !(((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(arg1)] = (249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100
                                                                                                            emit Transfer((((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]), 0, address(arg1));
                                                                                                            if delegates[address(arg1)] != 0:
                                                                                                                if ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)] > 0:
                                                                                                                    if delegates[address(arg1)]:
                                                                                                                        if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                            if 0 > !(((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(0, ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 > !(((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(arg1)]] - 1 >= checkpoints[stor10[address(arg1)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(arg1)]].field_0++
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(arg1)]][checkpoints[stor10[address(arg1)]].field_0].field_256 = checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(arg1)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(arg1)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256, checkpoints[stor10[address(arg1)]][stor9[stor10[address(arg1)]] - 1].field_256 + ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)], delegates[address(arg1)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args address(arg1), ((249 * lockedAmount[address(arg1)].field_256 * lockedAmount[address(arg1)].field_512) - (249 * lockedAmount[address(arg1)].field_0 * lockedAmount[address(arg1)].field_512) + (249 * arg2 * lockedAmount[address(arg1)].field_512) / sub_fa78668f / 100) - balanceOf[address(arg1)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
    stor2 = 1
}

function sub_66d587b3(?) payable {
    require calldata.size - 4 >= 32
    if stor2 == 2:
        revert with 0, 'ReentrancyGuard: reentrant call'
    stor2 = 2
    if msg.sender != tx.origin:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'Smart contract depositors not allowed'
    if not lockedAmount[address(msg.sender)].field_512:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Lock does not exist'
    if arg1 < sub_3ff03207:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Less than minimum MIN_LOCK_TIME'
    if arg1 > sub_fa78668f:
        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Greater than MAX_LOCK_TIME'
    if block.timestamp > lockedAmount[address(msg.sender)].field_256:
        if block.timestamp > !arg1:
            revert with 0, 17
        lockedAmount[address(msg.sender)].field_0 = block.timestamp
        if lockedAmount[address(msg.sender)].field_512 and arg1 > -1 / lockedAmount[address(msg.sender)].field_512:
            revert with 0, 17
        if arg1 <= 0:
            if lockedAmount[address(msg.sender)].field_512 * arg1 and 0 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                revert with 0, 17
            if not sub_fa78668f:
                revert with 0, 18
            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
            if not msg.sender:
                revert with 0, 'ERC20: mint to the zero address'
            if totalSupply > !(0 / sub_fa78668f / 100):
                revert with 0, 17
            totalSupply += 0 / sub_fa78668f / 100
            if balanceOf[address(msg.sender)] > !(0 / sub_fa78668f / 100):
                revert with 0, 17
            balanceOf[address(msg.sender)] += 0 / sub_fa78668f / 100
            emit Transfer((0 / sub_fa78668f / 100), 0, msg.sender);
            if delegates[address(msg.sender)] != 0:
                if 0 / sub_fa78668f / 100 > 0:
                    if delegates[address(msg.sender)]:
                        if not numCheckpoints[stor10[address(msg.sender)]]:
                            if 0 > !(0 / sub_fa78668f / 100):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                checkpoints[stor10[address(msg.sender)]].field_0++
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(msg.sender)]]++
                            else:
                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 0 / sub_fa78668f / 100
                                else:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                            emit DelegateVotesChanged(0, 0 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                        else:
                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                revert with 0, 17
                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                revert with 0, 50
                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(0 / sub_fa78668f / 100):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                checkpoints[stor10[address(msg.sender)]].field_0++
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(msg.sender)]]++
                            else:
                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 0 / sub_fa78668f / 100
                                else:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100), delegates[address(msg.sender)]);
            if sub_6bfdb278Address:
                require ext_code.size(sub_6bfdb278Address)
                staticcall sub_6bfdb278Address.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_6bfdb278Address)
                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args msg.sender, 0 / sub_fa78668f / 100
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            if sub_c375a48bAddress:
                require ext_code.size(sub_c375a48bAddress)
                staticcall sub_c375a48bAddress.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_c375a48bAddress)
                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args msg.sender, 0 / sub_fa78668f / 100
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        else:
            if arg1 <= 2629746:
                if lockedAmount[address(msg.sender)].field_512 * arg1 and 10 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                    revert with 0, 17
                if not sub_fa78668f:
                    revert with 0, 18
                lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                    revert with 0, 17
                totalSupply += 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                if balanceOf[address(msg.sender)] > !(10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                    revert with 0, 17
                balanceOf[address(msg.sender)] += 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                emit Transfer((10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                if delegates[address(msg.sender)] != 0:
                    if 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                        if delegates[address(msg.sender)]:
                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                if 0 > !(10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                                else:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                    else:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                emit DelegateVotesChanged(0, 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                            else:
                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                                else:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                    else:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                if sub_6bfdb278Address:
                    require ext_code.size(sub_6bfdb278Address)
                    staticcall sub_6bfdb278Address.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_6bfdb278Address)
                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args msg.sender, 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                if sub_c375a48bAddress:
                    require ext_code.size(sub_c375a48bAddress)
                    staticcall sub_c375a48bAddress.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_c375a48bAddress)
                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args msg.sender, 10 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            else:
                if arg1 <= 5259492:
                    if lockedAmount[address(msg.sender)].field_512 * arg1 and 12 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                        revert with 0, 17
                    if not sub_fa78668f:
                        revert with 0, 18
                    lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if totalSupply > !(12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                        revert with 0, 17
                    totalSupply += 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                    if balanceOf[address(msg.sender)] > !(12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                        revert with 0, 17
                    balanceOf[address(msg.sender)] += 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                    emit Transfer((12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                    if delegates[address(msg.sender)] != 0:
                        if 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                            if delegates[address(msg.sender)]:
                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                    if 0 > !(12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                    else:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        else:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                    emit DelegateVotesChanged(0, 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                else:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                    else:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        else:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                    if sub_6bfdb278Address:
                        require ext_code.size(sub_6bfdb278Address)
                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_6bfdb278Address)
                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args msg.sender, 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    if sub_c375a48bAddress:
                        require ext_code.size(sub_c375a48bAddress)
                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_c375a48bAddress)
                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args msg.sender, 12 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if arg1 <= 7889238:
                        if lockedAmount[address(msg.sender)].field_512 * arg1 and 13 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                            revert with 0, 17
                        if not sub_fa78668f:
                            revert with 0, 18
                        lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if totalSupply > !(13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                            revert with 0, 17
                        totalSupply += 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                        if balanceOf[address(msg.sender)] > !(13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                            revert with 0, 17
                        balanceOf[address(msg.sender)] += 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                        emit Transfer((13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                        if delegates[address(msg.sender)] != 0:
                            if 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                if delegates[address(msg.sender)]:
                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                        if 0 > !(13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                        else:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            else:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                        emit DelegateVotesChanged(0, 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                    else:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                        else:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            else:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                        if sub_6bfdb278Address:
                            require ext_code.size(sub_6bfdb278Address)
                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_6bfdb278Address)
                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args msg.sender, 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        if sub_c375a48bAddress:
                            require ext_code.size(sub_c375a48bAddress)
                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_c375a48bAddress)
                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args msg.sender, 13 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if arg1 <= 10518984:
                            if lockedAmount[address(msg.sender)].field_512 * arg1 and 15 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                revert with 0, 17
                            if not sub_fa78668f:
                                revert with 0, 18
                            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                            if not msg.sender:
                                revert with 0, 'ERC20: mint to the zero address'
                            if totalSupply > !(15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                revert with 0, 17
                            totalSupply += 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                            if balanceOf[address(msg.sender)] > !(15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                revert with 0, 17
                            balanceOf[address(msg.sender)] += 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                            emit Transfer((15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                            if delegates[address(msg.sender)] != 0:
                                if 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                    if delegates[address(msg.sender)]:
                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                            if 0 > !(15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                            else:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                else:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                            emit DelegateVotesChanged(0, 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                        else:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                            else:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                else:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                            if sub_6bfdb278Address:
                                require ext_code.size(sub_6bfdb278Address)
                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_6bfdb278Address)
                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args msg.sender, 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            if sub_c375a48bAddress:
                                require ext_code.size(sub_c375a48bAddress)
                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_c375a48bAddress)
                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args msg.sender, 15 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if arg1 <= 13148730:
                                if lockedAmount[address(msg.sender)].field_512 * arg1 and 17 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                    revert with 0, 17
                                if not sub_fa78668f:
                                    revert with 0, 18
                                lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                if not msg.sender:
                                    revert with 0, 'ERC20: mint to the zero address'
                                if totalSupply > !(17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                    revert with 0, 17
                                totalSupply += 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                if balanceOf[address(msg.sender)] > !(17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                    revert with 0, 17
                                balanceOf[address(msg.sender)] += 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                emit Transfer((17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                if delegates[address(msg.sender)] != 0:
                                    if 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                        if delegates[address(msg.sender)]:
                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                if 0 > !(17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    else:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                emit DelegateVotesChanged(0, 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                            else:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    else:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                if sub_6bfdb278Address:
                                    require ext_code.size(sub_6bfdb278Address)
                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_6bfdb278Address)
                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args msg.sender, 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                if sub_c375a48bAddress:
                                    require ext_code.size(sub_c375a48bAddress)
                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_c375a48bAddress)
                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args msg.sender, 17 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if arg1 <= 15778476:
                                    if lockedAmount[address(msg.sender)].field_512 * arg1 and 20 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                        revert with 0, 17
                                    if not sub_fa78668f:
                                        revert with 0, 18
                                    lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                    if not msg.sender:
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if totalSupply > !(20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    totalSupply += 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                    if balanceOf[address(msg.sender)] > !(20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)] += 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                    emit Transfer((20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                    if delegates[address(msg.sender)] != 0:
                                        if 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                            if delegates[address(msg.sender)]:
                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                    if 0 > !(20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        else:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                    emit DelegateVotesChanged(0, 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                else:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        else:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                    if sub_6bfdb278Address:
                                        require ext_code.size(sub_6bfdb278Address)
                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_6bfdb278Address)
                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args msg.sender, 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    if sub_c375a48bAddress:
                                        require ext_code.size(sub_c375a48bAddress)
                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_c375a48bAddress)
                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args msg.sender, 20 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if arg1 <= 18408222:
                                        if lockedAmount[address(msg.sender)].field_512 * arg1 and 23 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                            revert with 0, 17
                                        if not sub_fa78668f:
                                            revert with 0, 18
                                        lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                        if not msg.sender:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if totalSupply > !(23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        totalSupply += 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        if balanceOf[address(msg.sender)] > !(23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] += 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                        emit Transfer((23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                        if delegates[address(msg.sender)] != 0:
                                            if 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                if delegates[address(msg.sender)]:
                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                        if 0 > !(23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            else:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                        emit DelegateVotesChanged(0, 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                    else:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            else:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                        if sub_6bfdb278Address:
                                            require ext_code.size(sub_6bfdb278Address)
                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_6bfdb278Address)
                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        if sub_c375a48bAddress:
                                            require ext_code.size(sub_c375a48bAddress)
                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_c375a48bAddress)
                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, 23 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if arg1 <= 21037968:
                                            if lockedAmount[address(msg.sender)].field_512 * arg1 and 27 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                revert with 0, 17
                                            if not sub_fa78668f:
                                                revert with 0, 18
                                            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                            if not msg.sender:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if totalSupply > !(27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            totalSupply += 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            if balanceOf[address(msg.sender)] > !(27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                revert with 0, 17
                                            balanceOf[address(msg.sender)] += 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                            emit Transfer((27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                            if delegates[address(msg.sender)] != 0:
                                                if 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                    if delegates[address(msg.sender)]:
                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                            if 0 > !(27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                else:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                            emit DelegateVotesChanged(0, 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                        else:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                else:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                            if sub_6bfdb278Address:
                                                require ext_code.size(sub_6bfdb278Address)
                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                            if sub_c375a48bAddress:
                                                require ext_code.size(sub_c375a48bAddress)
                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, 27 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if arg1 <= 23667714:
                                                if lockedAmount[address(msg.sender)].field_512 * arg1 and 31 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                    revert with 0, 17
                                                if not sub_fa78668f:
                                                    revert with 0, 18
                                                lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: mint to the zero address'
                                                if totalSupply > !(31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                totalSupply += 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                if balanceOf[address(msg.sender)] > !(31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] += 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                emit Transfer((31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                if delegates[address(msg.sender)] != 0:
                                                    if 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                        if delegates[address(msg.sender)]:
                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                if 0 > !(31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    else:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                emit DelegateVotesChanged(0, 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                            else:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    else:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                if sub_6bfdb278Address:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                if sub_c375a48bAddress:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, 31 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if arg1 <= 26297460:
                                                    if lockedAmount[address(msg.sender)].field_512 * arg1 and 35 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                        revert with 0, 17
                                                    if not sub_fa78668f:
                                                        revert with 0, 18
                                                    lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: mint to the zero address'
                                                    if totalSupply > !(35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    totalSupply += 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    if balanceOf[address(msg.sender)] > !(35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] += 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                    emit Transfer((35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                    if delegates[address(msg.sender)] != 0:
                                                        if 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                            if delegates[address(msg.sender)]:
                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                    if 0 > !(35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        else:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                    emit DelegateVotesChanged(0, 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                else:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        else:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                    if sub_6bfdb278Address:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                    if sub_c375a48bAddress:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, 35 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if arg1 <= 28927206:
                                                        if lockedAmount[address(msg.sender)].field_512 * arg1 and 40 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                            revert with 0, 17
                                                        if not sub_fa78668f:
                                                            revert with 0, 18
                                                        lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: mint to the zero address'
                                                        if totalSupply > !(40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        totalSupply += 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        if balanceOf[address(msg.sender)] > !(40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                            revert with 0, 17
                                                        balanceOf[address(msg.sender)] += 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                        emit Transfer((40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                        if delegates[address(msg.sender)] != 0:
                                                            if 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                if delegates[address(msg.sender)]:
                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                        if 0 > !(40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            else:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                        emit DelegateVotesChanged(0, 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                    else:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            else:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                        if sub_6bfdb278Address:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                        if sub_c375a48bAddress:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, 40 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if arg1 <= 31556952:
                                                            if lockedAmount[address(msg.sender)].field_512 * arg1 and 47 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                revert with 0, 17
                                                            if not sub_fa78668f:
                                                                revert with 0, 18
                                                            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: mint to the zero address'
                                                            if totalSupply > !(47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            totalSupply += 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            if balanceOf[address(msg.sender)] > !(47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                revert with 0, 17
                                                            balanceOf[address(msg.sender)] += 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                            emit Transfer((47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                            if delegates[address(msg.sender)] != 0:
                                                                if 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                    if delegates[address(msg.sender)]:
                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                            if 0 > !(47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                else:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                            emit DelegateVotesChanged(0, 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                        else:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                else:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                            if sub_6bfdb278Address:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                            if sub_c375a48bAddress:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, 47 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if arg1 <= 34186698:
                                                                if lockedAmount[address(msg.sender)].field_512 * arg1 and 54 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                    revert with 0, 17
                                                                if not sub_fa78668f:
                                                                    revert with 0, 18
                                                                lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                if totalSupply > !(54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                totalSupply += 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                if balanceOf[address(msg.sender)] > !(54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                    revert with 0, 17
                                                                balanceOf[address(msg.sender)] += 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                emit Transfer((54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                if delegates[address(msg.sender)] != 0:
                                                                    if 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                        if delegates[address(msg.sender)]:
                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                if 0 > !(54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    else:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                emit DelegateVotesChanged(0, 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                            else:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    else:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                if sub_6bfdb278Address:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                if sub_c375a48bAddress:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, 54 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if arg1 <= 36816444:
                                                                    if lockedAmount[address(msg.sender)].field_512 * arg1 and 62 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                        revert with 0, 17
                                                                    if not sub_fa78668f:
                                                                        revert with 0, 18
                                                                    lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                    if totalSupply > !(62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    totalSupply += 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    if balanceOf[address(msg.sender)] > !(62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                        revert with 0, 17
                                                                    balanceOf[address(msg.sender)] += 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                    emit Transfer((62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                    if delegates[address(msg.sender)] != 0:
                                                                        if 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                            if delegates[address(msg.sender)]:
                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    if 0 > !(62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        else:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    emit DelegateVotesChanged(0, 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        else:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                    if sub_6bfdb278Address:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender, 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                    if sub_c375a48bAddress:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender, 62 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if arg1 <= 39446190:
                                                                        if lockedAmount[address(msg.sender)].field_512 * arg1 and 71 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                            revert with 0, 17
                                                                        if not sub_fa78668f:
                                                                            revert with 0, 18
                                                                        lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                        if totalSupply > !(71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        totalSupply += 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        if balanceOf[address(msg.sender)] > !(71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                            revert with 0, 17
                                                                        balanceOf[address(msg.sender)] += 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                        emit Transfer((71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                        if delegates[address(msg.sender)] != 0:
                                                                            if 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                if delegates[address(msg.sender)]:
                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        if 0 > !(71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            else:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        emit DelegateVotesChanged(0, 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            else:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                        if sub_6bfdb278Address:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                        if sub_c375a48bAddress:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, 71 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if arg1 <= 42075936:
                                                                            if lockedAmount[address(msg.sender)].field_512 * arg1 and 81 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                revert with 0, 17
                                                                            if not sub_fa78668f:
                                                                                revert with 0, 18
                                                                            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                            if totalSupply > !(81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            totalSupply += 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            if balanceOf[address(msg.sender)] > !(81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                revert with 0, 17
                                                                            balanceOf[address(msg.sender)] += 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                            emit Transfer((81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                            if delegates[address(msg.sender)] != 0:
                                                                                if 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                    if delegates[address(msg.sender)]:
                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            if 0 > !(81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                else:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            emit DelegateVotesChanged(0, 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                else:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                            if sub_6bfdb278Address:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                            if sub_c375a48bAddress:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, 81 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            if arg1 <= 44705682:
                                                                                if lockedAmount[address(msg.sender)].field_512 * arg1 and 94 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                    revert with 0, 17
                                                                                if not sub_fa78668f:
                                                                                    revert with 0, 18
                                                                                lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                if totalSupply > !(94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                totalSupply += 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                if balanceOf[address(msg.sender)] > !(94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                    revert with 0, 17
                                                                                balanceOf[address(msg.sender)] += 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                emit Transfer((94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                if delegates[address(msg.sender)] != 0:
                                                                                    if 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                        if delegates[address(msg.sender)]:
                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                if 0 > !(94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                emit DelegateVotesChanged(0, 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                if sub_6bfdb278Address:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                if sub_c375a48bAddress:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, 94 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                if arg1 <= 47335428:
                                                                                    if lockedAmount[address(msg.sender)].field_512 * arg1 and 108 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                        revert with 0, 17
                                                                                    if not sub_fa78668f:
                                                                                        revert with 0, 18
                                                                                    lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                    if not msg.sender:
                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                    if totalSupply > !(108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    totalSupply += 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    if balanceOf[address(msg.sender)] > !(108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                        revert with 0, 17
                                                                                    balanceOf[address(msg.sender)] += 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                    emit Transfer((108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                    if delegates[address(msg.sender)] != 0:
                                                                                        if 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                            if delegates[address(msg.sender)]:
                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    if 0 > !(108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    emit DelegateVotesChanged(0, 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                    if sub_6bfdb278Address:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args msg.sender, 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                    if sub_c375a48bAddress:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args msg.sender, 108 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    if arg1 <= 49965174:
                                                                                        if lockedAmount[address(msg.sender)].field_512 * arg1 and 124 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                            revert with 0, 17
                                                                                        if not sub_fa78668f:
                                                                                            revert with 0, 18
                                                                                        lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                        if not msg.sender:
                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                        if totalSupply > !(124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        totalSupply += 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        if balanceOf[address(msg.sender)] > !(124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                            revert with 0, 17
                                                                                        balanceOf[address(msg.sender)] += 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                        emit Transfer((124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                        if delegates[address(msg.sender)] != 0:
                                                                                            if 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                                if delegates[address(msg.sender)]:
                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        if 0 > !(124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        emit DelegateVotesChanged(0, 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                        if sub_6bfdb278Address:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args msg.sender, 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                        if sub_c375a48bAddress:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args msg.sender, 124 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        if arg1 <= 52594920:
                                                                                            if lockedAmount[address(msg.sender)].field_512 * arg1 and 142 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                                revert with 0, 17
                                                                                            if not sub_fa78668f:
                                                                                                revert with 0, 18
                                                                                            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                            if not msg.sender:
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            if totalSupply > !(142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            totalSupply += 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            if balanceOf[address(msg.sender)] > !(142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                revert with 0, 17
                                                                                            balanceOf[address(msg.sender)] += 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                            emit Transfer((142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                            if delegates[address(msg.sender)] != 0:
                                                                                                if 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                                    if delegates[address(msg.sender)]:
                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            if 0 > !(142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            emit DelegateVotesChanged(0, 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                            if sub_6bfdb278Address:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args msg.sender, 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                            if sub_c375a48bAddress:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args msg.sender, 142 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            if arg1 <= 55224666:
                                                                                                if lockedAmount[address(msg.sender)].field_512 * arg1 and 164 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                                    revert with 0, 17
                                                                                                if not sub_fa78668f:
                                                                                                    revert with 0, 18
                                                                                                lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                                if not msg.sender:
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                if totalSupply > !(164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                totalSupply += 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                if balanceOf[address(msg.sender)] > !(164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                    revert with 0, 17
                                                                                                balanceOf[address(msg.sender)] += 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                emit Transfer((164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                                if delegates[address(msg.sender)] != 0:
                                                                                                    if 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                                        if delegates[address(msg.sender)]:
                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                if 0 > !(164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                emit DelegateVotesChanged(0, 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                                if sub_6bfdb278Address:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender, 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                if sub_c375a48bAddress:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender, 164 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                if arg1 <= 57854412:
                                                                                                    if lockedAmount[address(msg.sender)].field_512 * arg1 and 188 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                                        revert with 0, 17
                                                                                                    if not sub_fa78668f:
                                                                                                        revert with 0, 18
                                                                                                    lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                                    if not msg.sender:
                                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                                    if totalSupply > !(188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    totalSupply += 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    if balanceOf[address(msg.sender)] > !(188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                        revert with 0, 17
                                                                                                    balanceOf[address(msg.sender)] += 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                    emit Transfer((188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                                    if delegates[address(msg.sender)] != 0:
                                                                                                        if 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                                            if delegates[address(msg.sender)]:
                                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    if 0 > !(188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    emit DelegateVotesChanged(0, 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                                    if sub_6bfdb278Address:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender, 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                    if sub_c375a48bAddress:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender, 188 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    if arg1 <= 60484158:
                                                                                                        if lockedAmount[address(msg.sender)].field_512 * arg1 and 216 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                                            revert with 0, 17
                                                                                                        if not sub_fa78668f:
                                                                                                            revert with 0, 18
                                                                                                        lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                                        if not msg.sender:
                                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                                        if totalSupply > !(216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        totalSupply += 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        if balanceOf[address(msg.sender)] > !(216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                            revert with 0, 17
                                                                                                        balanceOf[address(msg.sender)] += 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                        emit Transfer((216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                                        if delegates[address(msg.sender)] != 0:
                                                                                                            if 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                                                if delegates[address(msg.sender)]:
                                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        if 0 > !(216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        emit DelegateVotesChanged(0, 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                                        if sub_6bfdb278Address:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args msg.sender, 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                        if sub_c375a48bAddress:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args msg.sender, 216 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        if arg1 > 63113904:
                                                                                                            if lockedAmount[address(msg.sender)].field_512 * arg1 and 0 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                                            if not msg.sender:
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !(0 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply += 0 / sub_fa78668f / 100
                                                                                                            if balanceOf[address(msg.sender)] > !(0 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(msg.sender)] += 0 / sub_fa78668f / 100
                                                                                                            emit Transfer((0 / sub_fa78668f / 100), 0, msg.sender);
                                                                                                            if delegates[address(msg.sender)] != 0:
                                                                                                                if 0 / sub_fa78668f / 100 > 0:
                                                                                                                    if delegates[address(msg.sender)]:
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            if 0 > !(0 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 0 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 0 / sub_fa78668f / 100
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(0, 0 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(0 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 0 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100)
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, 0 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, 0 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if lockedAmount[address(msg.sender)].field_512 * arg1 and 249 > -1 / lockedAmount[address(msg.sender)].field_512 * arg1:
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            lockedAmount[address(msg.sender)].field_256 = block.timestamp + arg1
                                                                                                            if not msg.sender:
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !(249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply += 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            if balanceOf[address(msg.sender)] > !(249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(msg.sender)] += 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                            emit Transfer((249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), 0, msg.sender);
                                                                                                            if delegates[address(msg.sender)] != 0:
                                                                                                                if 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100 > 0:
                                                                                                                    if delegates[address(msg.sender)]:
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            if 0 > !(249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(0, 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100, delegates[address(msg.sender)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 += 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100)
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100), delegates[address(msg.sender)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, 249 * lockedAmount[address(msg.sender)].field_512 * arg1 / sub_fa78668f / 100
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
    else:
        if lockedAmount[address(msg.sender)].field_256 < lockedAmount[address(msg.sender)].field_0:
            revert with 0, 17
        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 > !arg1:
            revert with 0, 17
        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 > sub_fa78668f:
            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 'WTF Voting Escrow: Greater than MAX_LOCK_TIME'
        if lockedAmount[address(msg.sender)].field_256 > !arg1:
            revert with 0, 17
        if lockedAmount[address(msg.sender)].field_512 and lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 > -1 / lockedAmount[address(msg.sender)].field_512:
            revert with 0, 17
        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 0:
            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 0 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                revert with 0, 17
            if not sub_fa78668f:
                revert with 0, 18
            if 0 / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                revert with 0, 17
            lockedAmount[address(msg.sender)].field_256 += arg1
            if not msg.sender:
                revert with 0, 'ERC20: mint to the zero address'
            if totalSupply > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                revert with 0, 17
            totalSupply = totalSupply + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
            if balanceOf[address(msg.sender)] > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                revert with 0, 17
            balanceOf[address(msg.sender)] = 0 / sub_fa78668f / 100
            emit Transfer(((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
            if delegates[address(msg.sender)] != 0:
                if (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                    if delegates[address(msg.sender)]:
                        if not numCheckpoints[stor10[address(msg.sender)]]:
                            if 0 > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                checkpoints[stor10[address(msg.sender)]].field_0++
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(msg.sender)]]++
                            else:
                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                else:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                            emit DelegateVotesChanged(0, (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                        else:
                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                revert with 0, 17
                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                revert with 0, 50
                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                revert with 0, 17
                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                checkpoints[stor10[address(msg.sender)]].field_0++
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                    revert with 0, 17
                                numCheckpoints[stor10[address(msg.sender)]]++
                            else:
                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                else:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
            if sub_6bfdb278Address:
                require ext_code.size(sub_6bfdb278Address)
                staticcall sub_6bfdb278Address.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_6bfdb278Address)
                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args msg.sender, (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
            if sub_c375a48bAddress:
                require ext_code.size(sub_c375a48bAddress)
                staticcall sub_c375a48bAddress.isPoolActive() with:
                        gas gas_remaining wei
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                if ext_call.return_data[0]:
                    require ext_code.size(sub_c375a48bAddress)
                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                         gas gas_remaining wei
                        args msg.sender, (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
        else:
            if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 2629746:
                if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 10 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                    revert with 0, 17
                if not sub_fa78668f:
                    revert with 0, 18
                if (10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                    revert with 0, 17
                lockedAmount[address(msg.sender)].field_256 += arg1
                if not msg.sender:
                    revert with 0, 'ERC20: mint to the zero address'
                if totalSupply > !(((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                    revert with 0, 17
                totalSupply = totalSupply + ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                if balanceOf[address(msg.sender)] > !(((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                    revert with 0, 17
                balanceOf[address(msg.sender)] = (10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                emit Transfer((((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                if delegates[address(msg.sender)] != 0:
                    if ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                        if delegates[address(msg.sender)]:
                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                if 0 > !(((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                                else:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    else:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                emit DelegateVotesChanged(0, ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                            else:
                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                    revert with 0, 17
                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                    revert with 0, 50
                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                    revert with 0, 17
                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                        revert with 0, 17
                                    numCheckpoints[stor10[address(msg.sender)]]++
                                else:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    else:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                if sub_6bfdb278Address:
                    require ext_code.size(sub_6bfdb278Address)
                    staticcall sub_6bfdb278Address.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_6bfdb278Address)
                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args msg.sender, ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                if sub_c375a48bAddress:
                    require ext_code.size(sub_c375a48bAddress)
                    staticcall sub_c375a48bAddress.isPoolActive() with:
                            gas gas_remaining wei
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                    if ext_call.return_data[0]:
                        require ext_code.size(sub_c375a48bAddress)
                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                             gas gas_remaining wei
                            args msg.sender, ((10 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (10 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (10 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
            else:
                if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 5259492:
                    if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 12 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                        revert with 0, 17
                    if not sub_fa78668f:
                        revert with 0, 18
                    if (12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                        revert with 0, 17
                    lockedAmount[address(msg.sender)].field_256 += arg1
                    if not msg.sender:
                        revert with 0, 'ERC20: mint to the zero address'
                    if totalSupply > !(((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                        revert with 0, 17
                    totalSupply = totalSupply + ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                    if balanceOf[address(msg.sender)] > !(((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                        revert with 0, 17
                    balanceOf[address(msg.sender)] = (12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                    emit Transfer((((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                    if delegates[address(msg.sender)] != 0:
                        if ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                            if delegates[address(msg.sender)]:
                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                    if 0 > !(((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                    else:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        else:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                    emit DelegateVotesChanged(0, ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                else:
                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                        revert with 0, 17
                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                        revert with 0, 50
                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                        revert with 0, 17
                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                            revert with 0, 17
                                        numCheckpoints[stor10[address(msg.sender)]]++
                                    else:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        else:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                    if sub_6bfdb278Address:
                        require ext_code.size(sub_6bfdb278Address)
                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_6bfdb278Address)
                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args msg.sender, ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                    if sub_c375a48bAddress:
                        require ext_code.size(sub_c375a48bAddress)
                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                gas gas_remaining wei
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 32
                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                        if ext_call.return_data[0]:
                            require ext_code.size(sub_c375a48bAddress)
                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                 gas gas_remaining wei
                                args msg.sender, ((12 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (12 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (12 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                else:
                    if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 7889238:
                        if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 13 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                            revert with 0, 17
                        if not sub_fa78668f:
                            revert with 0, 18
                        if (13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                            revert with 0, 17
                        lockedAmount[address(msg.sender)].field_256 += arg1
                        if not msg.sender:
                            revert with 0, 'ERC20: mint to the zero address'
                        if totalSupply > !(((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                            revert with 0, 17
                        totalSupply = totalSupply + ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                        if balanceOf[address(msg.sender)] > !(((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                            revert with 0, 17
                        balanceOf[address(msg.sender)] = (13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                        emit Transfer((((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                        if delegates[address(msg.sender)] != 0:
                            if ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                if delegates[address(msg.sender)]:
                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                        if 0 > !(((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                        else:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            else:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                        emit DelegateVotesChanged(0, ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                    else:
                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                            revert with 0, 17
                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                            revert with 0, 50
                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                            revert with 0, 17
                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                revert with 0, 17
                                            numCheckpoints[stor10[address(msg.sender)]]++
                                        else:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            else:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                        if sub_6bfdb278Address:
                            require ext_code.size(sub_6bfdb278Address)
                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_6bfdb278Address)
                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args msg.sender, ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                        if sub_c375a48bAddress:
                            require ext_code.size(sub_c375a48bAddress)
                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                    gas gas_remaining wei
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require return_data.size >= 32
                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                            if ext_call.return_data[0]:
                                require ext_code.size(sub_c375a48bAddress)
                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                     gas gas_remaining wei
                                    args msg.sender, ((13 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (13 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (13 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                    else:
                        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 10518984:
                            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 15 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                revert with 0, 17
                            if not sub_fa78668f:
                                revert with 0, 18
                            if (15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                revert with 0, 17
                            lockedAmount[address(msg.sender)].field_256 += arg1
                            if not msg.sender:
                                revert with 0, 'ERC20: mint to the zero address'
                            if totalSupply > !(((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                revert with 0, 17
                            totalSupply = totalSupply + ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                            if balanceOf[address(msg.sender)] > !(((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                revert with 0, 17
                            balanceOf[address(msg.sender)] = (15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                            emit Transfer((((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                            if delegates[address(msg.sender)] != 0:
                                if ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                    if delegates[address(msg.sender)]:
                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                            if 0 > !(((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                            else:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                else:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                            emit DelegateVotesChanged(0, ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                        else:
                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                revert with 0, 17
                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                revert with 0, 50
                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                revert with 0, 17
                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                    revert with 0, 17
                                                numCheckpoints[stor10[address(msg.sender)]]++
                                            else:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                else:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                            if sub_6bfdb278Address:
                                require ext_code.size(sub_6bfdb278Address)
                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_6bfdb278Address)
                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args msg.sender, ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                            if sub_c375a48bAddress:
                                require ext_code.size(sub_c375a48bAddress)
                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                        gas gas_remaining wei
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require return_data.size >= 32
                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                if ext_call.return_data[0]:
                                    require ext_code.size(sub_c375a48bAddress)
                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                         gas gas_remaining wei
                                        args msg.sender, ((15 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (15 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (15 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                        else:
                            if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 13148730:
                                if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 17 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                    revert with 0, 17
                                if not sub_fa78668f:
                                    revert with 0, 18
                                if (17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                    revert with 0, 17
                                lockedAmount[address(msg.sender)].field_256 += arg1
                                if not msg.sender:
                                    revert with 0, 'ERC20: mint to the zero address'
                                if totalSupply > !(((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                    revert with 0, 17
                                totalSupply = totalSupply + ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                if balanceOf[address(msg.sender)] > !(((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                    revert with 0, 17
                                balanceOf[address(msg.sender)] = (17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                emit Transfer((((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                if delegates[address(msg.sender)] != 0:
                                    if ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                        if delegates[address(msg.sender)]:
                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                if 0 > !(((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    else:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                emit DelegateVotesChanged(0, ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                            else:
                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                    revert with 0, 17
                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                    revert with 0, 50
                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                    revert with 0, 17
                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                        revert with 0, 17
                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                else:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    else:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                if sub_6bfdb278Address:
                                    require ext_code.size(sub_6bfdb278Address)
                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_6bfdb278Address)
                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args msg.sender, ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                if sub_c375a48bAddress:
                                    require ext_code.size(sub_c375a48bAddress)
                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                            gas gas_remaining wei
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require return_data.size >= 32
                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                    if ext_call.return_data[0]:
                                        require ext_code.size(sub_c375a48bAddress)
                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                             gas gas_remaining wei
                                            args msg.sender, ((17 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (17 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (17 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                            else:
                                if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 15778476:
                                    if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 20 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                        revert with 0, 17
                                    if not sub_fa78668f:
                                        revert with 0, 18
                                    if (20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                        revert with 0, 17
                                    lockedAmount[address(msg.sender)].field_256 += arg1
                                    if not msg.sender:
                                        revert with 0, 'ERC20: mint to the zero address'
                                    if totalSupply > !(((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                        revert with 0, 17
                                    totalSupply = totalSupply + ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                    if balanceOf[address(msg.sender)] > !(((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                        revert with 0, 17
                                    balanceOf[address(msg.sender)] = (20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                    emit Transfer((((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                    if delegates[address(msg.sender)] != 0:
                                        if ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                            if delegates[address(msg.sender)]:
                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                    if 0 > !(((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        else:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                    emit DelegateVotesChanged(0, ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                else:
                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                        revert with 0, 17
                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                        revert with 0, 50
                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                        revert with 0, 17
                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                            revert with 0, 17
                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                    else:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        else:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                    if sub_6bfdb278Address:
                                        require ext_code.size(sub_6bfdb278Address)
                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_6bfdb278Address)
                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args msg.sender, ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                    if sub_c375a48bAddress:
                                        require ext_code.size(sub_c375a48bAddress)
                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                gas gas_remaining wei
                                        if not ext_call.success:
                                            revert with ext_call.return_data[0 len return_data.size]
                                        require return_data.size >= 32
                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                        if ext_call.return_data[0]:
                                            require ext_code.size(sub_c375a48bAddress)
                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                 gas gas_remaining wei
                                                args msg.sender, ((20 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (20 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (20 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                else:
                                    if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 18408222:
                                        if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 23 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                            revert with 0, 17
                                        if not sub_fa78668f:
                                            revert with 0, 18
                                        if (23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                            revert with 0, 17
                                        lockedAmount[address(msg.sender)].field_256 += arg1
                                        if not msg.sender:
                                            revert with 0, 'ERC20: mint to the zero address'
                                        if totalSupply > !(((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                            revert with 0, 17
                                        totalSupply = totalSupply + ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                        if balanceOf[address(msg.sender)] > !(((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                            revert with 0, 17
                                        balanceOf[address(msg.sender)] = (23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                        emit Transfer((((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                        if delegates[address(msg.sender)] != 0:
                                            if ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                if delegates[address(msg.sender)]:
                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                        if 0 > !(((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            else:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                        emit DelegateVotesChanged(0, ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                    else:
                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                            revert with 0, 17
                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                            revert with 0, 50
                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                            revert with 0, 17
                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                revert with 0, 17
                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                        else:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            else:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                        if sub_6bfdb278Address:
                                            require ext_code.size(sub_6bfdb278Address)
                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_6bfdb278Address)
                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                        if sub_c375a48bAddress:
                                            require ext_code.size(sub_c375a48bAddress)
                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                    gas gas_remaining wei
                                            if not ext_call.success:
                                                revert with ext_call.return_data[0 len return_data.size]
                                            require return_data.size >= 32
                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                            if ext_call.return_data[0]:
                                                require ext_code.size(sub_c375a48bAddress)
                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                     gas gas_remaining wei
                                                    args msg.sender, ((23 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (23 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (23 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                    else:
                                        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 21037968:
                                            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 27 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                revert with 0, 17
                                            if not sub_fa78668f:
                                                revert with 0, 18
                                            if (27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                revert with 0, 17
                                            lockedAmount[address(msg.sender)].field_256 += arg1
                                            if not msg.sender:
                                                revert with 0, 'ERC20: mint to the zero address'
                                            if totalSupply > !(((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                revert with 0, 17
                                            totalSupply = totalSupply + ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                            if balanceOf[address(msg.sender)] > !(((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                revert with 0, 17
                                            balanceOf[address(msg.sender)] = (27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                            emit Transfer((((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                            if delegates[address(msg.sender)] != 0:
                                                if ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                    if delegates[address(msg.sender)]:
                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                            if 0 > !(((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                else:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                            emit DelegateVotesChanged(0, ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                        else:
                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                revert with 0, 17
                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                revert with 0, 50
                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                revert with 0, 17
                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                    revert with 0, 17
                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                            else:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                else:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                            if sub_6bfdb278Address:
                                                require ext_code.size(sub_6bfdb278Address)
                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                            if sub_c375a48bAddress:
                                                require ext_code.size(sub_c375a48bAddress)
                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                        gas gas_remaining wei
                                                if not ext_call.success:
                                                    revert with ext_call.return_data[0 len return_data.size]
                                                require return_data.size >= 32
                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                if ext_call.return_data[0]:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                         gas gas_remaining wei
                                                        args msg.sender, ((27 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (27 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (27 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                        else:
                                            if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 23667714:
                                                if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 31 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                    revert with 0, 17
                                                if not sub_fa78668f:
                                                    revert with 0, 18
                                                if (31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                    revert with 0, 17
                                                lockedAmount[address(msg.sender)].field_256 += arg1
                                                if not msg.sender:
                                                    revert with 0, 'ERC20: mint to the zero address'
                                                if totalSupply > !(((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                    revert with 0, 17
                                                totalSupply = totalSupply + ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                if balanceOf[address(msg.sender)] > !(((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                    revert with 0, 17
                                                balanceOf[address(msg.sender)] = (31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                emit Transfer((((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                if delegates[address(msg.sender)] != 0:
                                                    if ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                        if delegates[address(msg.sender)]:
                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                if 0 > !(((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    else:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                emit DelegateVotesChanged(0, ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                            else:
                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                    revert with 0, 17
                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                    revert with 0, 50
                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                    revert with 0, 17
                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                        revert with 0, 17
                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                else:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    else:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                if sub_6bfdb278Address:
                                                    require ext_code.size(sub_6bfdb278Address)
                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                if sub_c375a48bAddress:
                                                    require ext_code.size(sub_c375a48bAddress)
                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                            gas gas_remaining wei
                                                    if not ext_call.success:
                                                        revert with ext_call.return_data[0 len return_data.size]
                                                    require return_data.size >= 32
                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                    if ext_call.return_data[0]:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                             gas gas_remaining wei
                                                            args msg.sender, ((31 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (31 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (31 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                            else:
                                                if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 26297460:
                                                    if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 35 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                        revert with 0, 17
                                                    if not sub_fa78668f:
                                                        revert with 0, 18
                                                    if (35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                        revert with 0, 17
                                                    lockedAmount[address(msg.sender)].field_256 += arg1
                                                    if not msg.sender:
                                                        revert with 0, 'ERC20: mint to the zero address'
                                                    if totalSupply > !(((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                        revert with 0, 17
                                                    totalSupply = totalSupply + ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                    if balanceOf[address(msg.sender)] > !(((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                        revert with 0, 17
                                                    balanceOf[address(msg.sender)] = (35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                    emit Transfer((((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                    if delegates[address(msg.sender)] != 0:
                                                        if ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                            if delegates[address(msg.sender)]:
                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                    if 0 > !(((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        else:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                    emit DelegateVotesChanged(0, ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                else:
                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                        revert with 0, 17
                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                        revert with 0, 50
                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                        revert with 0, 17
                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                            revert with 0, 17
                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                    else:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        else:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                    if sub_6bfdb278Address:
                                                        require ext_code.size(sub_6bfdb278Address)
                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                    if sub_c375a48bAddress:
                                                        require ext_code.size(sub_c375a48bAddress)
                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                gas gas_remaining wei
                                                        if not ext_call.success:
                                                            revert with ext_call.return_data[0 len return_data.size]
                                                        require return_data.size >= 32
                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                        if ext_call.return_data[0]:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                 gas gas_remaining wei
                                                                args msg.sender, ((35 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (35 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (35 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                else:
                                                    if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 28927206:
                                                        if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 40 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                            revert with 0, 17
                                                        if not sub_fa78668f:
                                                            revert with 0, 18
                                                        if (40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                            revert with 0, 17
                                                        lockedAmount[address(msg.sender)].field_256 += arg1
                                                        if not msg.sender:
                                                            revert with 0, 'ERC20: mint to the zero address'
                                                        if totalSupply > !(((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                            revert with 0, 17
                                                        totalSupply = totalSupply + ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                        if balanceOf[address(msg.sender)] > !(((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                            revert with 0, 17
                                                        balanceOf[address(msg.sender)] = (40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                        emit Transfer((((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                        if delegates[address(msg.sender)] != 0:
                                                            if ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                if delegates[address(msg.sender)]:
                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                        if 0 > !(((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            else:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                        emit DelegateVotesChanged(0, ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                    else:
                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                            revert with 0, 17
                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                            revert with 0, 50
                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                            revert with 0, 17
                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                revert with 0, 17
                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                        else:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            else:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                        if sub_6bfdb278Address:
                                                            require ext_code.size(sub_6bfdb278Address)
                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                        if sub_c375a48bAddress:
                                                            require ext_code.size(sub_c375a48bAddress)
                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                    gas gas_remaining wei
                                                            if not ext_call.success:
                                                                revert with ext_call.return_data[0 len return_data.size]
                                                            require return_data.size >= 32
                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                            if ext_call.return_data[0]:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                     gas gas_remaining wei
                                                                    args msg.sender, ((40 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (40 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (40 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                    else:
                                                        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 31556952:
                                                            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 47 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                revert with 0, 17
                                                            if not sub_fa78668f:
                                                                revert with 0, 18
                                                            if (47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                revert with 0, 17
                                                            lockedAmount[address(msg.sender)].field_256 += arg1
                                                            if not msg.sender:
                                                                revert with 0, 'ERC20: mint to the zero address'
                                                            if totalSupply > !(((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                revert with 0, 17
                                                            totalSupply = totalSupply + ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                            if balanceOf[address(msg.sender)] > !(((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                revert with 0, 17
                                                            balanceOf[address(msg.sender)] = (47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                            emit Transfer((((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                            if delegates[address(msg.sender)] != 0:
                                                                if ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                    if delegates[address(msg.sender)]:
                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                            if 0 > !(((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                else:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                            emit DelegateVotesChanged(0, ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                        else:
                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                revert with 0, 17
                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                revert with 0, 50
                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                revert with 0, 17
                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    revert with 0, 17
                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                            else:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                else:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                            if sub_6bfdb278Address:
                                                                require ext_code.size(sub_6bfdb278Address)
                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                            if sub_c375a48bAddress:
                                                                require ext_code.size(sub_c375a48bAddress)
                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                        gas gas_remaining wei
                                                                if not ext_call.success:
                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                require return_data.size >= 32
                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                if ext_call.return_data[0]:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                         gas gas_remaining wei
                                                                        args msg.sender, ((47 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (47 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (47 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                        else:
                                                            if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 34186698:
                                                                if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 54 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                    revert with 0, 17
                                                                if not sub_fa78668f:
                                                                    revert with 0, 18
                                                                if (54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                    revert with 0, 17
                                                                lockedAmount[address(msg.sender)].field_256 += arg1
                                                                if not msg.sender:
                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                if totalSupply > !(((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                    revert with 0, 17
                                                                totalSupply = totalSupply + ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                if balanceOf[address(msg.sender)] > !(((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                    revert with 0, 17
                                                                balanceOf[address(msg.sender)] = (54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                emit Transfer((((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                if delegates[address(msg.sender)] != 0:
                                                                    if ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                        if delegates[address(msg.sender)]:
                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                if 0 > !(((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    else:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                emit DelegateVotesChanged(0, ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                            else:
                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                    revert with 0, 17
                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                    revert with 0, 50
                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                    revert with 0, 17
                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        revert with 0, 17
                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    else:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                if sub_6bfdb278Address:
                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                if sub_c375a48bAddress:
                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                            gas gas_remaining wei
                                                                    if not ext_call.success:
                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                    require return_data.size >= 32
                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                    if ext_call.return_data[0]:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                             gas gas_remaining wei
                                                                            args msg.sender, ((54 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (54 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (54 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                            else:
                                                                if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 36816444:
                                                                    if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 62 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                        revert with 0, 17
                                                                    if not sub_fa78668f:
                                                                        revert with 0, 18
                                                                    if (62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                        revert with 0, 17
                                                                    lockedAmount[address(msg.sender)].field_256 += arg1
                                                                    if not msg.sender:
                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                    if totalSupply > !(((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                        revert with 0, 17
                                                                    totalSupply = totalSupply + ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                    if balanceOf[address(msg.sender)] > !(((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                        revert with 0, 17
                                                                    balanceOf[address(msg.sender)] = (62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                    emit Transfer((((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                    if delegates[address(msg.sender)] != 0:
                                                                        if ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                            if delegates[address(msg.sender)]:
                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                    if 0 > !(((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        else:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    emit DelegateVotesChanged(0, ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                else:
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                        revert with 0, 17
                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                        revert with 0, 50
                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                        revert with 0, 17
                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            revert with 0, 17
                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        else:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                    if sub_6bfdb278Address:
                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender, ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                    if sub_c375a48bAddress:
                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                gas gas_remaining wei
                                                                        if not ext_call.success:
                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                        require return_data.size >= 32
                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                        if ext_call.return_data[0]:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                 gas gas_remaining wei
                                                                                args msg.sender, ((62 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (62 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (62 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                else:
                                                                    if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 39446190:
                                                                        if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 71 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                            revert with 0, 17
                                                                        if not sub_fa78668f:
                                                                            revert with 0, 18
                                                                        if (71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                            revert with 0, 17
                                                                        lockedAmount[address(msg.sender)].field_256 += arg1
                                                                        if not msg.sender:
                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                        if totalSupply > !(((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                            revert with 0, 17
                                                                        totalSupply = totalSupply + ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                        if balanceOf[address(msg.sender)] > !(((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                            revert with 0, 17
                                                                        balanceOf[address(msg.sender)] = (71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                        emit Transfer((((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                        if delegates[address(msg.sender)] != 0:
                                                                            if ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                if delegates[address(msg.sender)]:
                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                        if 0 > !(((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            else:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        emit DelegateVotesChanged(0, ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                    else:
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                            revert with 0, 17
                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                            revert with 0, 50
                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                            revert with 0, 17
                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                revert with 0, 17
                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            else:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                        if sub_6bfdb278Address:
                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                        if sub_c375a48bAddress:
                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                    gas gas_remaining wei
                                                                            if not ext_call.success:
                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                            require return_data.size >= 32
                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                            if ext_call.return_data[0]:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                     gas gas_remaining wei
                                                                                    args msg.sender, ((71 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (71 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (71 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                    else:
                                                                        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 42075936:
                                                                            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 81 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                revert with 0, 17
                                                                            if not sub_fa78668f:
                                                                                revert with 0, 18
                                                                            if (81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                revert with 0, 17
                                                                            lockedAmount[address(msg.sender)].field_256 += arg1
                                                                            if not msg.sender:
                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                            if totalSupply > !(((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                revert with 0, 17
                                                                            totalSupply = totalSupply + ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                            if balanceOf[address(msg.sender)] > !(((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                revert with 0, 17
                                                                            balanceOf[address(msg.sender)] = (81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                            emit Transfer((((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                            if delegates[address(msg.sender)] != 0:
                                                                                if ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                    if delegates[address(msg.sender)]:
                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                            if 0 > !(((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                else:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            emit DelegateVotesChanged(0, ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                        else:
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                revert with 0, 17
                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                revert with 0, 50
                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                revert with 0, 17
                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    revert with 0, 17
                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                else:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                            if sub_6bfdb278Address:
                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                            if sub_c375a48bAddress:
                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                        gas gas_remaining wei
                                                                                if not ext_call.success:
                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                require return_data.size >= 32
                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                if ext_call.return_data[0]:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                         gas gas_remaining wei
                                                                                        args msg.sender, ((81 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (81 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (81 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                        else:
                                                                            if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 44705682:
                                                                                if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 94 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                    revert with 0, 17
                                                                                if not sub_fa78668f:
                                                                                    revert with 0, 18
                                                                                if (94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                    revert with 0, 17
                                                                                lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                if not msg.sender:
                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                if totalSupply > !(((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                    revert with 0, 17
                                                                                totalSupply = totalSupply + ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                if balanceOf[address(msg.sender)] > !(((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                    revert with 0, 17
                                                                                balanceOf[address(msg.sender)] = (94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                emit Transfer((((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                if delegates[address(msg.sender)] != 0:
                                                                                    if ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                        if delegates[address(msg.sender)]:
                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                if 0 > !(((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                emit DelegateVotesChanged(0, ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                            else:
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                    revert with 0, 17
                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                    revert with 0, 50
                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                    revert with 0, 17
                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        revert with 0, 17
                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    else:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                if sub_6bfdb278Address:
                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                if sub_c375a48bAddress:
                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                            gas gas_remaining wei
                                                                                    if not ext_call.success:
                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                    require return_data.size >= 32
                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                    if ext_call.return_data[0]:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                             gas gas_remaining wei
                                                                                            args msg.sender, ((94 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (94 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (94 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                            else:
                                                                                if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 47335428:
                                                                                    if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 108 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                        revert with 0, 17
                                                                                    if not sub_fa78668f:
                                                                                        revert with 0, 18
                                                                                    if (108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                        revert with 0, 17
                                                                                    lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                    if not msg.sender:
                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                    if totalSupply > !(((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                        revert with 0, 17
                                                                                    totalSupply = totalSupply + ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                    if balanceOf[address(msg.sender)] > !(((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                        revert with 0, 17
                                                                                    balanceOf[address(msg.sender)] = (108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                    emit Transfer((((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                    if delegates[address(msg.sender)] != 0:
                                                                                        if ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                            if delegates[address(msg.sender)]:
                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                    if 0 > !(((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    emit DelegateVotesChanged(0, ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                else:
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                        revert with 0, 17
                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                        revert with 0, 50
                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                        revert with 0, 17
                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            revert with 0, 17
                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        else:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                    if sub_6bfdb278Address:
                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args msg.sender, ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                    if sub_c375a48bAddress:
                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                gas gas_remaining wei
                                                                                        if not ext_call.success:
                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                        require return_data.size >= 32
                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                        if ext_call.return_data[0]:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                 gas gas_remaining wei
                                                                                                args msg.sender, ((108 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (108 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (108 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                else:
                                                                                    if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 49965174:
                                                                                        if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 124 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                            revert with 0, 17
                                                                                        if not sub_fa78668f:
                                                                                            revert with 0, 18
                                                                                        if (124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                            revert with 0, 17
                                                                                        lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                        if not msg.sender:
                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                        if totalSupply > !(((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                            revert with 0, 17
                                                                                        totalSupply = totalSupply + ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                        if balanceOf[address(msg.sender)] > !(((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                            revert with 0, 17
                                                                                        balanceOf[address(msg.sender)] = (124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                        emit Transfer((((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                        if delegates[address(msg.sender)] != 0:
                                                                                            if ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                                if delegates[address(msg.sender)]:
                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                        if 0 > !(((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        emit DelegateVotesChanged(0, ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                    else:
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                            revert with 0, 17
                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                            revert with 0, 50
                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                            revert with 0, 17
                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                revert with 0, 17
                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            else:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                        if sub_6bfdb278Address:
                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args msg.sender, ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                        if sub_c375a48bAddress:
                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                    gas gas_remaining wei
                                                                                            if not ext_call.success:
                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                            require return_data.size >= 32
                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                            if ext_call.return_data[0]:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                     gas gas_remaining wei
                                                                                                    args msg.sender, ((124 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (124 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (124 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                    else:
                                                                                        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 52594920:
                                                                                            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 142 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                                revert with 0, 17
                                                                                            if not sub_fa78668f:
                                                                                                revert with 0, 18
                                                                                            if (142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                                revert with 0, 17
                                                                                            lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                            if not msg.sender:
                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                            if totalSupply > !(((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                revert with 0, 17
                                                                                            totalSupply = totalSupply + ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                            if balanceOf[address(msg.sender)] > !(((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                revert with 0, 17
                                                                                            balanceOf[address(msg.sender)] = (142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                            emit Transfer((((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                            if delegates[address(msg.sender)] != 0:
                                                                                                if ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                                    if delegates[address(msg.sender)]:
                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                            if 0 > !(((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            emit DelegateVotesChanged(0, ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                        else:
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                revert with 0, 17
                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                revert with 0, 50
                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                revert with 0, 17
                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    revert with 0, 17
                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                else:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                            if sub_6bfdb278Address:
                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args msg.sender, ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                            if sub_c375a48bAddress:
                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                        gas gas_remaining wei
                                                                                                if not ext_call.success:
                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                require return_data.size >= 32
                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                if ext_call.return_data[0]:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                         gas gas_remaining wei
                                                                                                        args msg.sender, ((142 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (142 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (142 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                        else:
                                                                                            if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 55224666:
                                                                                                if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 164 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                                    revert with 0, 17
                                                                                                if not sub_fa78668f:
                                                                                                    revert with 0, 18
                                                                                                if (164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                                    revert with 0, 17
                                                                                                lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                                if not msg.sender:
                                                                                                    revert with 0, 'ERC20: mint to the zero address'
                                                                                                if totalSupply > !(((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                    revert with 0, 17
                                                                                                totalSupply = totalSupply + ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                if balanceOf[address(msg.sender)] > !(((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                    revert with 0, 17
                                                                                                balanceOf[address(msg.sender)] = (164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                                emit Transfer((((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                                if delegates[address(msg.sender)] != 0:
                                                                                                    if ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                                        if delegates[address(msg.sender)]:
                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                if 0 > !(((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                emit DelegateVotesChanged(0, ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                            else:
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                    revert with 0, 17
                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                    revert with 0, 50
                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                    revert with 0, 17
                                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        revert with 0, 17
                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    else:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                if sub_6bfdb278Address:
                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                    staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender, ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                if sub_c375a48bAddress:
                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                    staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                            gas gas_remaining wei
                                                                                                    if not ext_call.success:
                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                    require return_data.size >= 32
                                                                                                    require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                    if ext_call.return_data[0]:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                             gas gas_remaining wei
                                                                                                            args msg.sender, ((164 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (164 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (164 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                            else:
                                                                                                if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 57854412:
                                                                                                    if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 188 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                                        revert with 0, 17
                                                                                                    if not sub_fa78668f:
                                                                                                        revert with 0, 18
                                                                                                    if (188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                                        revert with 0, 17
                                                                                                    lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                                    if not msg.sender:
                                                                                                        revert with 0, 'ERC20: mint to the zero address'
                                                                                                    if totalSupply > !(((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                        revert with 0, 17
                                                                                                    totalSupply = totalSupply + ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                    if balanceOf[address(msg.sender)] > !(((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                        revert with 0, 17
                                                                                                    balanceOf[address(msg.sender)] = (188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                                    emit Transfer((((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                                    if delegates[address(msg.sender)] != 0:
                                                                                                        if ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                                            if delegates[address(msg.sender)]:
                                                                                                                if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                    if 0 > !(((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    emit DelegateVotesChanged(0, ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                                else:
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                        revert with 0, 17
                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                        revert with 0, 50
                                                                                                                    if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                        revert with 0, 17
                                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                        checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                        if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            revert with 0, 17
                                                                                                                        numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                        else:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                    emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                    if sub_6bfdb278Address:
                                                                                                        require ext_code.size(sub_6bfdb278Address)
                                                                                                        staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender, ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                    if sub_c375a48bAddress:
                                                                                                        require ext_code.size(sub_c375a48bAddress)
                                                                                                        staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                gas gas_remaining wei
                                                                                                        if not ext_call.success:
                                                                                                            revert with ext_call.return_data[0 len return_data.size]
                                                                                                        require return_data.size >= 32
                                                                                                        require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                        if ext_call.return_data[0]:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                 gas gas_remaining wei
                                                                                                                args msg.sender, ((188 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (188 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (188 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                else:
                                                                                                    if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 <= 60484158:
                                                                                                        if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 216 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                                            revert with 0, 17
                                                                                                        if not sub_fa78668f:
                                                                                                            revert with 0, 18
                                                                                                        if (216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                                            revert with 0, 17
                                                                                                        lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                                        if not msg.sender:
                                                                                                            revert with 0, 'ERC20: mint to the zero address'
                                                                                                        if totalSupply > !(((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                            revert with 0, 17
                                                                                                        totalSupply = totalSupply + ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                        if balanceOf[address(msg.sender)] > !(((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                            revert with 0, 17
                                                                                                        balanceOf[address(msg.sender)] = (216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                                        emit Transfer((((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                                        if delegates[address(msg.sender)] != 0:
                                                                                                            if ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                                                if delegates[address(msg.sender)]:
                                                                                                                    if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                        if 0 > !(((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        emit DelegateVotesChanged(0, ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                                    else:
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                            revert with 0, 17
                                                                                                                        if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                            revert with 0, 50
                                                                                                                        if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                            revert with 0, 17
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                            checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                            if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                revert with 0, 17
                                                                                                                            numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                            else:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                        emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                        if sub_6bfdb278Address:
                                                                                                            require ext_code.size(sub_6bfdb278Address)
                                                                                                            staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args msg.sender, ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                        if sub_c375a48bAddress:
                                                                                                            require ext_code.size(sub_c375a48bAddress)
                                                                                                            staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                    gas gas_remaining wei
                                                                                                            if not ext_call.success:
                                                                                                                revert with ext_call.return_data[0 len return_data.size]
                                                                                                            require return_data.size >= 32
                                                                                                            require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                            if ext_call.return_data[0]:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                     gas gas_remaining wei
                                                                                                                    args msg.sender, ((216 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (216 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (216 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                    else:
                                                                                                        if lockedAmount[address(msg.sender)].field_256 - lockedAmount[address(msg.sender)].field_0 + arg1 > 63113904:
                                                                                                            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 0 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            if 0 / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                                                revert with 0, 17
                                                                                                            lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                                            if not msg.sender:
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply = totalSupply + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if balanceOf[address(msg.sender)] > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(msg.sender)] = 0 / sub_fa78668f / 100
                                                                                                            emit Transfer(((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                                            if delegates[address(msg.sender)] != 0:
                                                                                                                if (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                                                    if delegates[address(msg.sender)]:
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            if 0 > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(0, (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !((0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, (0 / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                        else:
                                                                                                            if (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512) and 249 > -1 / (lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (arg1 * lockedAmount[address(msg.sender)].field_512):
                                                                                                                revert with 0, 17
                                                                                                            if not sub_fa78668f:
                                                                                                                revert with 0, 18
                                                                                                            if (249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100 < balanceOf[address(msg.sender)]:
                                                                                                                revert with 0, 17
                                                                                                            lockedAmount[address(msg.sender)].field_256 += arg1
                                                                                                            if not msg.sender:
                                                                                                                revert with 0, 'ERC20: mint to the zero address'
                                                                                                            if totalSupply > !(((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                revert with 0, 17
                                                                                                            totalSupply = totalSupply + ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                            if balanceOf[address(msg.sender)] > !(((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                revert with 0, 17
                                                                                                            balanceOf[address(msg.sender)] = (249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100
                                                                                                            emit Transfer((((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]), 0, msg.sender);
                                                                                                            if delegates[address(msg.sender)] != 0:
                                                                                                                if ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)] > 0:
                                                                                                                    if delegates[address(msg.sender)]:
                                                                                                                        if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                            if 0 > !(((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(0, ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                                        else:
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                revert with 0, 17
                                                                                                                            if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                revert with 0, 50
                                                                                                                            if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 > !(((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]):
                                                                                                                                revert with 0, 17
                                                                                                                            if not numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                    revert with 0, 17
                                                                                                                                numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            else:
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                    revert with 0, 17
                                                                                                                                if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                    revert with 0, 50
                                                                                                                                if checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_0 == block.number:
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] < 1:
                                                                                                                                        revert with 0, 17
                                                                                                                                    if numCheckpoints[stor10[address(msg.sender)]] - 1 >= checkpoints[stor10[address(msg.sender)]].field_0:
                                                                                                                                        revert with 0, 50
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                else:
                                                                                                                                    checkpoints[stor10[address(msg.sender)]].field_0++
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_0 = block.number
                                                                                                                                    checkpoints[stor10[address(msg.sender)]][checkpoints[stor10[address(msg.sender)]].field_0].field_256 = checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                                    if 1 > !numCheckpoints[stor10[address(msg.sender)]]:
                                                                                                                                        revert with 0, 17
                                                                                                                                    numCheckpoints[stor10[address(msg.sender)]]++
                                                                                                                            emit DelegateVotesChanged(checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256, checkpoints[stor10[address(msg.sender)]][stor9[stor10[address(msg.sender)]] - 1].field_256 + ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)], delegates[address(msg.sender)]);
                                                                                                            if sub_6bfdb278Address:
                                                                                                                require ext_code.size(sub_6bfdb278Address)
                                                                                                                staticcall sub_6bfdb278Address.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_6bfdb278Address)
                                                                                                                    call sub_6bfdb278Address.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
                                                                                                            if sub_c375a48bAddress:
                                                                                                                require ext_code.size(sub_c375a48bAddress)
                                                                                                                staticcall sub_c375a48bAddress.isPoolActive() with:
                                                                                                                        gas gas_remaining wei
                                                                                                                if not ext_call.success:
                                                                                                                    revert with ext_call.return_data[0 len return_data.size]
                                                                                                                require return_data.size >= 32
                                                                                                                require ext_call.return_data[0] == bool(ext_call.return_data[0])
                                                                                                                if ext_call.return_data[0]:
                                                                                                                    require ext_code.size(sub_c375a48bAddress)
                                                                                                                    call sub_c375a48bAddress.stake(address arg1, uint256 arg2) with:
                                                                                                                         gas gas_remaining wei
                                                                                                                        args msg.sender, ((249 * lockedAmount[address(msg.sender)].field_256 * lockedAmount[address(msg.sender)].field_512) - (249 * lockedAmount[address(msg.sender)].field_0 * lockedAmount[address(msg.sender)].field_512) + (249 * arg1 * lockedAmount[address(msg.sender)].field_512) / sub_fa78668f / 100) - balanceOf[address(msg.sender)]
                                                                                                                    if not ext_call.success:
                                                                                                                        revert with ext_call.return_data[0 len return_data.size]
    stor2 = 1
}



}
