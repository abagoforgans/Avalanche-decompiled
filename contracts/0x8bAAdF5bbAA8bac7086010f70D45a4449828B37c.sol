contract main {




// =====================  Runtime code  =====================


#
#  - elkCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4)
#
function _fallback() payable {
    revert
}

function sub_fb816eb1(?) {
    require calldata.size - 4 >= 128
    require cd[4] <= 4294967296
    require cd[4] + 36 <= calldata.size
    require ('cd', 4).length <= 4294967296 and cd[4] + (32 * ('cd', 4).length) + 36 <= calldata.size
    require cd[36] <= 4294967296
    require cd[36] + 36 <= calldata.size
    require ('cd', 36).length <= 4294967296 and cd[36] + (32 * ('cd', 36).length) + 36 <= calldata.size
    idx = 0
    s = cd[68]
    while idx < ('cd', 4).length:
        if idx == ('cd', 4).length - 1:
            if 0 < ('cd', 36).length:
                if idx < ('cd', 4).length:
                    if idx < ('cd', 36).length:
                        require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                        staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if address(cd[((32 * idx) + cd[36] + 36)]) < address(('cd', 36)[0]):
                            if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[18 len 14] < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[18 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[18 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[50 len 14] * s / 997 * s != ext_call.return_data[50 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                            else:
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[50 len 14] < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[50 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[50 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[18 len 14] * s / 997 * s != ext_call.return_data[18 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
                        else:
                            if address(('cd', 36)[0]) == address(cd[((32 * idx) + cd[36] + 36)]):
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[18 len 14] < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[18 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[18 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[50 len 14] * s / 997 * s != ext_call.return_data[50 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                            else:
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[50 len 14] < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[50 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[50 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[18 len 14] * s / 997 * s != ext_call.return_data[18 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
        else:
            if idx + 1 < ('cd', 36).length:
                if idx < ('cd', 4).length:
                    if idx < ('cd', 36).length:
                        require ext_code.size(address(cd[((32 * idx) + cd[4] + 36)]))
                        staticcall address(cd[((32 * idx) + cd[4] + 36)]).getReserves() with:
                                gas gas_remaining wei
                        mem[96 len 96] = ext_call.return_data[0 len 96]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require return_data.size >= 96
                        if address(cd[((32 * idx) + cd[36] + 36)]) < address(cd[((32 * idx + 1) + cd[36] + 36)]):
                            if address(cd[((32 * idx) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[18 len 14] < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[18 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[18 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[50 len 14] * s / 997 * s != ext_call.return_data[50 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                            else:
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[50 len 14] < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[50 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[50 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[18 len 14] * s / 997 * s != ext_call.return_data[18 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
                        else:
                            if address(cd[((32 * idx + 1) + cd[36] + 36)]) == address(cd[((32 * idx) + cd[36] + 36)]):
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[18 len 14]:
                                        if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[18 len 14] < 1000 * ext_call.return_data[18 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[18 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[18 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[50 len 14] * s / 997 * s != ext_call.return_data[50 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[18 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[18 len 14] / ext_call.return_data[18 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]) < 1000 * ext_call.return_data[18 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[18 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[50 len 14] * s / (997 * s) + (1000 * ext_call.return_data[18 len 14])
                                                continue 
                            else:
                                if ext_call.return_data[50 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if ext_call.return_data[18 len 14] <= 0:
                                    revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                32,
                                                53,
                                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                                mem[217 len 11]
                                if not s:
                                    if ext_call.return_data[50 len 14]:
                                        if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if 1000 * ext_call.return_data[50 len 14] < 1000 * ext_call.return_data[50 len 14]:
                                            revert with 0, 'SafeMath: addition overflow'
                                        if 1000 * ext_call.return_data[50 len 14]:
                                            idx = idx + 1
                                            s = 0 / 1000 * ext_call.return_data[50 len 14]
                                            continue 
                                else:
                                    if 997 * s / s != 997:
                                        revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                    32,
                                                    33,
                                                    0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                    mem[197 len 31]
                                    if not 997 * s:
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 0 / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 0 / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
                                    else:
                                        if 997 * ext_call.return_data[18 len 14] * s / 997 * s != ext_call.return_data[18 len 14]:
                                            revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                        32,
                                                        33,
                                                        0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                        mem[197 len 31]
                                        if not ext_call.return_data[50 len 14]:
                                            if 997 * s < 0:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if 997 * s:
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / 997 * s
                                                continue 
                                        else:
                                            if 1000 * ext_call.return_data[50 len 14] / ext_call.return_data[50 len 14] != 1000:
                                                revert with 0x8c379a000000000000000000000000000000000000000000000000000000000, 
                                                            32,
                                                            33,
                                                            0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f,
                                                            mem[197 len 31]
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]) < 1000 * ext_call.return_data[50 len 14]:
                                                revert with 0, 'SafeMath: addition overflow'
                                            if (997 * s) + (1000 * ext_call.return_data[50 len 14]):
                                                idx = idx + 1
                                                s = 997 * ext_call.return_data[18 len 14] * s / (997 * s) + (1000 * ext_call.return_data[50 len 14])
                                                continue 
        revert
    if s < cd[100]:
        revert with 0, 'err_9417'
    require ('cd', 4).length - 1 < ('cd', 4).length
    require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
    staticcall address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).token0() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
    staticcall address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).token1() with:
            gas gas_remaining wei
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ('cd', 36).length
    require 0 < ('cd', 36).length
    mem[192] = cd[68]
    mem[128] = 96
    mem[224] = ('cd', 4).length
    mem[256 len 32 * ('cd', 4).length] = call.data[cd[4] + 36 len 32 * ('cd', 4).length]
    mem[(32 * ('cd', 4).length) + 256] = 0
    mem[160] = floor32(('cd', 4).length) + 128
    mem[floor32(('cd', 4).length) + 256] = ('cd', 36).length
    mem[floor32(('cd', 4).length) + 288 len 32 * ('cd', 36).length] = call.data[cd[36] + 36 len 32 * ('cd', 36).length]
    mem[floor32(('cd', 4).length) + (32 * ('cd', 36).length) + 288] = 0
    if address(('cd', 36)[0]) == address(ext_call.return_data[0]):
        if address(('cd', 36)[0]) == ext_call.return_data[12 len 20]:
            require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
            call address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                 gas gas_remaining wei
                args s, s, address(this.address), Array(len=floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160, data=mem[128 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 5], mem[floor32(('cd', 4).length) + floor32(('cd', 36).length) + floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 457 len floor32(('cd', 4).length) + floor32(('cd', 36).length) + -floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 155])
        else:
            if not floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32:
                require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
                call address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args s, 0, address(this.address), 128, floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160, mem[128 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 5], mem[floor32(('cd', 4).length) + floor32(('cd', 36).length) + floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 457 len floor32(('cd', 4).length) + floor32(('cd', 36).length) + -floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 155]
            else:
                mem[floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + floor32(('cd', 4).length) + floor32(('cd', 36).length) + 452] = mem[floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + floor32(('cd', 4).length) + floor32(('cd', 36).length) + -(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32) + 484 len floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32]
                require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
                call address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args s, 0, address(this.address), 128, floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160, mem[128 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 5], mem[floor32(('cd', 4).length) + floor32(('cd', 36).length) + floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 457 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + -floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 27]
    else:
        if address(('cd', 36)[0]) == ext_call.return_data[12 len 20]:
            if not floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32:
                require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
                call address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, s, address(this.address), 128, floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160, mem[128 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 5], mem[floor32(('cd', 4).length) + floor32(('cd', 36).length) + floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 457 len floor32(('cd', 4).length) + floor32(('cd', 36).length) + -floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 155]
            else:
                mem[floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + floor32(('cd', 4).length) + floor32(('cd', 36).length) + 452] = mem[floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + floor32(('cd', 4).length) + floor32(('cd', 36).length) + -(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32) + 484 len floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32]
                require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
                call address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, s, address(this.address), 128, floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160, mem[128 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 5], mem[floor32(('cd', 4).length) + floor32(('cd', 36).length) + floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 457 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + -floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 27]
        else:
            if not floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32:
                require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
                call address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, 0, address(this.address), 128, floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160, mem[128 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 5], mem[floor32(('cd', 4).length) + floor32(('cd', 36).length) + floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 457 len floor32(('cd', 4).length) + floor32(('cd', 36).length) + -floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 155]
            else:
                mem[floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + floor32(('cd', 4).length) + floor32(('cd', 36).length) + 452] = mem[floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + floor32(('cd', 4).length) + floor32(('cd', 36).length) + -(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32) + 484 len floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160 % 32]
                require ext_code.size(address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]))
                call address(cd[((32 * ('cd', 4).length - 1) + cd[4] + 36)]).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                     gas gas_remaining wei
                    args 0, 0, address(this.address), 128, floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160, mem[128 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 5], mem[floor32(('cd', 4).length) + floor32(('cd', 36).length) + floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 457 len floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 160) + -floor32(floor32(('cd', 4).length) + floor32(('cd', 36).length) + 31) + 27]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
}

function joeCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, '!sender'
    require arg4.length >= 96
    require cd[(arg4 + 36)] <= 4294967296
    require cd[(arg4 + 36)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 36)] + 36)] <= 4294967296 and cd[(arg4 + 36)] + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 68 <= arg4.length + 36
    mem[96] = cd[(arg4 + cd[(arg4 + 36)] + 36)]
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]] = call.data[arg4 + cd[(arg4 + 36)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]]
    require cd[(arg4 + 68)] <= 4294967296
    require cd[(arg4 + 68)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 68)] + 36)] <= 4294967296 and cd[(arg4 + 68)] + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 68 <= arg4.length + 36
    mem[64] = (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128] = cd[(arg4 + cd[(arg4 + 68)] + 36)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160 len 32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]] = call.data[arg4 + cd[(arg4 + 68)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160] = 0
    require cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1 < cd[(arg4 + cd[(arg4 + 36)] + 36)]
    if mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1) + 140 len 20] != msg.sender:
        revert with 0, '!pair'
    require 0 < cd[(arg4 + cd[(arg4 + 68)] + 36)]
    _10 = mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
    require 0 < cd[(arg4 + cd[(arg4 + 36)] + 36)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 164] = mem[140 len 20]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 196] = cd[(arg4 + 100)]
    require ext_code.size(address(_10))
    call address(_10).0xa9059cbb with:
         gas gas_remaining wei
        args mem[140 len 20], cd[(arg4 + 100)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 
                    32,
                    33,
                    0x775472616e7366657248656c7065723a205452414e534645525f4641494c45445f,
                    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 261 len 31]
    idx = 0
    s = cd[(arg4 + 100)]
    while idx < cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1:
        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        _2504 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
        require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        _2507 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
        require idx < mem[96]
        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
            _2523 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
            _2528 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
                if address(_2523) == address(_2523):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _2996 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3131 = mem[(32 * idx + 1) + 128]
                                _3308 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3308 + 36] = 0
                                mem[_3308 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3308 + 100] = address(_3131)
                                mem[_3308 + 132] = 128
                                mem[_3308 + 164] = mem[_3308]
                                s = 0
                                while s < mem[_3308]:
                                    mem[s + _3308 + 196] = mem[s + _3308 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3308] % 32:
                                    require ext_code.size(address(_2996))
                                    call address(_2996).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3131), 128, mem[_3308 + 164 len mem[_3308] + 32]
                                else:
                                    mem[floor32(mem[_3308]) + _3308 + 196] = mem[floor32(mem[_3308]) + _3308 + -(mem[_3308] % 32) + 228 len mem[_3308] % 32]
                                    require ext_code.size(address(_2996))
                                    call address(_2996).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3131), 128, mem[_3308], mem[_3308 + 196 len floor32(mem[_3308]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3129 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3307 = mem[(32 * idx + 1) + 128]
                                _3489 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3489 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3489 + 36] = 0
                                mem[_3489 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3489 + 100] = address(_3307)
                                mem[_3489 + 132] = 128
                                mem[_3489 + 164] = mem[_3489]
                                s = 0
                                while s < mem[_3489]:
                                    mem[s + _3489 + 196] = mem[s + _3489 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3489] % 32:
                                    require ext_code.size(address(_3129))
                                    call address(_3129).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3307), 128, mem[_3489 + 164 len mem[_3489] + 32]
                                else:
                                    mem[floor32(mem[_3489]) + _3489 + 196] = mem[floor32(mem[_3489]) + _3489 + -(mem[_3489] % 32) + 228 len mem[_3489] % 32]
                                    require ext_code.size(address(_3129))
                                    call address(_3129).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3307), 128, mem[_3489], mem[_3489 + 196 len floor32(mem[_3489]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _2999 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3134 = mem[(32 * idx + 1) + 128]
                                _3310 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3310 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3310 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3310 + 68] = 0
                                mem[_3310 + 100] = address(_3134)
                                mem[_3310 + 132] = 128
                                mem[_3310 + 164] = mem[_3310]
                                s = 0
                                while s < mem[_3310]:
                                    mem[s + _3310 + 196] = mem[s + _3310 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3310] % 32:
                                    require ext_code.size(address(_2999))
                                    call address(_2999).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3134), 128, mem[_3310 + 164 len mem[_3310] + 32]
                                else:
                                    mem[floor32(mem[_3310]) + _3310 + 196] = mem[floor32(mem[_3310]) + _3310 + -(mem[_3310] % 32) + 228 len mem[_3310] % 32]
                                    require ext_code.size(address(_2999))
                                    call address(_2999).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3134), 128, mem[_3310], mem[_3310 + 196 len floor32(mem[_3310]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3132 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3309 = mem[(32 * idx + 1) + 128]
                                _3493 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3493 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3493 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3493 + 68] = 0
                                mem[_3493 + 100] = address(_3309)
                                mem[_3493 + 132] = 128
                                mem[_3493 + 164] = mem[_3493]
                                s = 0
                                while s < mem[_3493]:
                                    mem[s + _3493 + 196] = mem[s + _3493 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3493] % 32:
                                    require ext_code.size(address(_3132))
                                    call address(_3132).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3309), 128, mem[_3493 + 164 len mem[_3493] + 32]
                                else:
                                    mem[floor32(mem[_3493]) + _3493 + 196] = mem[floor32(mem[_3493]) + _3493 + -(mem[_3493] % 32) + 228 len mem[_3493] % 32]
                                    require ext_code.size(address(_3132))
                                    call address(_3132).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3309), 128, mem[_3493], mem[_3493 + 196 len floor32(mem[_3493]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _2990 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3125 = mem[(32 * idx + 1) + 128]
                                    _3304 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3304 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3304 + 36] = 0
                                    mem[_3304 + 68] = 0 / 997 * s
                                    mem[_3304 + 100] = address(_3125)
                                    mem[_3304 + 132] = 128
                                    mem[_3304 + 164] = mem[_3304]
                                    t = 0
                                    while t < mem[_3304]:
                                        mem[t + _3304 + 196] = mem[t + _3304 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3304] % 32:
                                        require ext_code.size(address(_2990))
                                        call address(_2990).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3125), 128, mem[_3304 + 164 len mem[_3304] + 32]
                                    else:
                                        mem[floor32(mem[_3304]) + _3304 + 196] = mem[floor32(mem[_3304]) + _3304 + -(mem[_3304] % 32) + 228 len mem[_3304] % 32]
                                        require ext_code.size(address(_2990))
                                        call address(_2990).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3125), 128, mem[_3304], mem[_3304 + 196 len floor32(mem[_3304]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3123 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3303 = mem[(32 * idx + 1) + 128]
                                    _3481 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3481 + 36] = 0
                                    mem[_3481 + 68] = 0 / 997 * s
                                    mem[_3481 + 100] = address(_3303)
                                    mem[_3481 + 132] = 128
                                    mem[_3481 + 164] = mem[_3481]
                                    t = 0
                                    while t < mem[_3481]:
                                        mem[t + _3481 + 196] = mem[t + _3481 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3481] % 32:
                                        require ext_code.size(address(_3123))
                                        call address(_3123).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3303), 128, mem[_3481 + 164 len mem[_3481] + 32]
                                    else:
                                        mem[floor32(mem[_3481]) + _3481 + 196] = mem[floor32(mem[_3481]) + _3481 + -(mem[_3481] % 32) + 228 len mem[_3481] % 32]
                                        require ext_code.size(address(_3123))
                                        call address(_3123).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3303), 128, mem[_3481], mem[_3481 + 196 len floor32(mem[_3481]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _2993 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3128 = mem[(32 * idx + 1) + 128]
                                    _3306 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3306 + 36] = 0 / 997 * s
                                    mem[_3306 + 68] = 0
                                    mem[_3306 + 100] = address(_3128)
                                    mem[_3306 + 132] = 128
                                    mem[_3306 + 164] = mem[_3306]
                                    t = 0
                                    while t < mem[_3306]:
                                        mem[t + _3306 + 196] = mem[t + _3306 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3306] % 32:
                                        require ext_code.size(address(_2993))
                                        call address(_2993).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3128), 128, mem[_3306 + 164 len mem[_3306] + 32]
                                    else:
                                        mem[floor32(mem[_3306]) + _3306 + 196] = mem[floor32(mem[_3306]) + _3306 + -(mem[_3306] % 32) + 228 len mem[_3306] % 32]
                                        require ext_code.size(address(_2993))
                                        call address(_2993).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3128), 128, mem[_3306], mem[_3306 + 196 len floor32(mem[_3306]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3126 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3305 = mem[(32 * idx + 1) + 128]
                                    _3485 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3485 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3485 + 36] = 0 / 997 * s
                                    mem[_3485 + 68] = 0
                                    mem[_3485 + 100] = address(_3305)
                                    mem[_3485 + 132] = 128
                                    mem[_3485 + 164] = mem[_3485]
                                    t = 0
                                    while t < mem[_3485]:
                                        mem[t + _3485 + 196] = mem[t + _3485 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3485] % 32:
                                        require ext_code.size(address(_3126))
                                        call address(_3126).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3305), 128, mem[_3485 + 164 len mem[_3485] + 32]
                                    else:
                                        mem[floor32(mem[_3485]) + _3485 + 196] = mem[floor32(mem[_3485]) + _3485 + -(mem[_3485] % 32) + 228 len mem[_3485] % 32]
                                        require ext_code.size(address(_3126))
                                        call address(_3126).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3305), 128, mem[_3485], mem[_3485 + 196 len floor32(mem[_3485]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3298 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3477 = mem[(32 * idx + 1) + 128]
                                _3732 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3732 + 36] = 0
                                mem[_3732 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3732 + 100] = address(_3477)
                                mem[_3732 + 132] = 128
                                mem[_3732 + 164] = mem[_3732]
                                t = 0
                                while t < mem[_3732]:
                                    mem[t + _3732 + 196] = mem[t + _3732 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3732] % 32:
                                    require ext_code.size(address(_3298))
                                    call address(_3298).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3477), 128, mem[_3732 + 164 len mem[_3732] + 32]
                                else:
                                    mem[floor32(mem[_3732]) + _3732 + 196] = mem[floor32(mem[_3732]) + _3732 + -(mem[_3732] % 32) + 228 len mem[_3732] % 32]
                                    require ext_code.size(address(_3298))
                                    call address(_3298).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3477), 128, mem[_3732], mem[_3732 + 196 len floor32(mem[_3732]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3475 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3731 = mem[(32 * idx + 1) + 128]
                            _3943 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3943 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3943 + 36] = 0
                            mem[_3943 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3943 + 100] = address(_3731)
                            mem[_3943 + 132] = 128
                            mem[_3943 + 164] = mem[_3943]
                            t = 0
                            while t < mem[_3943]:
                                mem[t + _3943 + 196] = mem[t + _3943 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3943] % 32:
                                require ext_code.size(address(_3475))
                                call address(_3475).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3731), 128, mem[_3943 + 164 len mem[_3943] + 32]
                            else:
                                mem[floor32(mem[_3943]) + _3943 + 196] = mem[floor32(mem[_3943]) + _3943 + -(mem[_3943] % 32) + 228 len mem[_3943] % 32]
                                require ext_code.size(address(_3475))
                                call address(_3475).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3731), 128, mem[_3943], mem[_3943 + 196 len floor32(mem[_3943]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3943]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3301 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3480 = mem[(32 * idx + 1) + 128]
                            _3734 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3734 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3734 + 68] = 0
                            mem[_3734 + 100] = address(_3480)
                            mem[_3734 + 132] = 128
                            mem[_3734 + 164] = mem[_3734]
                            t = 0
                            while t < mem[_3734]:
                                mem[t + _3734 + 196] = mem[t + _3734 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3734] % 32:
                                require ext_code.size(address(_3301))
                                call address(_3301).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3480), 128, mem[_3734 + 164 len mem[_3734] + 32]
                            else:
                                mem[floor32(mem[_3734]) + _3734 + 196] = mem[floor32(mem[_3734]) + _3734 + -(mem[_3734] % 32) + 228 len mem[_3734] % 32]
                                require ext_code.size(address(_3301))
                                call address(_3301).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3480), 128, mem[_3734], mem[_3734 + 196 len floor32(mem[_3734]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3478 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3733 = mem[(32 * idx + 1) + 128]
                        _3947 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3947 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3947 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_3947 + 68] = 0
                        mem[_3947 + 100] = address(_3733)
                        mem[_3947 + 132] = 128
                        mem[_3947 + 164] = mem[_3947]
                        t = 0
                        while t < mem[_3947]:
                            mem[t + _3947 + 196] = mem[t + _3947 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3947] % 32:
                            require ext_code.size(address(_3478))
                            call address(_3478).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3733), 128, mem[_3947 + 164 len mem[_3947] + 32]
                        else:
                            mem[floor32(mem[_3947]) + _3947 + 196] = mem[floor32(mem[_3947]) + _3947 + -(mem[_3947] % 32) + 228 len mem[_3947] % 32]
                            require ext_code.size(address(_3478))
                            call address(_3478).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3733), 128, mem[_3947], mem[_3947 + 196 len floor32(mem[_3947]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3947]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3292 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3471 = mem[(32 * idx + 1) + 128]
                                _3728 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3728 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3728 + 36] = 0
                                mem[_3728 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3728 + 100] = address(_3471)
                                mem[_3728 + 132] = 128
                                mem[_3728 + 164] = mem[_3728]
                                t = 0
                                while t < mem[_3728]:
                                    mem[t + _3728 + 196] = mem[t + _3728 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3728] % 32:
                                    require ext_code.size(address(_3292))
                                    call address(_3292).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3471), 128, mem[_3728 + 164 len mem[_3728] + 32]
                                else:
                                    mem[floor32(mem[_3728]) + _3728 + 196] = mem[floor32(mem[_3728]) + _3728 + -(mem[_3728] % 32) + 228 len mem[_3728] % 32]
                                    require ext_code.size(address(_3292))
                                    call address(_3292).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3471), 128, mem[_3728], mem[_3728 + 196 len floor32(mem[_3728]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3469 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3727 = mem[(32 * idx + 1) + 128]
                            _3935 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3935 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3935 + 36] = 0
                            mem[_3935 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3935 + 100] = address(_3727)
                            mem[_3935 + 132] = 128
                            mem[_3935 + 164] = mem[_3935]
                            t = 0
                            while t < mem[_3935]:
                                mem[t + _3935 + 196] = mem[t + _3935 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3935] % 32:
                                require ext_code.size(address(_3469))
                                call address(_3469).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3727), 128, mem[_3935 + 164 len mem[_3935] + 32]
                            else:
                                mem[floor32(mem[_3935]) + _3935 + 196] = mem[floor32(mem[_3935]) + _3935 + -(mem[_3935] % 32) + 228 len mem[_3935] % 32]
                                require ext_code.size(address(_3469))
                                call address(_3469).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3727), 128, mem[_3935], mem[_3935 + 196 len floor32(mem[_3935]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3935]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3295 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3474 = mem[(32 * idx + 1) + 128]
                            _3730 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3730 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3730 + 68] = 0
                            mem[_3730 + 100] = address(_3474)
                            mem[_3730 + 132] = 128
                            mem[_3730 + 164] = mem[_3730]
                            t = 0
                            while t < mem[_3730]:
                                mem[t + _3730 + 196] = mem[t + _3730 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3730] % 32:
                                require ext_code.size(address(_3295))
                                call address(_3295).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3474), 128, mem[_3730 + 164 len mem[_3730] + 32]
                            else:
                                mem[floor32(mem[_3730]) + _3730 + 196] = mem[floor32(mem[_3730]) + _3730 + -(mem[_3730] % 32) + 228 len mem[_3730] % 32]
                                require ext_code.size(address(_3295))
                                call address(_3295).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3474), 128, mem[_3730], mem[_3730 + 196 len floor32(mem[_3730]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3472 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3729 = mem[(32 * idx + 1) + 128]
                        _3939 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3939 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3939 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_3939 + 68] = 0
                        mem[_3939 + 100] = address(_3729)
                        mem[_3939 + 132] = 128
                        mem[_3939 + 164] = mem[_3939]
                        t = 0
                        while t < mem[_3939]:
                            mem[t + _3939 + 196] = mem[t + _3939 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3939] % 32:
                            require ext_code.size(address(_3472))
                            call address(_3472).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3729), 128, mem[_3939 + 164 len mem[_3939] + 32]
                        else:
                            mem[floor32(mem[_3939]) + _3939 + 196] = mem[floor32(mem[_3939]) + _3939 + -(mem[_3939] % 32) + 228 len mem[_3939] % 32]
                            require ext_code.size(address(_3472))
                            call address(_3472).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3729), 128, mem[_3939], mem[_3939 + 196 len floor32(mem[_3939]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3939]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3722 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3931 = mem[(32 * idx + 1) + 128]
                            _4138 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4138 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4138 + 36] = 0
                            mem[_4138 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4138 + 100] = address(_3931)
                            mem[_4138 + 132] = 128
                            mem[_4138 + 164] = mem[_4138]
                            t = 0
                            while t < mem[_4138]:
                                mem[t + _4138 + 196] = mem[t + _4138 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4138] % 32:
                                require ext_code.size(address(_3722))
                                call address(_3722).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3931), 128, mem[_4138 + 164 len mem[_4138] + 32]
                            else:
                                mem[floor32(mem[_4138]) + _4138 + 196] = mem[floor32(mem[_4138]) + _4138 + -(mem[_4138] % 32) + 228 len mem[_4138] % 32]
                                require ext_code.size(address(_3722))
                                call address(_3722).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3931), 128, mem[_4138], mem[_4138 + 196 len floor32(mem[_4138]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3929 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4137 = mem[(32 * idx + 1) + 128]
                            _4361 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4361 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4361 + 36] = 0
                            mem[_4361 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4361 + 100] = address(_4137)
                            mem[_4361 + 132] = 128
                            mem[_4361 + 164] = mem[_4361]
                            t = 0
                            while t < mem[_4361]:
                                mem[t + _4361 + 196] = mem[t + _4361 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4361] % 32:
                                require ext_code.size(address(_3929))
                                call address(_3929).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4137), 128, mem[_4361 + 164 len mem[_4361] + 32]
                            else:
                                mem[floor32(mem[_4361]) + _4361 + 196] = mem[floor32(mem[_4361]) + _4361 + -(mem[_4361] % 32) + 228 len mem[_4361] % 32]
                                require ext_code.size(address(_3929))
                                call address(_3929).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4137), 128, mem[_4361], mem[_4361 + 196 len floor32(mem[_4361]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3725 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3934 = mem[(32 * idx + 1) + 128]
                            _4140 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4140 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4140 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4140 + 68] = 0
                            mem[_4140 + 100] = address(_3934)
                            mem[_4140 + 132] = 128
                            mem[_4140 + 164] = mem[_4140]
                            t = 0
                            while t < mem[_4140]:
                                mem[t + _4140 + 196] = mem[t + _4140 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4140] % 32:
                                require ext_code.size(address(_3725))
                                call address(_3725).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3934), 128, mem[_4140 + 164 len mem[_4140] + 32]
                            else:
                                mem[floor32(mem[_4140]) + _4140 + 196] = mem[floor32(mem[_4140]) + _4140 + -(mem[_4140] % 32) + 228 len mem[_4140] % 32]
                                require ext_code.size(address(_3725))
                                call address(_3725).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3934), 128, mem[_4140], mem[_4140 + 196 len floor32(mem[_4140]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3932 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4139 = mem[(32 * idx + 1) + 128]
                            _4365 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4365 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4365 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4365 + 68] = 0
                            mem[_4365 + 100] = address(_4139)
                            mem[_4365 + 132] = 128
                            mem[_4365 + 164] = mem[_4365]
                            t = 0
                            while t < mem[_4365]:
                                mem[t + _4365 + 196] = mem[t + _4365 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4365] % 32:
                                require ext_code.size(address(_3932))
                                call address(_3932).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4139), 128, mem[_4365 + 164 len mem[_4365] + 32]
                            else:
                                mem[floor32(mem[_4365]) + _4365 + 196] = mem[floor32(mem[_4365]) + _4365 + -(mem[_4365] % 32) + 228 len mem[_4365] % 32]
                                require ext_code.size(address(_3932))
                                call address(_3932).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4139), 128, mem[_4365], mem[_4365 + 196 len floor32(mem[_4365]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3012 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3153 = mem[(32 * idx + 1) + 128]
                            _3330 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3330 + 36] = 0
                            mem[_3330 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3330 + 100] = address(_3153)
                            mem[_3330 + 132] = 128
                            mem[_3330 + 164] = mem[_3330]
                            s = 0
                            while s < mem[_3330]:
                                mem[s + _3330 + 196] = mem[s + _3330 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3330] % 32:
                                require ext_code.size(address(_3012))
                                call address(_3012).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3153), 128, mem[_3330 + 164 len mem[_3330] + 32]
                            else:
                                mem[floor32(mem[_3330]) + _3330 + 196] = mem[floor32(mem[_3330]) + _3330 + -(mem[_3330] % 32) + 228 len mem[_3330] % 32]
                                require ext_code.size(address(_3012))
                                call address(_3012).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3153), 128, mem[_3330], mem[_3330 + 196 len floor32(mem[_3330]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3151 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3329 = mem[(32 * idx + 1) + 128]
                            _3521 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3521 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3521 + 36] = 0
                            mem[_3521 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3521 + 100] = address(_3329)
                            mem[_3521 + 132] = 128
                            mem[_3521 + 164] = mem[_3521]
                            s = 0
                            while s < mem[_3521]:
                                mem[s + _3521 + 196] = mem[s + _3521 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3521] % 32:
                                require ext_code.size(address(_3151))
                                call address(_3151).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3329), 128, mem[_3521 + 164 len mem[_3521] + 32]
                            else:
                                mem[floor32(mem[_3521]) + _3521 + 196] = mem[floor32(mem[_3521]) + _3521 + -(mem[_3521] % 32) + 228 len mem[_3521] % 32]
                                require ext_code.size(address(_3151))
                                call address(_3151).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3329), 128, mem[_3521], mem[_3521 + 196 len floor32(mem[_3521]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3015 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3156 = mem[(32 * idx + 1) + 128]
                            _3332 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3332 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3332 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3332 + 68] = 0
                            mem[_3332 + 100] = address(_3156)
                            mem[_3332 + 132] = 128
                            mem[_3332 + 164] = mem[_3332]
                            s = 0
                            while s < mem[_3332]:
                                mem[s + _3332 + 196] = mem[s + _3332 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3332] % 32:
                                require ext_code.size(address(_3015))
                                call address(_3015).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3156), 128, mem[_3332 + 164 len mem[_3332] + 32]
                            else:
                                mem[floor32(mem[_3332]) + _3332 + 196] = mem[floor32(mem[_3332]) + _3332 + -(mem[_3332] % 32) + 228 len mem[_3332] % 32]
                                require ext_code.size(address(_3015))
                                call address(_3015).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3156), 128, mem[_3332], mem[_3332 + 196 len floor32(mem[_3332]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3154 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3331 = mem[(32 * idx + 1) + 128]
                            _3525 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3525 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3525 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3525 + 68] = 0
                            mem[_3525 + 100] = address(_3331)
                            mem[_3525 + 132] = 128
                            mem[_3525 + 164] = mem[_3525]
                            s = 0
                            while s < mem[_3525]:
                                mem[s + _3525 + 196] = mem[s + _3525 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3525] % 32:
                                require ext_code.size(address(_3154))
                                call address(_3154).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3331), 128, mem[_3525 + 164 len mem[_3525] + 32]
                            else:
                                mem[floor32(mem[_3525]) + _3525 + 196] = mem[floor32(mem[_3525]) + _3525 + -(mem[_3525] % 32) + 228 len mem[_3525] % 32]
                                require ext_code.size(address(_3154))
                                call address(_3154).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3331), 128, mem[_3525], mem[_3525 + 196 len floor32(mem[_3525]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3006 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3147 = mem[(32 * idx + 1) + 128]
                                _3326 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3326 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3326 + 36] = 0
                                mem[_3326 + 68] = 0 / 997 * s
                                mem[_3326 + 100] = address(_3147)
                                mem[_3326 + 132] = 128
                                mem[_3326 + 164] = mem[_3326]
                                t = 0
                                while t < mem[_3326]:
                                    mem[t + _3326 + 196] = mem[t + _3326 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3326] % 32:
                                    require ext_code.size(address(_3006))
                                    call address(_3006).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3147), 128, mem[_3326 + 164 len mem[_3326] + 32]
                                else:
                                    mem[floor32(mem[_3326]) + _3326 + 196] = mem[floor32(mem[_3326]) + _3326 + -(mem[_3326] % 32) + 228 len mem[_3326] % 32]
                                    require ext_code.size(address(_3006))
                                    call address(_3006).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3147), 128, mem[_3326], mem[_3326 + 196 len floor32(mem[_3326]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3145 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3325 = mem[(32 * idx + 1) + 128]
                                _3513 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3513 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3513 + 36] = 0
                                mem[_3513 + 68] = 0 / 997 * s
                                mem[_3513 + 100] = address(_3325)
                                mem[_3513 + 132] = 128
                                mem[_3513 + 164] = mem[_3513]
                                t = 0
                                while t < mem[_3513]:
                                    mem[t + _3513 + 196] = mem[t + _3513 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3513] % 32:
                                    require ext_code.size(address(_3145))
                                    call address(_3145).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3325), 128, mem[_3513 + 164 len mem[_3513] + 32]
                                else:
                                    mem[floor32(mem[_3513]) + _3513 + 196] = mem[floor32(mem[_3513]) + _3513 + -(mem[_3513] % 32) + 228 len mem[_3513] % 32]
                                    require ext_code.size(address(_3145))
                                    call address(_3145).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3325), 128, mem[_3513], mem[_3513 + 196 len floor32(mem[_3513]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3009 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3150 = mem[(32 * idx + 1) + 128]
                                _3328 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3328 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3328 + 36] = 0 / 997 * s
                                mem[_3328 + 68] = 0
                                mem[_3328 + 100] = address(_3150)
                                mem[_3328 + 132] = 128
                                mem[_3328 + 164] = mem[_3328]
                                t = 0
                                while t < mem[_3328]:
                                    mem[t + _3328 + 196] = mem[t + _3328 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3328] % 32:
                                    require ext_code.size(address(_3009))
                                    call address(_3009).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3150), 128, mem[_3328 + 164 len mem[_3328] + 32]
                                else:
                                    mem[floor32(mem[_3328]) + _3328 + 196] = mem[floor32(mem[_3328]) + _3328 + -(mem[_3328] % 32) + 228 len mem[_3328] % 32]
                                    require ext_code.size(address(_3009))
                                    call address(_3009).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3150), 128, mem[_3328], mem[_3328 + 196 len floor32(mem[_3328]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3148 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3327 = mem[(32 * idx + 1) + 128]
                                _3517 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3517 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3517 + 36] = 0 / 997 * s
                                mem[_3517 + 68] = 0
                                mem[_3517 + 100] = address(_3327)
                                mem[_3517 + 132] = 128
                                mem[_3517 + 164] = mem[_3517]
                                t = 0
                                while t < mem[_3517]:
                                    mem[t + _3517 + 196] = mem[t + _3517 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3517] % 32:
                                    require ext_code.size(address(_3148))
                                    call address(_3148).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3327), 128, mem[_3517 + 164 len mem[_3517] + 32]
                                else:
                                    mem[floor32(mem[_3517]) + _3517 + 196] = mem[floor32(mem[_3517]) + _3517 + -(mem[_3517] % 32) + 228 len mem[_3517] % 32]
                                    require ext_code.size(address(_3148))
                                    call address(_3148).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3327), 128, mem[_3517], mem[_3517 + 196 len floor32(mem[_3517]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3320 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3509 = mem[(32 * idx + 1) + 128]
                            _3758 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3758 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3758 + 36] = 0
                            mem[_3758 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3758 + 100] = address(_3509)
                            mem[_3758 + 132] = 128
                            mem[_3758 + 164] = mem[_3758]
                            t = 0
                            while t < mem[_3758]:
                                mem[t + _3758 + 196] = mem[t + _3758 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3758] % 32:
                                require ext_code.size(address(_3320))
                                call address(_3320).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3509), 128, mem[_3758 + 164 len mem[_3758] + 32]
                            else:
                                mem[floor32(mem[_3758]) + _3758 + 196] = mem[floor32(mem[_3758]) + _3758 + -(mem[_3758] % 32) + 228 len mem[_3758] % 32]
                                require ext_code.size(address(_3320))
                                call address(_3320).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3509), 128, mem[_3758], mem[_3758 + 196 len floor32(mem[_3758]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3507 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3757 = mem[(32 * idx + 1) + 128]
                        _3969 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3969 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3969 + 36] = 0
                        mem[_3969 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3969 + 100] = address(_3757)
                        mem[_3969 + 132] = 128
                        mem[_3969 + 164] = mem[_3969]
                        t = 0
                        while t < mem[_3969]:
                            mem[t + _3969 + 196] = mem[t + _3969 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3969] % 32:
                            require ext_code.size(address(_3507))
                            call address(_3507).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3757), 128, mem[_3969 + 164 len mem[_3969] + 32]
                        else:
                            mem[floor32(mem[_3969]) + _3969 + 196] = mem[floor32(mem[_3969]) + _3969 + -(mem[_3969] % 32) + 228 len mem[_3969] % 32]
                            require ext_code.size(address(_3507))
                            call address(_3507).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3757), 128, mem[_3969], mem[_3969 + 196 len floor32(mem[_3969]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3969]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3323 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3512 = mem[(32 * idx + 1) + 128]
                        _3760 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3760 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3760 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3760 + 68] = 0
                        mem[_3760 + 100] = address(_3512)
                        mem[_3760 + 132] = 128
                        mem[_3760 + 164] = mem[_3760]
                        t = 0
                        while t < mem[_3760]:
                            mem[t + _3760 + 196] = mem[t + _3760 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3760] % 32:
                            require ext_code.size(address(_3323))
                            call address(_3323).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3512), 128, mem[_3760 + 164 len mem[_3760] + 32]
                        else:
                            mem[floor32(mem[_3760]) + _3760 + 196] = mem[floor32(mem[_3760]) + _3760 + -(mem[_3760] % 32) + 228 len mem[_3760] % 32]
                            require ext_code.size(address(_3323))
                            call address(_3323).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3512), 128, mem[_3760], mem[_3760 + 196 len floor32(mem[_3760]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3510 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3759 = mem[(32 * idx + 1) + 128]
                    _3973 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_3973 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3973 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_3973 + 68] = 0
                    mem[_3973 + 100] = address(_3759)
                    mem[_3973 + 132] = 128
                    mem[_3973 + 164] = mem[_3973]
                    t = 0
                    while t < mem[_3973]:
                        mem[t + _3973 + 196] = mem[t + _3973 + 32]
                        t = t + 32
                        continue 
                    if not mem[_3973] % 32:
                        require ext_code.size(address(_3510))
                        call address(_3510).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3759), 128, mem[_3973 + 164 len mem[_3973] + 32]
                    else:
                        mem[floor32(mem[_3973]) + _3973 + 196] = mem[floor32(mem[_3973]) + _3973 + -(mem[_3973] % 32) + 228 len mem[_3973] % 32]
                        require ext_code.size(address(_3510))
                        call address(_3510).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3759), 128, mem[_3973], mem[_3973 + 196 len floor32(mem[_3973]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_3973]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3314 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3503 = mem[(32 * idx + 1) + 128]
                            _3754 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3754 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3754 + 36] = 0
                            mem[_3754 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3754 + 100] = address(_3503)
                            mem[_3754 + 132] = 128
                            mem[_3754 + 164] = mem[_3754]
                            t = 0
                            while t < mem[_3754]:
                                mem[t + _3754 + 196] = mem[t + _3754 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3754] % 32:
                                require ext_code.size(address(_3314))
                                call address(_3314).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3503), 128, mem[_3754 + 164 len mem[_3754] + 32]
                            else:
                                mem[floor32(mem[_3754]) + _3754 + 196] = mem[floor32(mem[_3754]) + _3754 + -(mem[_3754] % 32) + 228 len mem[_3754] % 32]
                                require ext_code.size(address(_3314))
                                call address(_3314).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3503), 128, mem[_3754], mem[_3754 + 196 len floor32(mem[_3754]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3501 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3753 = mem[(32 * idx + 1) + 128]
                        _3961 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3961 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3961 + 36] = 0
                        mem[_3961 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3961 + 100] = address(_3753)
                        mem[_3961 + 132] = 128
                        mem[_3961 + 164] = mem[_3961]
                        t = 0
                        while t < mem[_3961]:
                            mem[t + _3961 + 196] = mem[t + _3961 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3961] % 32:
                            require ext_code.size(address(_3501))
                            call address(_3501).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3753), 128, mem[_3961 + 164 len mem[_3961] + 32]
                        else:
                            mem[floor32(mem[_3961]) + _3961 + 196] = mem[floor32(mem[_3961]) + _3961 + -(mem[_3961] % 32) + 228 len mem[_3961] % 32]
                            require ext_code.size(address(_3501))
                            call address(_3501).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3753), 128, mem[_3961], mem[_3961 + 196 len floor32(mem[_3961]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3961]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3317 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3506 = mem[(32 * idx + 1) + 128]
                        _3756 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3756 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3756 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3756 + 68] = 0
                        mem[_3756 + 100] = address(_3506)
                        mem[_3756 + 132] = 128
                        mem[_3756 + 164] = mem[_3756]
                        t = 0
                        while t < mem[_3756]:
                            mem[t + _3756 + 196] = mem[t + _3756 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3756] % 32:
                            require ext_code.size(address(_3317))
                            call address(_3317).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3506), 128, mem[_3756 + 164 len mem[_3756] + 32]
                        else:
                            mem[floor32(mem[_3756]) + _3756 + 196] = mem[floor32(mem[_3756]) + _3756 + -(mem[_3756] % 32) + 228 len mem[_3756] % 32]
                            require ext_code.size(address(_3317))
                            call address(_3317).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3506), 128, mem[_3756], mem[_3756 + 196 len floor32(mem[_3756]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3504 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3755 = mem[(32 * idx + 1) + 128]
                    _3965 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_3965 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3965 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_3965 + 68] = 0
                    mem[_3965 + 100] = address(_3755)
                    mem[_3965 + 132] = 128
                    mem[_3965 + 164] = mem[_3965]
                    t = 0
                    while t < mem[_3965]:
                        mem[t + _3965 + 196] = mem[t + _3965 + 32]
                        t = t + 32
                        continue 
                    if not mem[_3965] % 32:
                        require ext_code.size(address(_3504))
                        call address(_3504).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3755), 128, mem[_3965 + 164 len mem[_3965] + 32]
                    else:
                        mem[floor32(mem[_3965]) + _3965 + 196] = mem[floor32(mem[_3965]) + _3965 + -(mem[_3965] % 32) + 228 len mem[_3965] % 32]
                        require ext_code.size(address(_3504))
                        call address(_3504).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3755), 128, mem[_3965], mem[_3965 + 196 len floor32(mem[_3965]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_3965]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3748 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3957 = mem[(32 * idx + 1) + 128]
                        _4166 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4166 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4166 + 36] = 0
                        mem[_4166 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4166 + 100] = address(_3957)
                        mem[_4166 + 132] = 128
                        mem[_4166 + 164] = mem[_4166]
                        t = 0
                        while t < mem[_4166]:
                            mem[t + _4166 + 196] = mem[t + _4166 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4166] % 32:
                            require ext_code.size(address(_3748))
                            call address(_3748).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3957), 128, mem[_4166 + 164 len mem[_4166] + 32]
                        else:
                            mem[floor32(mem[_4166]) + _4166 + 196] = mem[floor32(mem[_4166]) + _4166 + -(mem[_4166] % 32) + 228 len mem[_4166] % 32]
                            require ext_code.size(address(_3748))
                            call address(_3748).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3957), 128, mem[_4166], mem[_4166 + 196 len floor32(mem[_4166]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3955 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4165 = mem[(32 * idx + 1) + 128]
                        _4385 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4385 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4385 + 36] = 0
                        mem[_4385 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4385 + 100] = address(_4165)
                        mem[_4385 + 132] = 128
                        mem[_4385 + 164] = mem[_4385]
                        t = 0
                        while t < mem[_4385]:
                            mem[t + _4385 + 196] = mem[t + _4385 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4385] % 32:
                            require ext_code.size(address(_3955))
                            call address(_3955).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4165), 128, mem[_4385 + 164 len mem[_4385] + 32]
                        else:
                            mem[floor32(mem[_4385]) + _4385 + 196] = mem[floor32(mem[_4385]) + _4385 + -(mem[_4385] % 32) + 228 len mem[_4385] % 32]
                            require ext_code.size(address(_3955))
                            call address(_3955).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4165), 128, mem[_4385], mem[_4385 + 196 len floor32(mem[_4385]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3751 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3960 = mem[(32 * idx + 1) + 128]
                        _4168 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4168 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4168 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4168 + 68] = 0
                        mem[_4168 + 100] = address(_3960)
                        mem[_4168 + 132] = 128
                        mem[_4168 + 164] = mem[_4168]
                        t = 0
                        while t < mem[_4168]:
                            mem[t + _4168 + 196] = mem[t + _4168 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4168] % 32:
                            require ext_code.size(address(_3751))
                            call address(_3751).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3960), 128, mem[_4168 + 164 len mem[_4168] + 32]
                        else:
                            mem[floor32(mem[_4168]) + _4168 + 196] = mem[floor32(mem[_4168]) + _4168 + -(mem[_4168] % 32) + 228 len mem[_4168] % 32]
                            require ext_code.size(address(_3751))
                            call address(_3751).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3960), 128, mem[_4168], mem[_4168 + 196 len floor32(mem[_4168]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3958 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4167 = mem[(32 * idx + 1) + 128]
                        _4389 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4389 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4389 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4389 + 68] = 0
                        mem[_4389 + 100] = address(_4167)
                        mem[_4389 + 132] = 128
                        mem[_4389 + 164] = mem[_4389]
                        t = 0
                        while t < mem[_4389]:
                            mem[t + _4389 + 196] = mem[t + _4389 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4389] % 32:
                            require ext_code.size(address(_3958))
                            call address(_3958).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4167), 128, mem[_4389 + 164 len mem[_4389] + 32]
                        else:
                            mem[floor32(mem[_4389]) + _4389 + 196] = mem[floor32(mem[_4389]) + _4389 + -(mem[_4389] % 32) + 228 len mem[_4389] % 32]
                            require ext_code.size(address(_3958))
                            call address(_3958).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4167), 128, mem[_4389], mem[_4389 + 196 len floor32(mem[_4389]) + 32]
            else:
                if address(_2528) == address(_2523):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3028 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3175 = mem[(32 * idx + 1) + 128]
                                _3352 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3352 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3352 + 36] = 0
                                mem[_3352 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3352 + 100] = address(_3175)
                                mem[_3352 + 132] = 128
                                mem[_3352 + 164] = mem[_3352]
                                s = 0
                                while s < mem[_3352]:
                                    mem[s + _3352 + 196] = mem[s + _3352 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3352] % 32:
                                    require ext_code.size(address(_3028))
                                    call address(_3028).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3175), 128, mem[_3352 + 164 len mem[_3352] + 32]
                                else:
                                    mem[floor32(mem[_3352]) + _3352 + 196] = mem[floor32(mem[_3352]) + _3352 + -(mem[_3352] % 32) + 228 len mem[_3352] % 32]
                                    require ext_code.size(address(_3028))
                                    call address(_3028).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3175), 128, mem[_3352], mem[_3352 + 196 len floor32(mem[_3352]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3173 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3351 = mem[(32 * idx + 1) + 128]
                                _3553 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3553 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3553 + 36] = 0
                                mem[_3553 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3553 + 100] = address(_3351)
                                mem[_3553 + 132] = 128
                                mem[_3553 + 164] = mem[_3553]
                                s = 0
                                while s < mem[_3553]:
                                    mem[s + _3553 + 196] = mem[s + _3553 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3553] % 32:
                                    require ext_code.size(address(_3173))
                                    call address(_3173).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3351), 128, mem[_3553 + 164 len mem[_3553] + 32]
                                else:
                                    mem[floor32(mem[_3553]) + _3553 + 196] = mem[floor32(mem[_3553]) + _3553 + -(mem[_3553] % 32) + 228 len mem[_3553] % 32]
                                    require ext_code.size(address(_3173))
                                    call address(_3173).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3351), 128, mem[_3553], mem[_3553 + 196 len floor32(mem[_3553]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3031 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3178 = mem[(32 * idx + 1) + 128]
                                _3354 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3354 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3354 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3354 + 68] = 0
                                mem[_3354 + 100] = address(_3178)
                                mem[_3354 + 132] = 128
                                mem[_3354 + 164] = mem[_3354]
                                s = 0
                                while s < mem[_3354]:
                                    mem[s + _3354 + 196] = mem[s + _3354 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3354] % 32:
                                    require ext_code.size(address(_3031))
                                    call address(_3031).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3178), 128, mem[_3354 + 164 len mem[_3354] + 32]
                                else:
                                    mem[floor32(mem[_3354]) + _3354 + 196] = mem[floor32(mem[_3354]) + _3354 + -(mem[_3354] % 32) + 228 len mem[_3354] % 32]
                                    require ext_code.size(address(_3031))
                                    call address(_3031).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3178), 128, mem[_3354], mem[_3354 + 196 len floor32(mem[_3354]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3176 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3353 = mem[(32 * idx + 1) + 128]
                                _3557 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3557 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3557 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3557 + 68] = 0
                                mem[_3557 + 100] = address(_3353)
                                mem[_3557 + 132] = 128
                                mem[_3557 + 164] = mem[_3557]
                                s = 0
                                while s < mem[_3557]:
                                    mem[s + _3557 + 196] = mem[s + _3557 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3557] % 32:
                                    require ext_code.size(address(_3176))
                                    call address(_3176).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3353), 128, mem[_3557 + 164 len mem[_3557] + 32]
                                else:
                                    mem[floor32(mem[_3557]) + _3557 + 196] = mem[floor32(mem[_3557]) + _3557 + -(mem[_3557] % 32) + 228 len mem[_3557] % 32]
                                    require ext_code.size(address(_3176))
                                    call address(_3176).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3353), 128, mem[_3557], mem[_3557 + 196 len floor32(mem[_3557]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3022 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3169 = mem[(32 * idx + 1) + 128]
                                    _3348 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3348 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3348 + 36] = 0
                                    mem[_3348 + 68] = 0 / 997 * s
                                    mem[_3348 + 100] = address(_3169)
                                    mem[_3348 + 132] = 128
                                    mem[_3348 + 164] = mem[_3348]
                                    t = 0
                                    while t < mem[_3348]:
                                        mem[t + _3348 + 196] = mem[t + _3348 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3348] % 32:
                                        require ext_code.size(address(_3022))
                                        call address(_3022).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3169), 128, mem[_3348 + 164 len mem[_3348] + 32]
                                    else:
                                        mem[floor32(mem[_3348]) + _3348 + 196] = mem[floor32(mem[_3348]) + _3348 + -(mem[_3348] % 32) + 228 len mem[_3348] % 32]
                                        require ext_code.size(address(_3022))
                                        call address(_3022).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3169), 128, mem[_3348], mem[_3348 + 196 len floor32(mem[_3348]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3167 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3347 = mem[(32 * idx + 1) + 128]
                                    _3545 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3545 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3545 + 36] = 0
                                    mem[_3545 + 68] = 0 / 997 * s
                                    mem[_3545 + 100] = address(_3347)
                                    mem[_3545 + 132] = 128
                                    mem[_3545 + 164] = mem[_3545]
                                    t = 0
                                    while t < mem[_3545]:
                                        mem[t + _3545 + 196] = mem[t + _3545 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3545] % 32:
                                        require ext_code.size(address(_3167))
                                        call address(_3167).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3347), 128, mem[_3545 + 164 len mem[_3545] + 32]
                                    else:
                                        mem[floor32(mem[_3545]) + _3545 + 196] = mem[floor32(mem[_3545]) + _3545 + -(mem[_3545] % 32) + 228 len mem[_3545] % 32]
                                        require ext_code.size(address(_3167))
                                        call address(_3167).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3347), 128, mem[_3545], mem[_3545 + 196 len floor32(mem[_3545]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3025 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3172 = mem[(32 * idx + 1) + 128]
                                    _3350 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3350 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3350 + 36] = 0 / 997 * s
                                    mem[_3350 + 68] = 0
                                    mem[_3350 + 100] = address(_3172)
                                    mem[_3350 + 132] = 128
                                    mem[_3350 + 164] = mem[_3350]
                                    t = 0
                                    while t < mem[_3350]:
                                        mem[t + _3350 + 196] = mem[t + _3350 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3350] % 32:
                                        require ext_code.size(address(_3025))
                                        call address(_3025).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3172), 128, mem[_3350 + 164 len mem[_3350] + 32]
                                    else:
                                        mem[floor32(mem[_3350]) + _3350 + 196] = mem[floor32(mem[_3350]) + _3350 + -(mem[_3350] % 32) + 228 len mem[_3350] % 32]
                                        require ext_code.size(address(_3025))
                                        call address(_3025).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3172), 128, mem[_3350], mem[_3350 + 196 len floor32(mem[_3350]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3170 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3349 = mem[(32 * idx + 1) + 128]
                                    _3549 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3549 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3549 + 36] = 0 / 997 * s
                                    mem[_3549 + 68] = 0
                                    mem[_3549 + 100] = address(_3349)
                                    mem[_3549 + 132] = 128
                                    mem[_3549 + 164] = mem[_3549]
                                    t = 0
                                    while t < mem[_3549]:
                                        mem[t + _3549 + 196] = mem[t + _3549 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3549] % 32:
                                        require ext_code.size(address(_3170))
                                        call address(_3170).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3349), 128, mem[_3549 + 164 len mem[_3549] + 32]
                                    else:
                                        mem[floor32(mem[_3549]) + _3549 + 196] = mem[floor32(mem[_3549]) + _3549 + -(mem[_3549] % 32) + 228 len mem[_3549] % 32]
                                        require ext_code.size(address(_3170))
                                        call address(_3170).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3349), 128, mem[_3549], mem[_3549 + 196 len floor32(mem[_3549]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3342 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3541 = mem[(32 * idx + 1) + 128]
                                _3784 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3784 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3784 + 36] = 0
                                mem[_3784 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3784 + 100] = address(_3541)
                                mem[_3784 + 132] = 128
                                mem[_3784 + 164] = mem[_3784]
                                t = 0
                                while t < mem[_3784]:
                                    mem[t + _3784 + 196] = mem[t + _3784 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3784] % 32:
                                    require ext_code.size(address(_3342))
                                    call address(_3342).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3541), 128, mem[_3784 + 164 len mem[_3784] + 32]
                                else:
                                    mem[floor32(mem[_3784]) + _3784 + 196] = mem[floor32(mem[_3784]) + _3784 + -(mem[_3784] % 32) + 228 len mem[_3784] % 32]
                                    require ext_code.size(address(_3342))
                                    call address(_3342).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3541), 128, mem[_3784], mem[_3784 + 196 len floor32(mem[_3784]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3539 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3783 = mem[(32 * idx + 1) + 128]
                            _3995 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3995 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3995 + 36] = 0
                            mem[_3995 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3995 + 100] = address(_3783)
                            mem[_3995 + 132] = 128
                            mem[_3995 + 164] = mem[_3995]
                            t = 0
                            while t < mem[_3995]:
                                mem[t + _3995 + 196] = mem[t + _3995 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3995] % 32:
                                require ext_code.size(address(_3539))
                                call address(_3539).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3783), 128, mem[_3995 + 164 len mem[_3995] + 32]
                            else:
                                mem[floor32(mem[_3995]) + _3995 + 196] = mem[floor32(mem[_3995]) + _3995 + -(mem[_3995] % 32) + 228 len mem[_3995] % 32]
                                require ext_code.size(address(_3539))
                                call address(_3539).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3783), 128, mem[_3995], mem[_3995 + 196 len floor32(mem[_3995]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3995]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3345 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3544 = mem[(32 * idx + 1) + 128]
                            _3786 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3786 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3786 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3786 + 68] = 0
                            mem[_3786 + 100] = address(_3544)
                            mem[_3786 + 132] = 128
                            mem[_3786 + 164] = mem[_3786]
                            t = 0
                            while t < mem[_3786]:
                                mem[t + _3786 + 196] = mem[t + _3786 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3786] % 32:
                                require ext_code.size(address(_3345))
                                call address(_3345).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3544), 128, mem[_3786 + 164 len mem[_3786] + 32]
                            else:
                                mem[floor32(mem[_3786]) + _3786 + 196] = mem[floor32(mem[_3786]) + _3786 + -(mem[_3786] % 32) + 228 len mem[_3786] % 32]
                                require ext_code.size(address(_3345))
                                call address(_3345).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3544), 128, mem[_3786], mem[_3786 + 196 len floor32(mem[_3786]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3542 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3785 = mem[(32 * idx + 1) + 128]
                        _3999 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3999 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3999 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_3999 + 68] = 0
                        mem[_3999 + 100] = address(_3785)
                        mem[_3999 + 132] = 128
                        mem[_3999 + 164] = mem[_3999]
                        t = 0
                        while t < mem[_3999]:
                            mem[t + _3999 + 196] = mem[t + _3999 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3999] % 32:
                            require ext_code.size(address(_3542))
                            call address(_3542).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3785), 128, mem[_3999 + 164 len mem[_3999] + 32]
                        else:
                            mem[floor32(mem[_3999]) + _3999 + 196] = mem[floor32(mem[_3999]) + _3999 + -(mem[_3999] % 32) + 228 len mem[_3999] % 32]
                            require ext_code.size(address(_3542))
                            call address(_3542).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3785), 128, mem[_3999], mem[_3999 + 196 len floor32(mem[_3999]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3999]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3336 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3535 = mem[(32 * idx + 1) + 128]
                                _3780 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3780 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3780 + 36] = 0
                                mem[_3780 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3780 + 100] = address(_3535)
                                mem[_3780 + 132] = 128
                                mem[_3780 + 164] = mem[_3780]
                                t = 0
                                while t < mem[_3780]:
                                    mem[t + _3780 + 196] = mem[t + _3780 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3780] % 32:
                                    require ext_code.size(address(_3336))
                                    call address(_3336).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3535), 128, mem[_3780 + 164 len mem[_3780] + 32]
                                else:
                                    mem[floor32(mem[_3780]) + _3780 + 196] = mem[floor32(mem[_3780]) + _3780 + -(mem[_3780] % 32) + 228 len mem[_3780] % 32]
                                    require ext_code.size(address(_3336))
                                    call address(_3336).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3535), 128, mem[_3780], mem[_3780 + 196 len floor32(mem[_3780]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3533 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3779 = mem[(32 * idx + 1) + 128]
                            _3987 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3987 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3987 + 36] = 0
                            mem[_3987 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3987 + 100] = address(_3779)
                            mem[_3987 + 132] = 128
                            mem[_3987 + 164] = mem[_3987]
                            t = 0
                            while t < mem[_3987]:
                                mem[t + _3987 + 196] = mem[t + _3987 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3987] % 32:
                                require ext_code.size(address(_3533))
                                call address(_3533).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3779), 128, mem[_3987 + 164 len mem[_3987] + 32]
                            else:
                                mem[floor32(mem[_3987]) + _3987 + 196] = mem[floor32(mem[_3987]) + _3987 + -(mem[_3987] % 32) + 228 len mem[_3987] % 32]
                                require ext_code.size(address(_3533))
                                call address(_3533).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3779), 128, mem[_3987], mem[_3987 + 196 len floor32(mem[_3987]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3987]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3339 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3538 = mem[(32 * idx + 1) + 128]
                            _3782 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3782 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3782 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3782 + 68] = 0
                            mem[_3782 + 100] = address(_3538)
                            mem[_3782 + 132] = 128
                            mem[_3782 + 164] = mem[_3782]
                            t = 0
                            while t < mem[_3782]:
                                mem[t + _3782 + 196] = mem[t + _3782 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3782] % 32:
                                require ext_code.size(address(_3339))
                                call address(_3339).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3538), 128, mem[_3782 + 164 len mem[_3782] + 32]
                            else:
                                mem[floor32(mem[_3782]) + _3782 + 196] = mem[floor32(mem[_3782]) + _3782 + -(mem[_3782] % 32) + 228 len mem[_3782] % 32]
                                require ext_code.size(address(_3339))
                                call address(_3339).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3538), 128, mem[_3782], mem[_3782 + 196 len floor32(mem[_3782]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3536 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3781 = mem[(32 * idx + 1) + 128]
                        _3991 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3991 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_3991 + 68] = 0
                        mem[_3991 + 100] = address(_3781)
                        mem[_3991 + 132] = 128
                        mem[_3991 + 164] = mem[_3991]
                        t = 0
                        while t < mem[_3991]:
                            mem[t + _3991 + 196] = mem[t + _3991 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3991] % 32:
                            require ext_code.size(address(_3536))
                            call address(_3536).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3781), 128, mem[_3991 + 164 len mem[_3991] + 32]
                        else:
                            mem[floor32(mem[_3991]) + _3991 + 196] = mem[floor32(mem[_3991]) + _3991 + -(mem[_3991] % 32) + 228 len mem[_3991] % 32]
                            require ext_code.size(address(_3536))
                            call address(_3536).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3781), 128, mem[_3991], mem[_3991 + 196 len floor32(mem[_3991]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3991]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3774 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3983 = mem[(32 * idx + 1) + 128]
                            _4194 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4194 + 36] = 0
                            mem[_4194 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4194 + 100] = address(_3983)
                            mem[_4194 + 132] = 128
                            mem[_4194 + 164] = mem[_4194]
                            t = 0
                            while t < mem[_4194]:
                                mem[t + _4194 + 196] = mem[t + _4194 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4194] % 32:
                                require ext_code.size(address(_3774))
                                call address(_3774).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3983), 128, mem[_4194 + 164 len mem[_4194] + 32]
                            else:
                                mem[floor32(mem[_4194]) + _4194 + 196] = mem[floor32(mem[_4194]) + _4194 + -(mem[_4194] % 32) + 228 len mem[_4194] % 32]
                                require ext_code.size(address(_3774))
                                call address(_3774).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3983), 128, mem[_4194], mem[_4194 + 196 len floor32(mem[_4194]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3981 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4193 = mem[(32 * idx + 1) + 128]
                            _4409 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4409 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4409 + 36] = 0
                            mem[_4409 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4409 + 100] = address(_4193)
                            mem[_4409 + 132] = 128
                            mem[_4409 + 164] = mem[_4409]
                            t = 0
                            while t < mem[_4409]:
                                mem[t + _4409 + 196] = mem[t + _4409 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4409] % 32:
                                require ext_code.size(address(_3981))
                                call address(_3981).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4193), 128, mem[_4409 + 164 len mem[_4409] + 32]
                            else:
                                mem[floor32(mem[_4409]) + _4409 + 196] = mem[floor32(mem[_4409]) + _4409 + -(mem[_4409] % 32) + 228 len mem[_4409] % 32]
                                require ext_code.size(address(_3981))
                                call address(_3981).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4193), 128, mem[_4409], mem[_4409 + 196 len floor32(mem[_4409]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3777 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3986 = mem[(32 * idx + 1) + 128]
                            _4196 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4196 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4196 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4196 + 68] = 0
                            mem[_4196 + 100] = address(_3986)
                            mem[_4196 + 132] = 128
                            mem[_4196 + 164] = mem[_4196]
                            t = 0
                            while t < mem[_4196]:
                                mem[t + _4196 + 196] = mem[t + _4196 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4196] % 32:
                                require ext_code.size(address(_3777))
                                call address(_3777).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3986), 128, mem[_4196 + 164 len mem[_4196] + 32]
                            else:
                                mem[floor32(mem[_4196]) + _4196 + 196] = mem[floor32(mem[_4196]) + _4196 + -(mem[_4196] % 32) + 228 len mem[_4196] % 32]
                                require ext_code.size(address(_3777))
                                call address(_3777).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3986), 128, mem[_4196], mem[_4196 + 196 len floor32(mem[_4196]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3984 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4195 = mem[(32 * idx + 1) + 128]
                            _4413 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4413 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4413 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4413 + 68] = 0
                            mem[_4413 + 100] = address(_4195)
                            mem[_4413 + 132] = 128
                            mem[_4413 + 164] = mem[_4413]
                            t = 0
                            while t < mem[_4413]:
                                mem[t + _4413 + 196] = mem[t + _4413 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4413] % 32:
                                require ext_code.size(address(_3984))
                                call address(_3984).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4195), 128, mem[_4413 + 164 len mem[_4413] + 32]
                            else:
                                mem[floor32(mem[_4413]) + _4413 + 196] = mem[floor32(mem[_4413]) + _4413 + -(mem[_4413] % 32) + 228 len mem[_4413] % 32]
                                require ext_code.size(address(_3984))
                                call address(_3984).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4195), 128, mem[_4413], mem[_4413 + 196 len floor32(mem[_4413]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3044 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3197 = mem[(32 * idx + 1) + 128]
                            _3374 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3374 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3374 + 36] = 0
                            mem[_3374 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3374 + 100] = address(_3197)
                            mem[_3374 + 132] = 128
                            mem[_3374 + 164] = mem[_3374]
                            s = 0
                            while s < mem[_3374]:
                                mem[s + _3374 + 196] = mem[s + _3374 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3374] % 32:
                                require ext_code.size(address(_3044))
                                call address(_3044).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3197), 128, mem[_3374 + 164 len mem[_3374] + 32]
                            else:
                                mem[floor32(mem[_3374]) + _3374 + 196] = mem[floor32(mem[_3374]) + _3374 + -(mem[_3374] % 32) + 228 len mem[_3374] % 32]
                                require ext_code.size(address(_3044))
                                call address(_3044).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3197), 128, mem[_3374], mem[_3374 + 196 len floor32(mem[_3374]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3195 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3373 = mem[(32 * idx + 1) + 128]
                            _3585 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3585 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3585 + 36] = 0
                            mem[_3585 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3585 + 100] = address(_3373)
                            mem[_3585 + 132] = 128
                            mem[_3585 + 164] = mem[_3585]
                            s = 0
                            while s < mem[_3585]:
                                mem[s + _3585 + 196] = mem[s + _3585 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3585] % 32:
                                require ext_code.size(address(_3195))
                                call address(_3195).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3373), 128, mem[_3585 + 164 len mem[_3585] + 32]
                            else:
                                mem[floor32(mem[_3585]) + _3585 + 196] = mem[floor32(mem[_3585]) + _3585 + -(mem[_3585] % 32) + 228 len mem[_3585] % 32]
                                require ext_code.size(address(_3195))
                                call address(_3195).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3373), 128, mem[_3585], mem[_3585 + 196 len floor32(mem[_3585]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3047 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3200 = mem[(32 * idx + 1) + 128]
                            _3376 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3376 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3376 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3376 + 68] = 0
                            mem[_3376 + 100] = address(_3200)
                            mem[_3376 + 132] = 128
                            mem[_3376 + 164] = mem[_3376]
                            s = 0
                            while s < mem[_3376]:
                                mem[s + _3376 + 196] = mem[s + _3376 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3376] % 32:
                                require ext_code.size(address(_3047))
                                call address(_3047).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3200), 128, mem[_3376 + 164 len mem[_3376] + 32]
                            else:
                                mem[floor32(mem[_3376]) + _3376 + 196] = mem[floor32(mem[_3376]) + _3376 + -(mem[_3376] % 32) + 228 len mem[_3376] % 32]
                                require ext_code.size(address(_3047))
                                call address(_3047).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3200), 128, mem[_3376], mem[_3376 + 196 len floor32(mem[_3376]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3198 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3375 = mem[(32 * idx + 1) + 128]
                            _3589 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3589 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3589 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3589 + 68] = 0
                            mem[_3589 + 100] = address(_3375)
                            mem[_3589 + 132] = 128
                            mem[_3589 + 164] = mem[_3589]
                            s = 0
                            while s < mem[_3589]:
                                mem[s + _3589 + 196] = mem[s + _3589 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3589] % 32:
                                require ext_code.size(address(_3198))
                                call address(_3198).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3375), 128, mem[_3589 + 164 len mem[_3589] + 32]
                            else:
                                mem[floor32(mem[_3589]) + _3589 + 196] = mem[floor32(mem[_3589]) + _3589 + -(mem[_3589] % 32) + 228 len mem[_3589] % 32]
                                require ext_code.size(address(_3198))
                                call address(_3198).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3375), 128, mem[_3589], mem[_3589 + 196 len floor32(mem[_3589]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3038 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3191 = mem[(32 * idx + 1) + 128]
                                _3370 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3370 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3370 + 36] = 0
                                mem[_3370 + 68] = 0 / 997 * s
                                mem[_3370 + 100] = address(_3191)
                                mem[_3370 + 132] = 128
                                mem[_3370 + 164] = mem[_3370]
                                t = 0
                                while t < mem[_3370]:
                                    mem[t + _3370 + 196] = mem[t + _3370 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3370] % 32:
                                    require ext_code.size(address(_3038))
                                    call address(_3038).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3191), 128, mem[_3370 + 164 len mem[_3370] + 32]
                                else:
                                    mem[floor32(mem[_3370]) + _3370 + 196] = mem[floor32(mem[_3370]) + _3370 + -(mem[_3370] % 32) + 228 len mem[_3370] % 32]
                                    require ext_code.size(address(_3038))
                                    call address(_3038).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3191), 128, mem[_3370], mem[_3370 + 196 len floor32(mem[_3370]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3189 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3369 = mem[(32 * idx + 1) + 128]
                                _3577 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3577 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3577 + 36] = 0
                                mem[_3577 + 68] = 0 / 997 * s
                                mem[_3577 + 100] = address(_3369)
                                mem[_3577 + 132] = 128
                                mem[_3577 + 164] = mem[_3577]
                                t = 0
                                while t < mem[_3577]:
                                    mem[t + _3577 + 196] = mem[t + _3577 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3577] % 32:
                                    require ext_code.size(address(_3189))
                                    call address(_3189).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3369), 128, mem[_3577 + 164 len mem[_3577] + 32]
                                else:
                                    mem[floor32(mem[_3577]) + _3577 + 196] = mem[floor32(mem[_3577]) + _3577 + -(mem[_3577] % 32) + 228 len mem[_3577] % 32]
                                    require ext_code.size(address(_3189))
                                    call address(_3189).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3369), 128, mem[_3577], mem[_3577 + 196 len floor32(mem[_3577]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3041 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3194 = mem[(32 * idx + 1) + 128]
                                _3372 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3372 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3372 + 36] = 0 / 997 * s
                                mem[_3372 + 68] = 0
                                mem[_3372 + 100] = address(_3194)
                                mem[_3372 + 132] = 128
                                mem[_3372 + 164] = mem[_3372]
                                t = 0
                                while t < mem[_3372]:
                                    mem[t + _3372 + 196] = mem[t + _3372 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3372] % 32:
                                    require ext_code.size(address(_3041))
                                    call address(_3041).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3194), 128, mem[_3372 + 164 len mem[_3372] + 32]
                                else:
                                    mem[floor32(mem[_3372]) + _3372 + 196] = mem[floor32(mem[_3372]) + _3372 + -(mem[_3372] % 32) + 228 len mem[_3372] % 32]
                                    require ext_code.size(address(_3041))
                                    call address(_3041).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3194), 128, mem[_3372], mem[_3372 + 196 len floor32(mem[_3372]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3192 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3371 = mem[(32 * idx + 1) + 128]
                                _3581 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3581 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3581 + 36] = 0 / 997 * s
                                mem[_3581 + 68] = 0
                                mem[_3581 + 100] = address(_3371)
                                mem[_3581 + 132] = 128
                                mem[_3581 + 164] = mem[_3581]
                                t = 0
                                while t < mem[_3581]:
                                    mem[t + _3581 + 196] = mem[t + _3581 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3581] % 32:
                                    require ext_code.size(address(_3192))
                                    call address(_3192).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3371), 128, mem[_3581 + 164 len mem[_3581] + 32]
                                else:
                                    mem[floor32(mem[_3581]) + _3581 + 196] = mem[floor32(mem[_3581]) + _3581 + -(mem[_3581] % 32) + 228 len mem[_3581] % 32]
                                    require ext_code.size(address(_3192))
                                    call address(_3192).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3371), 128, mem[_3581], mem[_3581 + 196 len floor32(mem[_3581]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3364 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3573 = mem[(32 * idx + 1) + 128]
                            _3810 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3810 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3810 + 36] = 0
                            mem[_3810 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3810 + 100] = address(_3573)
                            mem[_3810 + 132] = 128
                            mem[_3810 + 164] = mem[_3810]
                            t = 0
                            while t < mem[_3810]:
                                mem[t + _3810 + 196] = mem[t + _3810 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3810] % 32:
                                require ext_code.size(address(_3364))
                                call address(_3364).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3573), 128, mem[_3810 + 164 len mem[_3810] + 32]
                            else:
                                mem[floor32(mem[_3810]) + _3810 + 196] = mem[floor32(mem[_3810]) + _3810 + -(mem[_3810] % 32) + 228 len mem[_3810] % 32]
                                require ext_code.size(address(_3364))
                                call address(_3364).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3573), 128, mem[_3810], mem[_3810 + 196 len floor32(mem[_3810]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3571 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3809 = mem[(32 * idx + 1) + 128]
                        _4021 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4021 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4021 + 36] = 0
                        mem[_4021 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4021 + 100] = address(_3809)
                        mem[_4021 + 132] = 128
                        mem[_4021 + 164] = mem[_4021]
                        t = 0
                        while t < mem[_4021]:
                            mem[t + _4021 + 196] = mem[t + _4021 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4021] % 32:
                            require ext_code.size(address(_3571))
                            call address(_3571).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3809), 128, mem[_4021 + 164 len mem[_4021] + 32]
                        else:
                            mem[floor32(mem[_4021]) + _4021 + 196] = mem[floor32(mem[_4021]) + _4021 + -(mem[_4021] % 32) + 228 len mem[_4021] % 32]
                            require ext_code.size(address(_3571))
                            call address(_3571).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3809), 128, mem[_4021], mem[_4021 + 196 len floor32(mem[_4021]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4021]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3367 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3576 = mem[(32 * idx + 1) + 128]
                        _3812 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3812 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3812 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3812 + 68] = 0
                        mem[_3812 + 100] = address(_3576)
                        mem[_3812 + 132] = 128
                        mem[_3812 + 164] = mem[_3812]
                        t = 0
                        while t < mem[_3812]:
                            mem[t + _3812 + 196] = mem[t + _3812 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3812] % 32:
                            require ext_code.size(address(_3367))
                            call address(_3367).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3576), 128, mem[_3812 + 164 len mem[_3812] + 32]
                        else:
                            mem[floor32(mem[_3812]) + _3812 + 196] = mem[floor32(mem[_3812]) + _3812 + -(mem[_3812] % 32) + 228 len mem[_3812] % 32]
                            require ext_code.size(address(_3367))
                            call address(_3367).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3576), 128, mem[_3812], mem[_3812 + 196 len floor32(mem[_3812]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3574 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3811 = mem[(32 * idx + 1) + 128]
                    _4025 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4025 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4025 + 68] = 0
                    mem[_4025 + 100] = address(_3811)
                    mem[_4025 + 132] = 128
                    mem[_4025 + 164] = mem[_4025]
                    t = 0
                    while t < mem[_4025]:
                        mem[t + _4025 + 196] = mem[t + _4025 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4025] % 32:
                        require ext_code.size(address(_3574))
                        call address(_3574).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3811), 128, mem[_4025 + 164 len mem[_4025] + 32]
                    else:
                        mem[floor32(mem[_4025]) + _4025 + 196] = mem[floor32(mem[_4025]) + _4025 + -(mem[_4025] % 32) + 228 len mem[_4025] % 32]
                        require ext_code.size(address(_3574))
                        call address(_3574).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3811), 128, mem[_4025], mem[_4025 + 196 len floor32(mem[_4025]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4025]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3358 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3567 = mem[(32 * idx + 1) + 128]
                            _3806 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3806 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3806 + 36] = 0
                            mem[_3806 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3806 + 100] = address(_3567)
                            mem[_3806 + 132] = 128
                            mem[_3806 + 164] = mem[_3806]
                            t = 0
                            while t < mem[_3806]:
                                mem[t + _3806 + 196] = mem[t + _3806 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3806] % 32:
                                require ext_code.size(address(_3358))
                                call address(_3358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3567), 128, mem[_3806 + 164 len mem[_3806] + 32]
                            else:
                                mem[floor32(mem[_3806]) + _3806 + 196] = mem[floor32(mem[_3806]) + _3806 + -(mem[_3806] % 32) + 228 len mem[_3806] % 32]
                                require ext_code.size(address(_3358))
                                call address(_3358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3567), 128, mem[_3806], mem[_3806 + 196 len floor32(mem[_3806]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3565 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3805 = mem[(32 * idx + 1) + 128]
                        _4013 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4013 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4013 + 36] = 0
                        mem[_4013 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4013 + 100] = address(_3805)
                        mem[_4013 + 132] = 128
                        mem[_4013 + 164] = mem[_4013]
                        t = 0
                        while t < mem[_4013]:
                            mem[t + _4013 + 196] = mem[t + _4013 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4013] % 32:
                            require ext_code.size(address(_3565))
                            call address(_3565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3805), 128, mem[_4013 + 164 len mem[_4013] + 32]
                        else:
                            mem[floor32(mem[_4013]) + _4013 + 196] = mem[floor32(mem[_4013]) + _4013 + -(mem[_4013] % 32) + 228 len mem[_4013] % 32]
                            require ext_code.size(address(_3565))
                            call address(_3565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3805), 128, mem[_4013], mem[_4013 + 196 len floor32(mem[_4013]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4013]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3361 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3570 = mem[(32 * idx + 1) + 128]
                        _3808 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3808 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3808 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3808 + 68] = 0
                        mem[_3808 + 100] = address(_3570)
                        mem[_3808 + 132] = 128
                        mem[_3808 + 164] = mem[_3808]
                        t = 0
                        while t < mem[_3808]:
                            mem[t + _3808 + 196] = mem[t + _3808 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3808] % 32:
                            require ext_code.size(address(_3361))
                            call address(_3361).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3570), 128, mem[_3808 + 164 len mem[_3808] + 32]
                        else:
                            mem[floor32(mem[_3808]) + _3808 + 196] = mem[floor32(mem[_3808]) + _3808 + -(mem[_3808] % 32) + 228 len mem[_3808] % 32]
                            require ext_code.size(address(_3361))
                            call address(_3361).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3570), 128, mem[_3808], mem[_3808 + 196 len floor32(mem[_3808]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3568 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3807 = mem[(32 * idx + 1) + 128]
                    _4017 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4017 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4017 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4017 + 68] = 0
                    mem[_4017 + 100] = address(_3807)
                    mem[_4017 + 132] = 128
                    mem[_4017 + 164] = mem[_4017]
                    t = 0
                    while t < mem[_4017]:
                        mem[t + _4017 + 196] = mem[t + _4017 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4017] % 32:
                        require ext_code.size(address(_3568))
                        call address(_3568).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3807), 128, mem[_4017 + 164 len mem[_4017] + 32]
                    else:
                        mem[floor32(mem[_4017]) + _4017 + 196] = mem[floor32(mem[_4017]) + _4017 + -(mem[_4017] % 32) + 228 len mem[_4017] % 32]
                        require ext_code.size(address(_3568))
                        call address(_3568).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3807), 128, mem[_4017], mem[_4017 + 196 len floor32(mem[_4017]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4017]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3800 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4009 = mem[(32 * idx + 1) + 128]
                        _4222 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4222 + 36] = 0
                        mem[_4222 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4222 + 100] = address(_4009)
                        mem[_4222 + 132] = 128
                        mem[_4222 + 164] = mem[_4222]
                        t = 0
                        while t < mem[_4222]:
                            mem[t + _4222 + 196] = mem[t + _4222 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4222] % 32:
                            require ext_code.size(address(_3800))
                            call address(_3800).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4009), 128, mem[_4222 + 164 len mem[_4222] + 32]
                        else:
                            mem[floor32(mem[_4222]) + _4222 + 196] = mem[floor32(mem[_4222]) + _4222 + -(mem[_4222] % 32) + 228 len mem[_4222] % 32]
                            require ext_code.size(address(_3800))
                            call address(_3800).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4009), 128, mem[_4222], mem[_4222 + 196 len floor32(mem[_4222]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4007 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4221 = mem[(32 * idx + 1) + 128]
                        _4433 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4433 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4433 + 36] = 0
                        mem[_4433 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4433 + 100] = address(_4221)
                        mem[_4433 + 132] = 128
                        mem[_4433 + 164] = mem[_4433]
                        t = 0
                        while t < mem[_4433]:
                            mem[t + _4433 + 196] = mem[t + _4433 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4433] % 32:
                            require ext_code.size(address(_4007))
                            call address(_4007).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4221), 128, mem[_4433 + 164 len mem[_4433] + 32]
                        else:
                            mem[floor32(mem[_4433]) + _4433 + 196] = mem[floor32(mem[_4433]) + _4433 + -(mem[_4433] % 32) + 228 len mem[_4433] % 32]
                            require ext_code.size(address(_4007))
                            call address(_4007).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4221), 128, mem[_4433], mem[_4433 + 196 len floor32(mem[_4433]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3803 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4012 = mem[(32 * idx + 1) + 128]
                        _4224 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4224 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4224 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4224 + 68] = 0
                        mem[_4224 + 100] = address(_4012)
                        mem[_4224 + 132] = 128
                        mem[_4224 + 164] = mem[_4224]
                        t = 0
                        while t < mem[_4224]:
                            mem[t + _4224 + 196] = mem[t + _4224 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4224] % 32:
                            require ext_code.size(address(_3803))
                            call address(_3803).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4012), 128, mem[_4224 + 164 len mem[_4224] + 32]
                        else:
                            mem[floor32(mem[_4224]) + _4224 + 196] = mem[floor32(mem[_4224]) + _4224 + -(mem[_4224] % 32) + 228 len mem[_4224] % 32]
                            require ext_code.size(address(_3803))
                            call address(_3803).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4012), 128, mem[_4224], mem[_4224 + 196 len floor32(mem[_4224]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4010 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4223 = mem[(32 * idx + 1) + 128]
                        _4437 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4437 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4437 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4437 + 68] = 0
                        mem[_4437 + 100] = address(_4223)
                        mem[_4437 + 132] = 128
                        mem[_4437 + 164] = mem[_4437]
                        t = 0
                        while t < mem[_4437]:
                            mem[t + _4437 + 196] = mem[t + _4437 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4437] % 32:
                            require ext_code.size(address(_4010))
                            call address(_4010).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4223), 128, mem[_4437 + 164 len mem[_4437] + 32]
                        else:
                            mem[floor32(mem[_4437]) + _4437 + 196] = mem[floor32(mem[_4437]) + _4437 + -(mem[_4437] % 32) + 228 len mem[_4437] % 32]
                            require ext_code.size(address(_4010))
                            call address(_4010).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4223), 128, mem[_4437], mem[_4437 + 196 len floor32(mem[_4437]) + 32]
        else:
            _2525 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
            _2529 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
                if address(_2525) == address(_2525):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3060 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3219 = mem[(32 * idx + 1) + 128]
                                _3396 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3396 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3396 + 36] = 0
                                mem[_3396 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3396 + 100] = address(_3219)
                                mem[_3396 + 132] = 128
                                mem[_3396 + 164] = mem[_3396]
                                s = 0
                                while s < mem[_3396]:
                                    mem[s + _3396 + 196] = mem[s + _3396 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3396] % 32:
                                    require ext_code.size(address(_3060))
                                    call address(_3060).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3219), 128, mem[_3396 + 164 len mem[_3396] + 32]
                                else:
                                    mem[floor32(mem[_3396]) + _3396 + 196] = mem[floor32(mem[_3396]) + _3396 + -(mem[_3396] % 32) + 228 len mem[_3396] % 32]
                                    require ext_code.size(address(_3060))
                                    call address(_3060).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3219), 128, mem[_3396], mem[_3396 + 196 len floor32(mem[_3396]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3217 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3395 = mem[(32 * idx + 1) + 128]
                                _3617 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3617 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3617 + 36] = 0
                                mem[_3617 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3617 + 100] = address(_3395)
                                mem[_3617 + 132] = 128
                                mem[_3617 + 164] = mem[_3617]
                                s = 0
                                while s < mem[_3617]:
                                    mem[s + _3617 + 196] = mem[s + _3617 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3617] % 32:
                                    require ext_code.size(address(_3217))
                                    call address(_3217).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3395), 128, mem[_3617 + 164 len mem[_3617] + 32]
                                else:
                                    mem[floor32(mem[_3617]) + _3617 + 196] = mem[floor32(mem[_3617]) + _3617 + -(mem[_3617] % 32) + 228 len mem[_3617] % 32]
                                    require ext_code.size(address(_3217))
                                    call address(_3217).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3395), 128, mem[_3617], mem[_3617 + 196 len floor32(mem[_3617]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3063 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3222 = mem[(32 * idx + 1) + 128]
                                _3398 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3398 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3398 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3398 + 68] = 0
                                mem[_3398 + 100] = address(_3222)
                                mem[_3398 + 132] = 128
                                mem[_3398 + 164] = mem[_3398]
                                s = 0
                                while s < mem[_3398]:
                                    mem[s + _3398 + 196] = mem[s + _3398 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3398] % 32:
                                    require ext_code.size(address(_3063))
                                    call address(_3063).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3222), 128, mem[_3398 + 164 len mem[_3398] + 32]
                                else:
                                    mem[floor32(mem[_3398]) + _3398 + 196] = mem[floor32(mem[_3398]) + _3398 + -(mem[_3398] % 32) + 228 len mem[_3398] % 32]
                                    require ext_code.size(address(_3063))
                                    call address(_3063).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3222), 128, mem[_3398], mem[_3398 + 196 len floor32(mem[_3398]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3220 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3397 = mem[(32 * idx + 1) + 128]
                                _3621 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3621 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3621 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3621 + 68] = 0
                                mem[_3621 + 100] = address(_3397)
                                mem[_3621 + 132] = 128
                                mem[_3621 + 164] = mem[_3621]
                                s = 0
                                while s < mem[_3621]:
                                    mem[s + _3621 + 196] = mem[s + _3621 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3621] % 32:
                                    require ext_code.size(address(_3220))
                                    call address(_3220).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3397), 128, mem[_3621 + 164 len mem[_3621] + 32]
                                else:
                                    mem[floor32(mem[_3621]) + _3621 + 196] = mem[floor32(mem[_3621]) + _3621 + -(mem[_3621] % 32) + 228 len mem[_3621] % 32]
                                    require ext_code.size(address(_3220))
                                    call address(_3220).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3397), 128, mem[_3621], mem[_3621 + 196 len floor32(mem[_3621]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3054 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3213 = mem[(32 * idx + 1) + 128]
                                    _3392 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3392 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3392 + 36] = 0
                                    mem[_3392 + 68] = 0 / 997 * s
                                    mem[_3392 + 100] = address(_3213)
                                    mem[_3392 + 132] = 128
                                    mem[_3392 + 164] = mem[_3392]
                                    t = 0
                                    while t < mem[_3392]:
                                        mem[t + _3392 + 196] = mem[t + _3392 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3392] % 32:
                                        require ext_code.size(address(_3054))
                                        call address(_3054).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3213), 128, mem[_3392 + 164 len mem[_3392] + 32]
                                    else:
                                        mem[floor32(mem[_3392]) + _3392 + 196] = mem[floor32(mem[_3392]) + _3392 + -(mem[_3392] % 32) + 228 len mem[_3392] % 32]
                                        require ext_code.size(address(_3054))
                                        call address(_3054).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3213), 128, mem[_3392], mem[_3392 + 196 len floor32(mem[_3392]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3211 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3391 = mem[(32 * idx + 1) + 128]
                                    _3609 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3609 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3609 + 36] = 0
                                    mem[_3609 + 68] = 0 / 997 * s
                                    mem[_3609 + 100] = address(_3391)
                                    mem[_3609 + 132] = 128
                                    mem[_3609 + 164] = mem[_3609]
                                    t = 0
                                    while t < mem[_3609]:
                                        mem[t + _3609 + 196] = mem[t + _3609 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3609] % 32:
                                        require ext_code.size(address(_3211))
                                        call address(_3211).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3391), 128, mem[_3609 + 164 len mem[_3609] + 32]
                                    else:
                                        mem[floor32(mem[_3609]) + _3609 + 196] = mem[floor32(mem[_3609]) + _3609 + -(mem[_3609] % 32) + 228 len mem[_3609] % 32]
                                        require ext_code.size(address(_3211))
                                        call address(_3211).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3391), 128, mem[_3609], mem[_3609 + 196 len floor32(mem[_3609]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3057 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3216 = mem[(32 * idx + 1) + 128]
                                    _3394 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3394 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3394 + 36] = 0 / 997 * s
                                    mem[_3394 + 68] = 0
                                    mem[_3394 + 100] = address(_3216)
                                    mem[_3394 + 132] = 128
                                    mem[_3394 + 164] = mem[_3394]
                                    t = 0
                                    while t < mem[_3394]:
                                        mem[t + _3394 + 196] = mem[t + _3394 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3394] % 32:
                                        require ext_code.size(address(_3057))
                                        call address(_3057).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3216), 128, mem[_3394 + 164 len mem[_3394] + 32]
                                    else:
                                        mem[floor32(mem[_3394]) + _3394 + 196] = mem[floor32(mem[_3394]) + _3394 + -(mem[_3394] % 32) + 228 len mem[_3394] % 32]
                                        require ext_code.size(address(_3057))
                                        call address(_3057).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3216), 128, mem[_3394], mem[_3394 + 196 len floor32(mem[_3394]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3214 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3393 = mem[(32 * idx + 1) + 128]
                                    _3613 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3613 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3613 + 36] = 0 / 997 * s
                                    mem[_3613 + 68] = 0
                                    mem[_3613 + 100] = address(_3393)
                                    mem[_3613 + 132] = 128
                                    mem[_3613 + 164] = mem[_3613]
                                    t = 0
                                    while t < mem[_3613]:
                                        mem[t + _3613 + 196] = mem[t + _3613 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3613] % 32:
                                        require ext_code.size(address(_3214))
                                        call address(_3214).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3393), 128, mem[_3613 + 164 len mem[_3613] + 32]
                                    else:
                                        mem[floor32(mem[_3613]) + _3613 + 196] = mem[floor32(mem[_3613]) + _3613 + -(mem[_3613] % 32) + 228 len mem[_3613] % 32]
                                        require ext_code.size(address(_3214))
                                        call address(_3214).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3393), 128, mem[_3613], mem[_3613 + 196 len floor32(mem[_3613]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3386 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3605 = mem[(32 * idx + 1) + 128]
                                _3836 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3836 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3836 + 36] = 0
                                mem[_3836 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3836 + 100] = address(_3605)
                                mem[_3836 + 132] = 128
                                mem[_3836 + 164] = mem[_3836]
                                t = 0
                                while t < mem[_3836]:
                                    mem[t + _3836 + 196] = mem[t + _3836 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3836] % 32:
                                    require ext_code.size(address(_3386))
                                    call address(_3386).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3605), 128, mem[_3836 + 164 len mem[_3836] + 32]
                                else:
                                    mem[floor32(mem[_3836]) + _3836 + 196] = mem[floor32(mem[_3836]) + _3836 + -(mem[_3836] % 32) + 228 len mem[_3836] % 32]
                                    require ext_code.size(address(_3386))
                                    call address(_3386).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3605), 128, mem[_3836], mem[_3836 + 196 len floor32(mem[_3836]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3603 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3835 = mem[(32 * idx + 1) + 128]
                            _4047 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4047 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4047 + 36] = 0
                            mem[_4047 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4047 + 100] = address(_3835)
                            mem[_4047 + 132] = 128
                            mem[_4047 + 164] = mem[_4047]
                            t = 0
                            while t < mem[_4047]:
                                mem[t + _4047 + 196] = mem[t + _4047 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4047] % 32:
                                require ext_code.size(address(_3603))
                                call address(_3603).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3835), 128, mem[_4047 + 164 len mem[_4047] + 32]
                            else:
                                mem[floor32(mem[_4047]) + _4047 + 196] = mem[floor32(mem[_4047]) + _4047 + -(mem[_4047] % 32) + 228 len mem[_4047] % 32]
                                require ext_code.size(address(_3603))
                                call address(_3603).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3835), 128, mem[_4047], mem[_4047 + 196 len floor32(mem[_4047]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4047]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3389 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3608 = mem[(32 * idx + 1) + 128]
                            _3838 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3838 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3838 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3838 + 68] = 0
                            mem[_3838 + 100] = address(_3608)
                            mem[_3838 + 132] = 128
                            mem[_3838 + 164] = mem[_3838]
                            t = 0
                            while t < mem[_3838]:
                                mem[t + _3838 + 196] = mem[t + _3838 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3838] % 32:
                                require ext_code.size(address(_3389))
                                call address(_3389).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3608), 128, mem[_3838 + 164 len mem[_3838] + 32]
                            else:
                                mem[floor32(mem[_3838]) + _3838 + 196] = mem[floor32(mem[_3838]) + _3838 + -(mem[_3838] % 32) + 228 len mem[_3838] % 32]
                                require ext_code.size(address(_3389))
                                call address(_3389).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3608), 128, mem[_3838], mem[_3838 + 196 len floor32(mem[_3838]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3606 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3837 = mem[(32 * idx + 1) + 128]
                        _4051 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4051 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4051 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_4051 + 68] = 0
                        mem[_4051 + 100] = address(_3837)
                        mem[_4051 + 132] = 128
                        mem[_4051 + 164] = mem[_4051]
                        t = 0
                        while t < mem[_4051]:
                            mem[t + _4051 + 196] = mem[t + _4051 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4051] % 32:
                            require ext_code.size(address(_3606))
                            call address(_3606).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3837), 128, mem[_4051 + 164 len mem[_4051] + 32]
                        else:
                            mem[floor32(mem[_4051]) + _4051 + 196] = mem[floor32(mem[_4051]) + _4051 + -(mem[_4051] % 32) + 228 len mem[_4051] % 32]
                            require ext_code.size(address(_3606))
                            call address(_3606).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3837), 128, mem[_4051], mem[_4051 + 196 len floor32(mem[_4051]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4051]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3380 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3599 = mem[(32 * idx + 1) + 128]
                                _3832 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3832 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3832 + 36] = 0
                                mem[_3832 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3832 + 100] = address(_3599)
                                mem[_3832 + 132] = 128
                                mem[_3832 + 164] = mem[_3832]
                                t = 0
                                while t < mem[_3832]:
                                    mem[t + _3832 + 196] = mem[t + _3832 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3832] % 32:
                                    require ext_code.size(address(_3380))
                                    call address(_3380).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3599), 128, mem[_3832 + 164 len mem[_3832] + 32]
                                else:
                                    mem[floor32(mem[_3832]) + _3832 + 196] = mem[floor32(mem[_3832]) + _3832 + -(mem[_3832] % 32) + 228 len mem[_3832] % 32]
                                    require ext_code.size(address(_3380))
                                    call address(_3380).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3599), 128, mem[_3832], mem[_3832 + 196 len floor32(mem[_3832]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3597 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3831 = mem[(32 * idx + 1) + 128]
                            _4039 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4039 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4039 + 36] = 0
                            mem[_4039 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_4039 + 100] = address(_3831)
                            mem[_4039 + 132] = 128
                            mem[_4039 + 164] = mem[_4039]
                            t = 0
                            while t < mem[_4039]:
                                mem[t + _4039 + 196] = mem[t + _4039 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4039] % 32:
                                require ext_code.size(address(_3597))
                                call address(_3597).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3831), 128, mem[_4039 + 164 len mem[_4039] + 32]
                            else:
                                mem[floor32(mem[_4039]) + _4039 + 196] = mem[floor32(mem[_4039]) + _4039 + -(mem[_4039] % 32) + 228 len mem[_4039] % 32]
                                require ext_code.size(address(_3597))
                                call address(_3597).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3831), 128, mem[_4039], mem[_4039 + 196 len floor32(mem[_4039]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4039]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3383 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3602 = mem[(32 * idx + 1) + 128]
                            _3834 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3834 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3834 + 68] = 0
                            mem[_3834 + 100] = address(_3602)
                            mem[_3834 + 132] = 128
                            mem[_3834 + 164] = mem[_3834]
                            t = 0
                            while t < mem[_3834]:
                                mem[t + _3834 + 196] = mem[t + _3834 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3834] % 32:
                                require ext_code.size(address(_3383))
                                call address(_3383).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3602), 128, mem[_3834 + 164 len mem[_3834] + 32]
                            else:
                                mem[floor32(mem[_3834]) + _3834 + 196] = mem[floor32(mem[_3834]) + _3834 + -(mem[_3834] % 32) + 228 len mem[_3834] % 32]
                                require ext_code.size(address(_3383))
                                call address(_3383).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3602), 128, mem[_3834], mem[_3834 + 196 len floor32(mem[_3834]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3600 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3833 = mem[(32 * idx + 1) + 128]
                        _4043 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4043 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4043 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_4043 + 68] = 0
                        mem[_4043 + 100] = address(_3833)
                        mem[_4043 + 132] = 128
                        mem[_4043 + 164] = mem[_4043]
                        t = 0
                        while t < mem[_4043]:
                            mem[t + _4043 + 196] = mem[t + _4043 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4043] % 32:
                            require ext_code.size(address(_3600))
                            call address(_3600).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3833), 128, mem[_4043 + 164 len mem[_4043] + 32]
                        else:
                            mem[floor32(mem[_4043]) + _4043 + 196] = mem[floor32(mem[_4043]) + _4043 + -(mem[_4043] % 32) + 228 len mem[_4043] % 32]
                            require ext_code.size(address(_3600))
                            call address(_3600).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3833), 128, mem[_4043], mem[_4043 + 196 len floor32(mem[_4043]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4043]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3826 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4035 = mem[(32 * idx + 1) + 128]
                            _4250 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4250 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4250 + 36] = 0
                            mem[_4250 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4250 + 100] = address(_4035)
                            mem[_4250 + 132] = 128
                            mem[_4250 + 164] = mem[_4250]
                            t = 0
                            while t < mem[_4250]:
                                mem[t + _4250 + 196] = mem[t + _4250 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4250] % 32:
                                require ext_code.size(address(_3826))
                                call address(_3826).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4035), 128, mem[_4250 + 164 len mem[_4250] + 32]
                            else:
                                mem[floor32(mem[_4250]) + _4250 + 196] = mem[floor32(mem[_4250]) + _4250 + -(mem[_4250] % 32) + 228 len mem[_4250] % 32]
                                require ext_code.size(address(_3826))
                                call address(_3826).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4035), 128, mem[_4250], mem[_4250 + 196 len floor32(mem[_4250]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4033 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4249 = mem[(32 * idx + 1) + 128]
                            _4457 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4457 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4457 + 36] = 0
                            mem[_4457 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4457 + 100] = address(_4249)
                            mem[_4457 + 132] = 128
                            mem[_4457 + 164] = mem[_4457]
                            t = 0
                            while t < mem[_4457]:
                                mem[t + _4457 + 196] = mem[t + _4457 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4457] % 32:
                                require ext_code.size(address(_4033))
                                call address(_4033).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4249), 128, mem[_4457 + 164 len mem[_4457] + 32]
                            else:
                                mem[floor32(mem[_4457]) + _4457 + 196] = mem[floor32(mem[_4457]) + _4457 + -(mem[_4457] % 32) + 228 len mem[_4457] % 32]
                                require ext_code.size(address(_4033))
                                call address(_4033).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4249), 128, mem[_4457], mem[_4457 + 196 len floor32(mem[_4457]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3829 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4038 = mem[(32 * idx + 1) + 128]
                            _4252 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4252 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4252 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4252 + 68] = 0
                            mem[_4252 + 100] = address(_4038)
                            mem[_4252 + 132] = 128
                            mem[_4252 + 164] = mem[_4252]
                            t = 0
                            while t < mem[_4252]:
                                mem[t + _4252 + 196] = mem[t + _4252 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4252] % 32:
                                require ext_code.size(address(_3829))
                                call address(_3829).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4038), 128, mem[_4252 + 164 len mem[_4252] + 32]
                            else:
                                mem[floor32(mem[_4252]) + _4252 + 196] = mem[floor32(mem[_4252]) + _4252 + -(mem[_4252] % 32) + 228 len mem[_4252] % 32]
                                require ext_code.size(address(_3829))
                                call address(_3829).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4038), 128, mem[_4252], mem[_4252 + 196 len floor32(mem[_4252]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4036 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4251 = mem[(32 * idx + 1) + 128]
                            _4461 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4461 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4461 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4461 + 68] = 0
                            mem[_4461 + 100] = address(_4251)
                            mem[_4461 + 132] = 128
                            mem[_4461 + 164] = mem[_4461]
                            t = 0
                            while t < mem[_4461]:
                                mem[t + _4461 + 196] = mem[t + _4461 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4461] % 32:
                                require ext_code.size(address(_4036))
                                call address(_4036).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4251), 128, mem[_4461 + 164 len mem[_4461] + 32]
                            else:
                                mem[floor32(mem[_4461]) + _4461 + 196] = mem[floor32(mem[_4461]) + _4461 + -(mem[_4461] % 32) + 228 len mem[_4461] % 32]
                                require ext_code.size(address(_4036))
                                call address(_4036).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4251), 128, mem[_4461], mem[_4461 + 196 len floor32(mem[_4461]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3076 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3241 = mem[(32 * idx + 1) + 128]
                            _3418 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3418 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3418 + 36] = 0
                            mem[_3418 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3418 + 100] = address(_3241)
                            mem[_3418 + 132] = 128
                            mem[_3418 + 164] = mem[_3418]
                            s = 0
                            while s < mem[_3418]:
                                mem[s + _3418 + 196] = mem[s + _3418 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3418] % 32:
                                require ext_code.size(address(_3076))
                                call address(_3076).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3241), 128, mem[_3418 + 164 len mem[_3418] + 32]
                            else:
                                mem[floor32(mem[_3418]) + _3418 + 196] = mem[floor32(mem[_3418]) + _3418 + -(mem[_3418] % 32) + 228 len mem[_3418] % 32]
                                require ext_code.size(address(_3076))
                                call address(_3076).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3241), 128, mem[_3418], mem[_3418 + 196 len floor32(mem[_3418]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3239 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3417 = mem[(32 * idx + 1) + 128]
                            _3649 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3649 + 36] = 0
                            mem[_3649 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3649 + 100] = address(_3417)
                            mem[_3649 + 132] = 128
                            mem[_3649 + 164] = mem[_3649]
                            s = 0
                            while s < mem[_3649]:
                                mem[s + _3649 + 196] = mem[s + _3649 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3649] % 32:
                                require ext_code.size(address(_3239))
                                call address(_3239).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3417), 128, mem[_3649 + 164 len mem[_3649] + 32]
                            else:
                                mem[floor32(mem[_3649]) + _3649 + 196] = mem[floor32(mem[_3649]) + _3649 + -(mem[_3649] % 32) + 228 len mem[_3649] % 32]
                                require ext_code.size(address(_3239))
                                call address(_3239).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3417), 128, mem[_3649], mem[_3649 + 196 len floor32(mem[_3649]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3079 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3244 = mem[(32 * idx + 1) + 128]
                            _3420 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3420 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3420 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3420 + 68] = 0
                            mem[_3420 + 100] = address(_3244)
                            mem[_3420 + 132] = 128
                            mem[_3420 + 164] = mem[_3420]
                            s = 0
                            while s < mem[_3420]:
                                mem[s + _3420 + 196] = mem[s + _3420 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3420] % 32:
                                require ext_code.size(address(_3079))
                                call address(_3079).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3244), 128, mem[_3420 + 164 len mem[_3420] + 32]
                            else:
                                mem[floor32(mem[_3420]) + _3420 + 196] = mem[floor32(mem[_3420]) + _3420 + -(mem[_3420] % 32) + 228 len mem[_3420] % 32]
                                require ext_code.size(address(_3079))
                                call address(_3079).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3244), 128, mem[_3420], mem[_3420 + 196 len floor32(mem[_3420]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3242 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3419 = mem[(32 * idx + 1) + 128]
                            _3653 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3653 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3653 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3653 + 68] = 0
                            mem[_3653 + 100] = address(_3419)
                            mem[_3653 + 132] = 128
                            mem[_3653 + 164] = mem[_3653]
                            s = 0
                            while s < mem[_3653]:
                                mem[s + _3653 + 196] = mem[s + _3653 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3653] % 32:
                                require ext_code.size(address(_3242))
                                call address(_3242).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3419), 128, mem[_3653 + 164 len mem[_3653] + 32]
                            else:
                                mem[floor32(mem[_3653]) + _3653 + 196] = mem[floor32(mem[_3653]) + _3653 + -(mem[_3653] % 32) + 228 len mem[_3653] % 32]
                                require ext_code.size(address(_3242))
                                call address(_3242).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3419), 128, mem[_3653], mem[_3653 + 196 len floor32(mem[_3653]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3070 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3235 = mem[(32 * idx + 1) + 128]
                                _3414 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3414 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3414 + 36] = 0
                                mem[_3414 + 68] = 0 / 997 * s
                                mem[_3414 + 100] = address(_3235)
                                mem[_3414 + 132] = 128
                                mem[_3414 + 164] = mem[_3414]
                                t = 0
                                while t < mem[_3414]:
                                    mem[t + _3414 + 196] = mem[t + _3414 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3414] % 32:
                                    require ext_code.size(address(_3070))
                                    call address(_3070).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3235), 128, mem[_3414 + 164 len mem[_3414] + 32]
                                else:
                                    mem[floor32(mem[_3414]) + _3414 + 196] = mem[floor32(mem[_3414]) + _3414 + -(mem[_3414] % 32) + 228 len mem[_3414] % 32]
                                    require ext_code.size(address(_3070))
                                    call address(_3070).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3235), 128, mem[_3414], mem[_3414 + 196 len floor32(mem[_3414]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3233 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3413 = mem[(32 * idx + 1) + 128]
                                _3641 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3641 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3641 + 36] = 0
                                mem[_3641 + 68] = 0 / 997 * s
                                mem[_3641 + 100] = address(_3413)
                                mem[_3641 + 132] = 128
                                mem[_3641 + 164] = mem[_3641]
                                t = 0
                                while t < mem[_3641]:
                                    mem[t + _3641 + 196] = mem[t + _3641 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3641] % 32:
                                    require ext_code.size(address(_3233))
                                    call address(_3233).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3413), 128, mem[_3641 + 164 len mem[_3641] + 32]
                                else:
                                    mem[floor32(mem[_3641]) + _3641 + 196] = mem[floor32(mem[_3641]) + _3641 + -(mem[_3641] % 32) + 228 len mem[_3641] % 32]
                                    require ext_code.size(address(_3233))
                                    call address(_3233).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3413), 128, mem[_3641], mem[_3641 + 196 len floor32(mem[_3641]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3073 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3238 = mem[(32 * idx + 1) + 128]
                                _3416 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3416 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3416 + 36] = 0 / 997 * s
                                mem[_3416 + 68] = 0
                                mem[_3416 + 100] = address(_3238)
                                mem[_3416 + 132] = 128
                                mem[_3416 + 164] = mem[_3416]
                                t = 0
                                while t < mem[_3416]:
                                    mem[t + _3416 + 196] = mem[t + _3416 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3416] % 32:
                                    require ext_code.size(address(_3073))
                                    call address(_3073).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3238), 128, mem[_3416 + 164 len mem[_3416] + 32]
                                else:
                                    mem[floor32(mem[_3416]) + _3416 + 196] = mem[floor32(mem[_3416]) + _3416 + -(mem[_3416] % 32) + 228 len mem[_3416] % 32]
                                    require ext_code.size(address(_3073))
                                    call address(_3073).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3238), 128, mem[_3416], mem[_3416 + 196 len floor32(mem[_3416]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3236 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3415 = mem[(32 * idx + 1) + 128]
                                _3645 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3645 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3645 + 36] = 0 / 997 * s
                                mem[_3645 + 68] = 0
                                mem[_3645 + 100] = address(_3415)
                                mem[_3645 + 132] = 128
                                mem[_3645 + 164] = mem[_3645]
                                t = 0
                                while t < mem[_3645]:
                                    mem[t + _3645 + 196] = mem[t + _3645 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3645] % 32:
                                    require ext_code.size(address(_3236))
                                    call address(_3236).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3415), 128, mem[_3645 + 164 len mem[_3645] + 32]
                                else:
                                    mem[floor32(mem[_3645]) + _3645 + 196] = mem[floor32(mem[_3645]) + _3645 + -(mem[_3645] % 32) + 228 len mem[_3645] % 32]
                                    require ext_code.size(address(_3236))
                                    call address(_3236).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3415), 128, mem[_3645], mem[_3645 + 196 len floor32(mem[_3645]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3408 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3637 = mem[(32 * idx + 1) + 128]
                            _3862 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3862 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3862 + 36] = 0
                            mem[_3862 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3862 + 100] = address(_3637)
                            mem[_3862 + 132] = 128
                            mem[_3862 + 164] = mem[_3862]
                            t = 0
                            while t < mem[_3862]:
                                mem[t + _3862 + 196] = mem[t + _3862 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3862] % 32:
                                require ext_code.size(address(_3408))
                                call address(_3408).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3637), 128, mem[_3862 + 164 len mem[_3862] + 32]
                            else:
                                mem[floor32(mem[_3862]) + _3862 + 196] = mem[floor32(mem[_3862]) + _3862 + -(mem[_3862] % 32) + 228 len mem[_3862] % 32]
                                require ext_code.size(address(_3408))
                                call address(_3408).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3637), 128, mem[_3862], mem[_3862 + 196 len floor32(mem[_3862]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3635 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3861 = mem[(32 * idx + 1) + 128]
                        _4073 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4073 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4073 + 36] = 0
                        mem[_4073 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4073 + 100] = address(_3861)
                        mem[_4073 + 132] = 128
                        mem[_4073 + 164] = mem[_4073]
                        t = 0
                        while t < mem[_4073]:
                            mem[t + _4073 + 196] = mem[t + _4073 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4073] % 32:
                            require ext_code.size(address(_3635))
                            call address(_3635).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3861), 128, mem[_4073 + 164 len mem[_4073] + 32]
                        else:
                            mem[floor32(mem[_4073]) + _4073 + 196] = mem[floor32(mem[_4073]) + _4073 + -(mem[_4073] % 32) + 228 len mem[_4073] % 32]
                            require ext_code.size(address(_3635))
                            call address(_3635).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3861), 128, mem[_4073], mem[_4073 + 196 len floor32(mem[_4073]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4073]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3411 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3640 = mem[(32 * idx + 1) + 128]
                        _3864 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3864 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3864 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3864 + 68] = 0
                        mem[_3864 + 100] = address(_3640)
                        mem[_3864 + 132] = 128
                        mem[_3864 + 164] = mem[_3864]
                        t = 0
                        while t < mem[_3864]:
                            mem[t + _3864 + 196] = mem[t + _3864 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3864] % 32:
                            require ext_code.size(address(_3411))
                            call address(_3411).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3640), 128, mem[_3864 + 164 len mem[_3864] + 32]
                        else:
                            mem[floor32(mem[_3864]) + _3864 + 196] = mem[floor32(mem[_3864]) + _3864 + -(mem[_3864] % 32) + 228 len mem[_3864] % 32]
                            require ext_code.size(address(_3411))
                            call address(_3411).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3640), 128, mem[_3864], mem[_3864 + 196 len floor32(mem[_3864]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3638 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3863 = mem[(32 * idx + 1) + 128]
                    _4077 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4077 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4077 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4077 + 68] = 0
                    mem[_4077 + 100] = address(_3863)
                    mem[_4077 + 132] = 128
                    mem[_4077 + 164] = mem[_4077]
                    t = 0
                    while t < mem[_4077]:
                        mem[t + _4077 + 196] = mem[t + _4077 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4077] % 32:
                        require ext_code.size(address(_3638))
                        call address(_3638).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3863), 128, mem[_4077 + 164 len mem[_4077] + 32]
                    else:
                        mem[floor32(mem[_4077]) + _4077 + 196] = mem[floor32(mem[_4077]) + _4077 + -(mem[_4077] % 32) + 228 len mem[_4077] % 32]
                        require ext_code.size(address(_3638))
                        call address(_3638).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3863), 128, mem[_4077], mem[_4077 + 196 len floor32(mem[_4077]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4077]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3402 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3631 = mem[(32 * idx + 1) + 128]
                            _3858 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3858 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3858 + 36] = 0
                            mem[_3858 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3858 + 100] = address(_3631)
                            mem[_3858 + 132] = 128
                            mem[_3858 + 164] = mem[_3858]
                            t = 0
                            while t < mem[_3858]:
                                mem[t + _3858 + 196] = mem[t + _3858 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3858] % 32:
                                require ext_code.size(address(_3402))
                                call address(_3402).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3631), 128, mem[_3858 + 164 len mem[_3858] + 32]
                            else:
                                mem[floor32(mem[_3858]) + _3858 + 196] = mem[floor32(mem[_3858]) + _3858 + -(mem[_3858] % 32) + 228 len mem[_3858] % 32]
                                require ext_code.size(address(_3402))
                                call address(_3402).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3631), 128, mem[_3858], mem[_3858 + 196 len floor32(mem[_3858]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3629 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3857 = mem[(32 * idx + 1) + 128]
                        _4065 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4065 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4065 + 36] = 0
                        mem[_4065 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4065 + 100] = address(_3857)
                        mem[_4065 + 132] = 128
                        mem[_4065 + 164] = mem[_4065]
                        t = 0
                        while t < mem[_4065]:
                            mem[t + _4065 + 196] = mem[t + _4065 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4065] % 32:
                            require ext_code.size(address(_3629))
                            call address(_3629).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3857), 128, mem[_4065 + 164 len mem[_4065] + 32]
                        else:
                            mem[floor32(mem[_4065]) + _4065 + 196] = mem[floor32(mem[_4065]) + _4065 + -(mem[_4065] % 32) + 228 len mem[_4065] % 32]
                            require ext_code.size(address(_3629))
                            call address(_3629).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3857), 128, mem[_4065], mem[_4065 + 196 len floor32(mem[_4065]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4065]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3405 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3634 = mem[(32 * idx + 1) + 128]
                        _3860 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3860 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3860 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3860 + 68] = 0
                        mem[_3860 + 100] = address(_3634)
                        mem[_3860 + 132] = 128
                        mem[_3860 + 164] = mem[_3860]
                        t = 0
                        while t < mem[_3860]:
                            mem[t + _3860 + 196] = mem[t + _3860 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3860] % 32:
                            require ext_code.size(address(_3405))
                            call address(_3405).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3634), 128, mem[_3860 + 164 len mem[_3860] + 32]
                        else:
                            mem[floor32(mem[_3860]) + _3860 + 196] = mem[floor32(mem[_3860]) + _3860 + -(mem[_3860] % 32) + 228 len mem[_3860] % 32]
                            require ext_code.size(address(_3405))
                            call address(_3405).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3634), 128, mem[_3860], mem[_3860 + 196 len floor32(mem[_3860]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3632 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3859 = mem[(32 * idx + 1) + 128]
                    _4069 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4069 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4069 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4069 + 68] = 0
                    mem[_4069 + 100] = address(_3859)
                    mem[_4069 + 132] = 128
                    mem[_4069 + 164] = mem[_4069]
                    t = 0
                    while t < mem[_4069]:
                        mem[t + _4069 + 196] = mem[t + _4069 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4069] % 32:
                        require ext_code.size(address(_3632))
                        call address(_3632).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3859), 128, mem[_4069 + 164 len mem[_4069] + 32]
                    else:
                        mem[floor32(mem[_4069]) + _4069 + 196] = mem[floor32(mem[_4069]) + _4069 + -(mem[_4069] % 32) + 228 len mem[_4069] % 32]
                        require ext_code.size(address(_3632))
                        call address(_3632).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3859), 128, mem[_4069], mem[_4069 + 196 len floor32(mem[_4069]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4069]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3852 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4061 = mem[(32 * idx + 1) + 128]
                        _4278 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4278 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4278 + 36] = 0
                        mem[_4278 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4278 + 100] = address(_4061)
                        mem[_4278 + 132] = 128
                        mem[_4278 + 164] = mem[_4278]
                        t = 0
                        while t < mem[_4278]:
                            mem[t + _4278 + 196] = mem[t + _4278 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4278] % 32:
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4061), 128, mem[_4278 + 164 len mem[_4278] + 32]
                        else:
                            mem[floor32(mem[_4278]) + _4278 + 196] = mem[floor32(mem[_4278]) + _4278 + -(mem[_4278] % 32) + 228 len mem[_4278] % 32]
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4061), 128, mem[_4278], mem[_4278 + 196 len floor32(mem[_4278]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4059 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4277 = mem[(32 * idx + 1) + 128]
                        _4481 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4481 + 36] = 0
                        mem[_4481 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4481 + 100] = address(_4277)
                        mem[_4481 + 132] = 128
                        mem[_4481 + 164] = mem[_4481]
                        t = 0
                        while t < mem[_4481]:
                            mem[t + _4481 + 196] = mem[t + _4481 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4481] % 32:
                            require ext_code.size(address(_4059))
                            call address(_4059).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4277), 128, mem[_4481 + 164 len mem[_4481] + 32]
                        else:
                            mem[floor32(mem[_4481]) + _4481 + 196] = mem[floor32(mem[_4481]) + _4481 + -(mem[_4481] % 32) + 228 len mem[_4481] % 32]
                            require ext_code.size(address(_4059))
                            call address(_4059).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4277), 128, mem[_4481], mem[_4481 + 196 len floor32(mem[_4481]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3855 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4064 = mem[(32 * idx + 1) + 128]
                        _4280 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4280 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4280 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4280 + 68] = 0
                        mem[_4280 + 100] = address(_4064)
                        mem[_4280 + 132] = 128
                        mem[_4280 + 164] = mem[_4280]
                        t = 0
                        while t < mem[_4280]:
                            mem[t + _4280 + 196] = mem[t + _4280 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4280] % 32:
                            require ext_code.size(address(_3855))
                            call address(_3855).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4064), 128, mem[_4280 + 164 len mem[_4280] + 32]
                        else:
                            mem[floor32(mem[_4280]) + _4280 + 196] = mem[floor32(mem[_4280]) + _4280 + -(mem[_4280] % 32) + 228 len mem[_4280] % 32]
                            require ext_code.size(address(_3855))
                            call address(_3855).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4064), 128, mem[_4280], mem[_4280 + 196 len floor32(mem[_4280]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4062 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4279 = mem[(32 * idx + 1) + 128]
                        _4485 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4485 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4485 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4485 + 68] = 0
                        mem[_4485 + 100] = address(_4279)
                        mem[_4485 + 132] = 128
                        mem[_4485 + 164] = mem[_4485]
                        t = 0
                        while t < mem[_4485]:
                            mem[t + _4485 + 196] = mem[t + _4485 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4485] % 32:
                            require ext_code.size(address(_4062))
                            call address(_4062).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4279), 128, mem[_4485 + 164 len mem[_4485] + 32]
                        else:
                            mem[floor32(mem[_4485]) + _4485 + 196] = mem[floor32(mem[_4485]) + _4485 + -(mem[_4485] % 32) + 228 len mem[_4485] % 32]
                            require ext_code.size(address(_4062))
                            call address(_4062).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4279), 128, mem[_4485], mem[_4485 + 196 len floor32(mem[_4485]) + 32]
            else:
                if address(_2529) == address(_2525):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3092 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3263 = mem[(32 * idx + 1) + 128]
                                _3440 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3440 + 36] = 0
                                mem[_3440 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3440 + 100] = address(_3263)
                                mem[_3440 + 132] = 128
                                mem[_3440 + 164] = mem[_3440]
                                s = 0
                                while s < mem[_3440]:
                                    mem[s + _3440 + 196] = mem[s + _3440 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3440] % 32:
                                    require ext_code.size(address(_3092))
                                    call address(_3092).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3263), 128, mem[_3440 + 164 len mem[_3440] + 32]
                                else:
                                    mem[floor32(mem[_3440]) + _3440 + 196] = mem[floor32(mem[_3440]) + _3440 + -(mem[_3440] % 32) + 228 len mem[_3440] % 32]
                                    require ext_code.size(address(_3092))
                                    call address(_3092).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3263), 128, mem[_3440], mem[_3440 + 196 len floor32(mem[_3440]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3261 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3439 = mem[(32 * idx + 1) + 128]
                                _3681 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3681 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3681 + 36] = 0
                                mem[_3681 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3681 + 100] = address(_3439)
                                mem[_3681 + 132] = 128
                                mem[_3681 + 164] = mem[_3681]
                                s = 0
                                while s < mem[_3681]:
                                    mem[s + _3681 + 196] = mem[s + _3681 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3681] % 32:
                                    require ext_code.size(address(_3261))
                                    call address(_3261).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3439), 128, mem[_3681 + 164 len mem[_3681] + 32]
                                else:
                                    mem[floor32(mem[_3681]) + _3681 + 196] = mem[floor32(mem[_3681]) + _3681 + -(mem[_3681] % 32) + 228 len mem[_3681] % 32]
                                    require ext_code.size(address(_3261))
                                    call address(_3261).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3439), 128, mem[_3681], mem[_3681 + 196 len floor32(mem[_3681]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3095 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3266 = mem[(32 * idx + 1) + 128]
                                _3442 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3442 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3442 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3442 + 68] = 0
                                mem[_3442 + 100] = address(_3266)
                                mem[_3442 + 132] = 128
                                mem[_3442 + 164] = mem[_3442]
                                s = 0
                                while s < mem[_3442]:
                                    mem[s + _3442 + 196] = mem[s + _3442 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3442] % 32:
                                    require ext_code.size(address(_3095))
                                    call address(_3095).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3266), 128, mem[_3442 + 164 len mem[_3442] + 32]
                                else:
                                    mem[floor32(mem[_3442]) + _3442 + 196] = mem[floor32(mem[_3442]) + _3442 + -(mem[_3442] % 32) + 228 len mem[_3442] % 32]
                                    require ext_code.size(address(_3095))
                                    call address(_3095).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3266), 128, mem[_3442], mem[_3442 + 196 len floor32(mem[_3442]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3264 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3441 = mem[(32 * idx + 1) + 128]
                                _3685 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3685 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3685 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3685 + 68] = 0
                                mem[_3685 + 100] = address(_3441)
                                mem[_3685 + 132] = 128
                                mem[_3685 + 164] = mem[_3685]
                                s = 0
                                while s < mem[_3685]:
                                    mem[s + _3685 + 196] = mem[s + _3685 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3685] % 32:
                                    require ext_code.size(address(_3264))
                                    call address(_3264).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3441), 128, mem[_3685 + 164 len mem[_3685] + 32]
                                else:
                                    mem[floor32(mem[_3685]) + _3685 + 196] = mem[floor32(mem[_3685]) + _3685 + -(mem[_3685] % 32) + 228 len mem[_3685] % 32]
                                    require ext_code.size(address(_3264))
                                    call address(_3264).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3441), 128, mem[_3685], mem[_3685 + 196 len floor32(mem[_3685]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3086 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3257 = mem[(32 * idx + 1) + 128]
                                    _3436 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3436 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3436 + 36] = 0
                                    mem[_3436 + 68] = 0 / 997 * s
                                    mem[_3436 + 100] = address(_3257)
                                    mem[_3436 + 132] = 128
                                    mem[_3436 + 164] = mem[_3436]
                                    t = 0
                                    while t < mem[_3436]:
                                        mem[t + _3436 + 196] = mem[t + _3436 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3436] % 32:
                                        require ext_code.size(address(_3086))
                                        call address(_3086).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3257), 128, mem[_3436 + 164 len mem[_3436] + 32]
                                    else:
                                        mem[floor32(mem[_3436]) + _3436 + 196] = mem[floor32(mem[_3436]) + _3436 + -(mem[_3436] % 32) + 228 len mem[_3436] % 32]
                                        require ext_code.size(address(_3086))
                                        call address(_3086).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3257), 128, mem[_3436], mem[_3436 + 196 len floor32(mem[_3436]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3255 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3435 = mem[(32 * idx + 1) + 128]
                                    _3673 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3673 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3673 + 36] = 0
                                    mem[_3673 + 68] = 0 / 997 * s
                                    mem[_3673 + 100] = address(_3435)
                                    mem[_3673 + 132] = 128
                                    mem[_3673 + 164] = mem[_3673]
                                    t = 0
                                    while t < mem[_3673]:
                                        mem[t + _3673 + 196] = mem[t + _3673 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3673] % 32:
                                        require ext_code.size(address(_3255))
                                        call address(_3255).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3435), 128, mem[_3673 + 164 len mem[_3673] + 32]
                                    else:
                                        mem[floor32(mem[_3673]) + _3673 + 196] = mem[floor32(mem[_3673]) + _3673 + -(mem[_3673] % 32) + 228 len mem[_3673] % 32]
                                        require ext_code.size(address(_3255))
                                        call address(_3255).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3435), 128, mem[_3673], mem[_3673 + 196 len floor32(mem[_3673]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3089 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3260 = mem[(32 * idx + 1) + 128]
                                    _3438 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3438 + 36] = 0 / 997 * s
                                    mem[_3438 + 68] = 0
                                    mem[_3438 + 100] = address(_3260)
                                    mem[_3438 + 132] = 128
                                    mem[_3438 + 164] = mem[_3438]
                                    t = 0
                                    while t < mem[_3438]:
                                        mem[t + _3438 + 196] = mem[t + _3438 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3438] % 32:
                                        require ext_code.size(address(_3089))
                                        call address(_3089).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3260), 128, mem[_3438 + 164 len mem[_3438] + 32]
                                    else:
                                        mem[floor32(mem[_3438]) + _3438 + 196] = mem[floor32(mem[_3438]) + _3438 + -(mem[_3438] % 32) + 228 len mem[_3438] % 32]
                                        require ext_code.size(address(_3089))
                                        call address(_3089).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3260), 128, mem[_3438], mem[_3438 + 196 len floor32(mem[_3438]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3258 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3437 = mem[(32 * idx + 1) + 128]
                                    _3677 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3677 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3677 + 36] = 0 / 997 * s
                                    mem[_3677 + 68] = 0
                                    mem[_3677 + 100] = address(_3437)
                                    mem[_3677 + 132] = 128
                                    mem[_3677 + 164] = mem[_3677]
                                    t = 0
                                    while t < mem[_3677]:
                                        mem[t + _3677 + 196] = mem[t + _3677 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3677] % 32:
                                        require ext_code.size(address(_3258))
                                        call address(_3258).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3437), 128, mem[_3677 + 164 len mem[_3677] + 32]
                                    else:
                                        mem[floor32(mem[_3677]) + _3677 + 196] = mem[floor32(mem[_3677]) + _3677 + -(mem[_3677] % 32) + 228 len mem[_3677] % 32]
                                        require ext_code.size(address(_3258))
                                        call address(_3258).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3437), 128, mem[_3677], mem[_3677 + 196 len floor32(mem[_3677]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3430 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3669 = mem[(32 * idx + 1) + 128]
                                _3888 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3888 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3888 + 36] = 0
                                mem[_3888 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3888 + 100] = address(_3669)
                                mem[_3888 + 132] = 128
                                mem[_3888 + 164] = mem[_3888]
                                t = 0
                                while t < mem[_3888]:
                                    mem[t + _3888 + 196] = mem[t + _3888 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3888] % 32:
                                    require ext_code.size(address(_3430))
                                    call address(_3430).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3669), 128, mem[_3888 + 164 len mem[_3888] + 32]
                                else:
                                    mem[floor32(mem[_3888]) + _3888 + 196] = mem[floor32(mem[_3888]) + _3888 + -(mem[_3888] % 32) + 228 len mem[_3888] % 32]
                                    require ext_code.size(address(_3430))
                                    call address(_3430).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3669), 128, mem[_3888], mem[_3888 + 196 len floor32(mem[_3888]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3667 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3887 = mem[(32 * idx + 1) + 128]
                            _4099 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4099 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4099 + 36] = 0
                            mem[_4099 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4099 + 100] = address(_3887)
                            mem[_4099 + 132] = 128
                            mem[_4099 + 164] = mem[_4099]
                            t = 0
                            while t < mem[_4099]:
                                mem[t + _4099 + 196] = mem[t + _4099 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4099] % 32:
                                require ext_code.size(address(_3667))
                                call address(_3667).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3887), 128, mem[_4099 + 164 len mem[_4099] + 32]
                            else:
                                mem[floor32(mem[_4099]) + _4099 + 196] = mem[floor32(mem[_4099]) + _4099 + -(mem[_4099] % 32) + 228 len mem[_4099] % 32]
                                require ext_code.size(address(_3667))
                                call address(_3667).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3887), 128, mem[_4099], mem[_4099 + 196 len floor32(mem[_4099]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4099]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3433 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3672 = mem[(32 * idx + 1) + 128]
                            _3890 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3890 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3890 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3890 + 68] = 0
                            mem[_3890 + 100] = address(_3672)
                            mem[_3890 + 132] = 128
                            mem[_3890 + 164] = mem[_3890]
                            t = 0
                            while t < mem[_3890]:
                                mem[t + _3890 + 196] = mem[t + _3890 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3890] % 32:
                                require ext_code.size(address(_3433))
                                call address(_3433).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3672), 128, mem[_3890 + 164 len mem[_3890] + 32]
                            else:
                                mem[floor32(mem[_3890]) + _3890 + 196] = mem[floor32(mem[_3890]) + _3890 + -(mem[_3890] % 32) + 228 len mem[_3890] % 32]
                                require ext_code.size(address(_3433))
                                call address(_3433).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3672), 128, mem[_3890], mem[_3890 + 196 len floor32(mem[_3890]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3670 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3889 = mem[(32 * idx + 1) + 128]
                        _4103 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4103 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4103 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_4103 + 68] = 0
                        mem[_4103 + 100] = address(_3889)
                        mem[_4103 + 132] = 128
                        mem[_4103 + 164] = mem[_4103]
                        t = 0
                        while t < mem[_4103]:
                            mem[t + _4103 + 196] = mem[t + _4103 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4103] % 32:
                            require ext_code.size(address(_3670))
                            call address(_3670).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3889), 128, mem[_4103 + 164 len mem[_4103] + 32]
                        else:
                            mem[floor32(mem[_4103]) + _4103 + 196] = mem[floor32(mem[_4103]) + _4103 + -(mem[_4103] % 32) + 228 len mem[_4103] % 32]
                            require ext_code.size(address(_3670))
                            call address(_3670).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3889), 128, mem[_4103], mem[_4103 + 196 len floor32(mem[_4103]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4103]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3424 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3663 = mem[(32 * idx + 1) + 128]
                                _3884 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3884 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3884 + 36] = 0
                                mem[_3884 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3884 + 100] = address(_3663)
                                mem[_3884 + 132] = 128
                                mem[_3884 + 164] = mem[_3884]
                                t = 0
                                while t < mem[_3884]:
                                    mem[t + _3884 + 196] = mem[t + _3884 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3884] % 32:
                                    require ext_code.size(address(_3424))
                                    call address(_3424).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3663), 128, mem[_3884 + 164 len mem[_3884] + 32]
                                else:
                                    mem[floor32(mem[_3884]) + _3884 + 196] = mem[floor32(mem[_3884]) + _3884 + -(mem[_3884] % 32) + 228 len mem[_3884] % 32]
                                    require ext_code.size(address(_3424))
                                    call address(_3424).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3663), 128, mem[_3884], mem[_3884 + 196 len floor32(mem[_3884]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3661 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3883 = mem[(32 * idx + 1) + 128]
                            _4091 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4091 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4091 + 36] = 0
                            mem[_4091 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_4091 + 100] = address(_3883)
                            mem[_4091 + 132] = 128
                            mem[_4091 + 164] = mem[_4091]
                            t = 0
                            while t < mem[_4091]:
                                mem[t + _4091 + 196] = mem[t + _4091 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4091] % 32:
                                require ext_code.size(address(_3661))
                                call address(_3661).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3883), 128, mem[_4091 + 164 len mem[_4091] + 32]
                            else:
                                mem[floor32(mem[_4091]) + _4091 + 196] = mem[floor32(mem[_4091]) + _4091 + -(mem[_4091] % 32) + 228 len mem[_4091] % 32]
                                require ext_code.size(address(_3661))
                                call address(_3661).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3883), 128, mem[_4091], mem[_4091 + 196 len floor32(mem[_4091]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4091]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3427 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3666 = mem[(32 * idx + 1) + 128]
                            _3886 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3886 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3886 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3886 + 68] = 0
                            mem[_3886 + 100] = address(_3666)
                            mem[_3886 + 132] = 128
                            mem[_3886 + 164] = mem[_3886]
                            t = 0
                            while t < mem[_3886]:
                                mem[t + _3886 + 196] = mem[t + _3886 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3886] % 32:
                                require ext_code.size(address(_3427))
                                call address(_3427).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3666), 128, mem[_3886 + 164 len mem[_3886] + 32]
                            else:
                                mem[floor32(mem[_3886]) + _3886 + 196] = mem[floor32(mem[_3886]) + _3886 + -(mem[_3886] % 32) + 228 len mem[_3886] % 32]
                                require ext_code.size(address(_3427))
                                call address(_3427).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3666), 128, mem[_3886], mem[_3886 + 196 len floor32(mem[_3886]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3664 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3885 = mem[(32 * idx + 1) + 128]
                        _4095 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4095 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4095 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_4095 + 68] = 0
                        mem[_4095 + 100] = address(_3885)
                        mem[_4095 + 132] = 128
                        mem[_4095 + 164] = mem[_4095]
                        t = 0
                        while t < mem[_4095]:
                            mem[t + _4095 + 196] = mem[t + _4095 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4095] % 32:
                            require ext_code.size(address(_3664))
                            call address(_3664).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3885), 128, mem[_4095 + 164 len mem[_4095] + 32]
                        else:
                            mem[floor32(mem[_4095]) + _4095 + 196] = mem[floor32(mem[_4095]) + _4095 + -(mem[_4095] % 32) + 228 len mem[_4095] % 32]
                            require ext_code.size(address(_3664))
                            call address(_3664).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3885), 128, mem[_4095], mem[_4095 + 196 len floor32(mem[_4095]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4095]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3878 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4087 = mem[(32 * idx + 1) + 128]
                            _4306 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4306 + 36] = 0
                            mem[_4306 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4306 + 100] = address(_4087)
                            mem[_4306 + 132] = 128
                            mem[_4306 + 164] = mem[_4306]
                            t = 0
                            while t < mem[_4306]:
                                mem[t + _4306 + 196] = mem[t + _4306 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4306] % 32:
                                require ext_code.size(address(_3878))
                                call address(_3878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4087), 128, mem[_4306 + 164 len mem[_4306] + 32]
                            else:
                                mem[floor32(mem[_4306]) + _4306 + 196] = mem[floor32(mem[_4306]) + _4306 + -(mem[_4306] % 32) + 228 len mem[_4306] % 32]
                                require ext_code.size(address(_3878))
                                call address(_3878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4087), 128, mem[_4306], mem[_4306 + 196 len floor32(mem[_4306]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4085 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4305 = mem[(32 * idx + 1) + 128]
                            _4505 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4505 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4505 + 36] = 0
                            mem[_4505 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4505 + 100] = address(_4305)
                            mem[_4505 + 132] = 128
                            mem[_4505 + 164] = mem[_4505]
                            t = 0
                            while t < mem[_4505]:
                                mem[t + _4505 + 196] = mem[t + _4505 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4505] % 32:
                                require ext_code.size(address(_4085))
                                call address(_4085).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4305), 128, mem[_4505 + 164 len mem[_4505] + 32]
                            else:
                                mem[floor32(mem[_4505]) + _4505 + 196] = mem[floor32(mem[_4505]) + _4505 + -(mem[_4505] % 32) + 228 len mem[_4505] % 32]
                                require ext_code.size(address(_4085))
                                call address(_4085).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4305), 128, mem[_4505], mem[_4505 + 196 len floor32(mem[_4505]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3881 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4090 = mem[(32 * idx + 1) + 128]
                            _4308 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4308 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4308 + 68] = 0
                            mem[_4308 + 100] = address(_4090)
                            mem[_4308 + 132] = 128
                            mem[_4308 + 164] = mem[_4308]
                            t = 0
                            while t < mem[_4308]:
                                mem[t + _4308 + 196] = mem[t + _4308 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4308] % 32:
                                require ext_code.size(address(_3881))
                                call address(_3881).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4090), 128, mem[_4308 + 164 len mem[_4308] + 32]
                            else:
                                mem[floor32(mem[_4308]) + _4308 + 196] = mem[floor32(mem[_4308]) + _4308 + -(mem[_4308] % 32) + 228 len mem[_4308] % 32]
                                require ext_code.size(address(_3881))
                                call address(_3881).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4090), 128, mem[_4308], mem[_4308 + 196 len floor32(mem[_4308]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4088 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4307 = mem[(32 * idx + 1) + 128]
                            _4509 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4509 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4509 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4509 + 68] = 0
                            mem[_4509 + 100] = address(_4307)
                            mem[_4509 + 132] = 128
                            mem[_4509 + 164] = mem[_4509]
                            t = 0
                            while t < mem[_4509]:
                                mem[t + _4509 + 196] = mem[t + _4509 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4509] % 32:
                                require ext_code.size(address(_4088))
                                call address(_4088).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4307), 128, mem[_4509 + 164 len mem[_4509] + 32]
                            else:
                                mem[floor32(mem[_4509]) + _4509 + 196] = mem[floor32(mem[_4509]) + _4509 + -(mem[_4509] % 32) + 228 len mem[_4509] % 32]
                                require ext_code.size(address(_4088))
                                call address(_4088).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4307), 128, mem[_4509], mem[_4509 + 196 len floor32(mem[_4509]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3108 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3285 = mem[(32 * idx + 1) + 128]
                            _3462 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3462 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3462 + 36] = 0
                            mem[_3462 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3462 + 100] = address(_3285)
                            mem[_3462 + 132] = 128
                            mem[_3462 + 164] = mem[_3462]
                            s = 0
                            while s < mem[_3462]:
                                mem[s + _3462 + 196] = mem[s + _3462 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3462] % 32:
                                require ext_code.size(address(_3108))
                                call address(_3108).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3285), 128, mem[_3462 + 164 len mem[_3462] + 32]
                            else:
                                mem[floor32(mem[_3462]) + _3462 + 196] = mem[floor32(mem[_3462]) + _3462 + -(mem[_3462] % 32) + 228 len mem[_3462] % 32]
                                require ext_code.size(address(_3108))
                                call address(_3108).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3285), 128, mem[_3462], mem[_3462 + 196 len floor32(mem[_3462]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3283 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3461 = mem[(32 * idx + 1) + 128]
                            _3713 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3713 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3713 + 36] = 0
                            mem[_3713 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3713 + 100] = address(_3461)
                            mem[_3713 + 132] = 128
                            mem[_3713 + 164] = mem[_3713]
                            s = 0
                            while s < mem[_3713]:
                                mem[s + _3713 + 196] = mem[s + _3713 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3713] % 32:
                                require ext_code.size(address(_3283))
                                call address(_3283).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3461), 128, mem[_3713 + 164 len mem[_3713] + 32]
                            else:
                                mem[floor32(mem[_3713]) + _3713 + 196] = mem[floor32(mem[_3713]) + _3713 + -(mem[_3713] % 32) + 228 len mem[_3713] % 32]
                                require ext_code.size(address(_3283))
                                call address(_3283).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3461), 128, mem[_3713], mem[_3713 + 196 len floor32(mem[_3713]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3111 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3288 = mem[(32 * idx + 1) + 128]
                            _3464 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3464 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3464 + 68] = 0
                            mem[_3464 + 100] = address(_3288)
                            mem[_3464 + 132] = 128
                            mem[_3464 + 164] = mem[_3464]
                            s = 0
                            while s < mem[_3464]:
                                mem[s + _3464 + 196] = mem[s + _3464 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3464] % 32:
                                require ext_code.size(address(_3111))
                                call address(_3111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3288), 128, mem[_3464 + 164 len mem[_3464] + 32]
                            else:
                                mem[floor32(mem[_3464]) + _3464 + 196] = mem[floor32(mem[_3464]) + _3464 + -(mem[_3464] % 32) + 228 len mem[_3464] % 32]
                                require ext_code.size(address(_3111))
                                call address(_3111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3288), 128, mem[_3464], mem[_3464 + 196 len floor32(mem[_3464]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3286 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3463 = mem[(32 * idx + 1) + 128]
                            _3717 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3717 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3717 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3717 + 68] = 0
                            mem[_3717 + 100] = address(_3463)
                            mem[_3717 + 132] = 128
                            mem[_3717 + 164] = mem[_3717]
                            s = 0
                            while s < mem[_3717]:
                                mem[s + _3717 + 196] = mem[s + _3717 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3717] % 32:
                                require ext_code.size(address(_3286))
                                call address(_3286).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3463), 128, mem[_3717 + 164 len mem[_3717] + 32]
                            else:
                                mem[floor32(mem[_3717]) + _3717 + 196] = mem[floor32(mem[_3717]) + _3717 + -(mem[_3717] % 32) + 228 len mem[_3717] % 32]
                                require ext_code.size(address(_3286))
                                call address(_3286).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3463), 128, mem[_3717], mem[_3717 + 196 len floor32(mem[_3717]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3102 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3279 = mem[(32 * idx + 1) + 128]
                                _3458 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3458 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3458 + 36] = 0
                                mem[_3458 + 68] = 0 / 997 * s
                                mem[_3458 + 100] = address(_3279)
                                mem[_3458 + 132] = 128
                                mem[_3458 + 164] = mem[_3458]
                                t = 0
                                while t < mem[_3458]:
                                    mem[t + _3458 + 196] = mem[t + _3458 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3458] % 32:
                                    require ext_code.size(address(_3102))
                                    call address(_3102).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3279), 128, mem[_3458 + 164 len mem[_3458] + 32]
                                else:
                                    mem[floor32(mem[_3458]) + _3458 + 196] = mem[floor32(mem[_3458]) + _3458 + -(mem[_3458] % 32) + 228 len mem[_3458] % 32]
                                    require ext_code.size(address(_3102))
                                    call address(_3102).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3279), 128, mem[_3458], mem[_3458 + 196 len floor32(mem[_3458]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3277 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3457 = mem[(32 * idx + 1) + 128]
                                _3705 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3705 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3705 + 36] = 0
                                mem[_3705 + 68] = 0 / 997 * s
                                mem[_3705 + 100] = address(_3457)
                                mem[_3705 + 132] = 128
                                mem[_3705 + 164] = mem[_3705]
                                t = 0
                                while t < mem[_3705]:
                                    mem[t + _3705 + 196] = mem[t + _3705 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3705] % 32:
                                    require ext_code.size(address(_3277))
                                    call address(_3277).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3457), 128, mem[_3705 + 164 len mem[_3705] + 32]
                                else:
                                    mem[floor32(mem[_3705]) + _3705 + 196] = mem[floor32(mem[_3705]) + _3705 + -(mem[_3705] % 32) + 228 len mem[_3705] % 32]
                                    require ext_code.size(address(_3277))
                                    call address(_3277).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3457), 128, mem[_3705], mem[_3705 + 196 len floor32(mem[_3705]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3105 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3282 = mem[(32 * idx + 1) + 128]
                                _3460 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3460 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3460 + 36] = 0 / 997 * s
                                mem[_3460 + 68] = 0
                                mem[_3460 + 100] = address(_3282)
                                mem[_3460 + 132] = 128
                                mem[_3460 + 164] = mem[_3460]
                                t = 0
                                while t < mem[_3460]:
                                    mem[t + _3460 + 196] = mem[t + _3460 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3460] % 32:
                                    require ext_code.size(address(_3105))
                                    call address(_3105).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3282), 128, mem[_3460 + 164 len mem[_3460] + 32]
                                else:
                                    mem[floor32(mem[_3460]) + _3460 + 196] = mem[floor32(mem[_3460]) + _3460 + -(mem[_3460] % 32) + 228 len mem[_3460] % 32]
                                    require ext_code.size(address(_3105))
                                    call address(_3105).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3282), 128, mem[_3460], mem[_3460 + 196 len floor32(mem[_3460]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3280 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3459 = mem[(32 * idx + 1) + 128]
                                _3709 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3709 + 36] = 0 / 997 * s
                                mem[_3709 + 68] = 0
                                mem[_3709 + 100] = address(_3459)
                                mem[_3709 + 132] = 128
                                mem[_3709 + 164] = mem[_3709]
                                t = 0
                                while t < mem[_3709]:
                                    mem[t + _3709 + 196] = mem[t + _3709 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3709] % 32:
                                    require ext_code.size(address(_3280))
                                    call address(_3280).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3459), 128, mem[_3709 + 164 len mem[_3709] + 32]
                                else:
                                    mem[floor32(mem[_3709]) + _3709 + 196] = mem[floor32(mem[_3709]) + _3709 + -(mem[_3709] % 32) + 228 len mem[_3709] % 32]
                                    require ext_code.size(address(_3280))
                                    call address(_3280).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3459), 128, mem[_3709], mem[_3709 + 196 len floor32(mem[_3709]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3452 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3701 = mem[(32 * idx + 1) + 128]
                            _3914 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3914 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3914 + 36] = 0
                            mem[_3914 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3914 + 100] = address(_3701)
                            mem[_3914 + 132] = 128
                            mem[_3914 + 164] = mem[_3914]
                            t = 0
                            while t < mem[_3914]:
                                mem[t + _3914 + 196] = mem[t + _3914 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3914] % 32:
                                require ext_code.size(address(_3452))
                                call address(_3452).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3701), 128, mem[_3914 + 164 len mem[_3914] + 32]
                            else:
                                mem[floor32(mem[_3914]) + _3914 + 196] = mem[floor32(mem[_3914]) + _3914 + -(mem[_3914] % 32) + 228 len mem[_3914] % 32]
                                require ext_code.size(address(_3452))
                                call address(_3452).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3701), 128, mem[_3914], mem[_3914 + 196 len floor32(mem[_3914]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3699 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3913 = mem[(32 * idx + 1) + 128]
                        _4125 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4125 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4125 + 36] = 0
                        mem[_4125 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4125 + 100] = address(_3913)
                        mem[_4125 + 132] = 128
                        mem[_4125 + 164] = mem[_4125]
                        t = 0
                        while t < mem[_4125]:
                            mem[t + _4125 + 196] = mem[t + _4125 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4125] % 32:
                            require ext_code.size(address(_3699))
                            call address(_3699).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3913), 128, mem[_4125 + 164 len mem[_4125] + 32]
                        else:
                            mem[floor32(mem[_4125]) + _4125 + 196] = mem[floor32(mem[_4125]) + _4125 + -(mem[_4125] % 32) + 228 len mem[_4125] % 32]
                            require ext_code.size(address(_3699))
                            call address(_3699).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3913), 128, mem[_4125], mem[_4125 + 196 len floor32(mem[_4125]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4125]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3455 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3704 = mem[(32 * idx + 1) + 128]
                        _3916 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3916 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3916 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3916 + 68] = 0
                        mem[_3916 + 100] = address(_3704)
                        mem[_3916 + 132] = 128
                        mem[_3916 + 164] = mem[_3916]
                        t = 0
                        while t < mem[_3916]:
                            mem[t + _3916 + 196] = mem[t + _3916 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3916] % 32:
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3704), 128, mem[_3916 + 164 len mem[_3916] + 32]
                        else:
                            mem[floor32(mem[_3916]) + _3916 + 196] = mem[floor32(mem[_3916]) + _3916 + -(mem[_3916] % 32) + 228 len mem[_3916] % 32]
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3704), 128, mem[_3916], mem[_3916 + 196 len floor32(mem[_3916]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3702 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3915 = mem[(32 * idx + 1) + 128]
                    _4129 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4129 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4129 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4129 + 68] = 0
                    mem[_4129 + 100] = address(_3915)
                    mem[_4129 + 132] = 128
                    mem[_4129 + 164] = mem[_4129]
                    t = 0
                    while t < mem[_4129]:
                        mem[t + _4129 + 196] = mem[t + _4129 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4129] % 32:
                        require ext_code.size(address(_3702))
                        call address(_3702).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3915), 128, mem[_4129 + 164 len mem[_4129] + 32]
                    else:
                        mem[floor32(mem[_4129]) + _4129 + 196] = mem[floor32(mem[_4129]) + _4129 + -(mem[_4129] % 32) + 228 len mem[_4129] % 32]
                        require ext_code.size(address(_3702))
                        call address(_3702).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3915), 128, mem[_4129], mem[_4129 + 196 len floor32(mem[_4129]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4129]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3446 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3695 = mem[(32 * idx + 1) + 128]
                            _3910 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3910 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3910 + 36] = 0
                            mem[_3910 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3910 + 100] = address(_3695)
                            mem[_3910 + 132] = 128
                            mem[_3910 + 164] = mem[_3910]
                            t = 0
                            while t < mem[_3910]:
                                mem[t + _3910 + 196] = mem[t + _3910 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3910] % 32:
                                require ext_code.size(address(_3446))
                                call address(_3446).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3695), 128, mem[_3910 + 164 len mem[_3910] + 32]
                            else:
                                mem[floor32(mem[_3910]) + _3910 + 196] = mem[floor32(mem[_3910]) + _3910 + -(mem[_3910] % 32) + 228 len mem[_3910] % 32]
                                require ext_code.size(address(_3446))
                                call address(_3446).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3695), 128, mem[_3910], mem[_3910 + 196 len floor32(mem[_3910]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3693 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3909 = mem[(32 * idx + 1) + 128]
                        _4117 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4117 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4117 + 36] = 0
                        mem[_4117 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4117 + 100] = address(_3909)
                        mem[_4117 + 132] = 128
                        mem[_4117 + 164] = mem[_4117]
                        t = 0
                        while t < mem[_4117]:
                            mem[t + _4117 + 196] = mem[t + _4117 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4117] % 32:
                            require ext_code.size(address(_3693))
                            call address(_3693).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3909), 128, mem[_4117 + 164 len mem[_4117] + 32]
                        else:
                            mem[floor32(mem[_4117]) + _4117 + 196] = mem[floor32(mem[_4117]) + _4117 + -(mem[_4117] % 32) + 228 len mem[_4117] % 32]
                            require ext_code.size(address(_3693))
                            call address(_3693).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3909), 128, mem[_4117], mem[_4117 + 196 len floor32(mem[_4117]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4117]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3449 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3698 = mem[(32 * idx + 1) + 128]
                        _3912 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3912 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3912 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3912 + 68] = 0
                        mem[_3912 + 100] = address(_3698)
                        mem[_3912 + 132] = 128
                        mem[_3912 + 164] = mem[_3912]
                        t = 0
                        while t < mem[_3912]:
                            mem[t + _3912 + 196] = mem[t + _3912 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3912] % 32:
                            require ext_code.size(address(_3449))
                            call address(_3449).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3698), 128, mem[_3912 + 164 len mem[_3912] + 32]
                        else:
                            mem[floor32(mem[_3912]) + _3912 + 196] = mem[floor32(mem[_3912]) + _3912 + -(mem[_3912] % 32) + 228 len mem[_3912] % 32]
                            require ext_code.size(address(_3449))
                            call address(_3449).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3698), 128, mem[_3912], mem[_3912 + 196 len floor32(mem[_3912]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3696 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3911 = mem[(32 * idx + 1) + 128]
                    _4121 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4121 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4121 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4121 + 68] = 0
                    mem[_4121 + 100] = address(_3911)
                    mem[_4121 + 132] = 128
                    mem[_4121 + 164] = mem[_4121]
                    t = 0
                    while t < mem[_4121]:
                        mem[t + _4121 + 196] = mem[t + _4121 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4121] % 32:
                        require ext_code.size(address(_3696))
                        call address(_3696).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3911), 128, mem[_4121 + 164 len mem[_4121] + 32]
                    else:
                        mem[floor32(mem[_4121]) + _4121 + 196] = mem[floor32(mem[_4121]) + _4121 + -(mem[_4121] % 32) + 228 len mem[_4121] % 32]
                        require ext_code.size(address(_3696))
                        call address(_3696).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3911), 128, mem[_4121], mem[_4121 + 196 len floor32(mem[_4121]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4121]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3904 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4113 = mem[(32 * idx + 1) + 128]
                        _4334 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4334 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4334 + 36] = 0
                        mem[_4334 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4334 + 100] = address(_4113)
                        mem[_4334 + 132] = 128
                        mem[_4334 + 164] = mem[_4334]
                        t = 0
                        while t < mem[_4334]:
                            mem[t + _4334 + 196] = mem[t + _4334 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4334] % 32:
                            require ext_code.size(address(_3904))
                            call address(_3904).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4113), 128, mem[_4334 + 164 len mem[_4334] + 32]
                        else:
                            mem[floor32(mem[_4334]) + _4334 + 196] = mem[floor32(mem[_4334]) + _4334 + -(mem[_4334] % 32) + 228 len mem[_4334] % 32]
                            require ext_code.size(address(_3904))
                            call address(_3904).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4113), 128, mem[_4334], mem[_4334 + 196 len floor32(mem[_4334]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4111 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4333 = mem[(32 * idx + 1) + 128]
                        _4529 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4529 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4529 + 36] = 0
                        mem[_4529 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4529 + 100] = address(_4333)
                        mem[_4529 + 132] = 128
                        mem[_4529 + 164] = mem[_4529]
                        t = 0
                        while t < mem[_4529]:
                            mem[t + _4529 + 196] = mem[t + _4529 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4529] % 32:
                            require ext_code.size(address(_4111))
                            call address(_4111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4333), 128, mem[_4529 + 164 len mem[_4529] + 32]
                        else:
                            mem[floor32(mem[_4529]) + _4529 + 196] = mem[floor32(mem[_4529]) + _4529 + -(mem[_4529] % 32) + 228 len mem[_4529] % 32]
                            require ext_code.size(address(_4111))
                            call address(_4111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4333), 128, mem[_4529], mem[_4529 + 196 len floor32(mem[_4529]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3907 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4116 = mem[(32 * idx + 1) + 128]
                        _4336 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4336 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4336 + 68] = 0
                        mem[_4336 + 100] = address(_4116)
                        mem[_4336 + 132] = 128
                        mem[_4336 + 164] = mem[_4336]
                        t = 0
                        while t < mem[_4336]:
                            mem[t + _4336 + 196] = mem[t + _4336 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4336] % 32:
                            require ext_code.size(address(_3907))
                            call address(_3907).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4116), 128, mem[_4336 + 164 len mem[_4336] + 32]
                        else:
                            mem[floor32(mem[_4336]) + _4336 + 196] = mem[floor32(mem[_4336]) + _4336 + -(mem[_4336] % 32) + 228 len mem[_4336] % 32]
                            require ext_code.size(address(_3907))
                            call address(_3907).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4116), 128, mem[_4336], mem[_4336 + 196 len floor32(mem[_4336]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4114 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4335 = mem[(32 * idx + 1) + 128]
                        _4533 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4533 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4533 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4533 + 68] = 0
                        mem[_4533 + 100] = address(_4335)
                        mem[_4533 + 132] = 128
                        mem[_4533 + 164] = mem[_4533]
                        t = 0
                        while t < mem[_4533]:
                            mem[t + _4533 + 196] = mem[t + _4533 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4533] % 32:
                            require ext_code.size(address(_4114))
                            call address(_4114).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4335), 128, mem[_4533 + 164 len mem[_4533] + 32]
                        else:
                            mem[floor32(mem[_4533]) + _4533 + 196] = mem[floor32(mem[_4533]) + _4533 + -(mem[_4533] % 32) + 228 len mem[_4533] % 32]
                            require ext_code.size(address(_4114))
                            call address(_4114).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4335), 128, mem[_4533], mem[_4533 + 196 len floor32(mem[_4533]) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
        continue 
    require 0 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
    _2508 = mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
    mem[mem[64] + 4] = this.address
    require ext_code.size(address(_2508))
    staticcall address(_2508).0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
    require ext_code.size(mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20])
    call mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20].0xa9059cbb with:
         gas gas_remaining wei
        args 0xac8569140dd1681fe072990f40ed6f1e68d2552a, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 32, 33, 0x315472616e7366657248656c7065723a205452414e534645525f4641494c45445f, mem[mem[64] + 101 len 31]
}

function pangolinCall(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, '!sender'
    require arg4.length >= 96
    require cd[(arg4 + 36)] <= 4294967296
    require cd[(arg4 + 36)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 36)] + 36)] <= 4294967296 and cd[(arg4 + 36)] + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 68 <= arg4.length + 36
    mem[96] = cd[(arg4 + cd[(arg4 + 36)] + 36)]
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]] = call.data[arg4 + cd[(arg4 + 36)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]]
    require cd[(arg4 + 68)] <= 4294967296
    require cd[(arg4 + 68)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 68)] + 36)] <= 4294967296 and cd[(arg4 + 68)] + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 68 <= arg4.length + 36
    mem[64] = (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128] = cd[(arg4 + cd[(arg4 + 68)] + 36)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160 len 32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]] = call.data[arg4 + cd[(arg4 + 68)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160] = 0
    require cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1 < cd[(arg4 + cd[(arg4 + 36)] + 36)]
    if mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1) + 140 len 20] != msg.sender:
        revert with 0, '!pair'
    require 0 < cd[(arg4 + cd[(arg4 + 68)] + 36)]
    _10 = mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
    require 0 < cd[(arg4 + cd[(arg4 + 36)] + 36)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 164] = mem[140 len 20]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 196] = cd[(arg4 + 100)]
    require ext_code.size(address(_10))
    call address(_10).0xa9059cbb with:
         gas gas_remaining wei
        args mem[140 len 20], cd[(arg4 + 100)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 
                    32,
                    33,
                    0x775472616e7366657248656c7065723a205452414e534645525f4641494c45445f,
                    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 261 len 31]
    idx = 0
    s = cd[(arg4 + 100)]
    while idx < cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1:
        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        _2504 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
        require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        _2507 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
        require idx < mem[96]
        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
            _2523 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
            _2528 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
                if address(_2523) == address(_2523):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _2996 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3131 = mem[(32 * idx + 1) + 128]
                                _3308 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3308 + 36] = 0
                                mem[_3308 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3308 + 100] = address(_3131)
                                mem[_3308 + 132] = 128
                                mem[_3308 + 164] = mem[_3308]
                                s = 0
                                while s < mem[_3308]:
                                    mem[s + _3308 + 196] = mem[s + _3308 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3308] % 32:
                                    require ext_code.size(address(_2996))
                                    call address(_2996).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3131), 128, mem[_3308 + 164 len mem[_3308] + 32]
                                else:
                                    mem[floor32(mem[_3308]) + _3308 + 196] = mem[floor32(mem[_3308]) + _3308 + -(mem[_3308] % 32) + 228 len mem[_3308] % 32]
                                    require ext_code.size(address(_2996))
                                    call address(_2996).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3131), 128, mem[_3308], mem[_3308 + 196 len floor32(mem[_3308]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3129 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3307 = mem[(32 * idx + 1) + 128]
                                _3489 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3489 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3489 + 36] = 0
                                mem[_3489 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3489 + 100] = address(_3307)
                                mem[_3489 + 132] = 128
                                mem[_3489 + 164] = mem[_3489]
                                s = 0
                                while s < mem[_3489]:
                                    mem[s + _3489 + 196] = mem[s + _3489 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3489] % 32:
                                    require ext_code.size(address(_3129))
                                    call address(_3129).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3307), 128, mem[_3489 + 164 len mem[_3489] + 32]
                                else:
                                    mem[floor32(mem[_3489]) + _3489 + 196] = mem[floor32(mem[_3489]) + _3489 + -(mem[_3489] % 32) + 228 len mem[_3489] % 32]
                                    require ext_code.size(address(_3129))
                                    call address(_3129).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3307), 128, mem[_3489], mem[_3489 + 196 len floor32(mem[_3489]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _2999 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3134 = mem[(32 * idx + 1) + 128]
                                _3310 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3310 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3310 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3310 + 68] = 0
                                mem[_3310 + 100] = address(_3134)
                                mem[_3310 + 132] = 128
                                mem[_3310 + 164] = mem[_3310]
                                s = 0
                                while s < mem[_3310]:
                                    mem[s + _3310 + 196] = mem[s + _3310 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3310] % 32:
                                    require ext_code.size(address(_2999))
                                    call address(_2999).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3134), 128, mem[_3310 + 164 len mem[_3310] + 32]
                                else:
                                    mem[floor32(mem[_3310]) + _3310 + 196] = mem[floor32(mem[_3310]) + _3310 + -(mem[_3310] % 32) + 228 len mem[_3310] % 32]
                                    require ext_code.size(address(_2999))
                                    call address(_2999).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3134), 128, mem[_3310], mem[_3310 + 196 len floor32(mem[_3310]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3132 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3309 = mem[(32 * idx + 1) + 128]
                                _3493 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3493 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3493 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3493 + 68] = 0
                                mem[_3493 + 100] = address(_3309)
                                mem[_3493 + 132] = 128
                                mem[_3493 + 164] = mem[_3493]
                                s = 0
                                while s < mem[_3493]:
                                    mem[s + _3493 + 196] = mem[s + _3493 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3493] % 32:
                                    require ext_code.size(address(_3132))
                                    call address(_3132).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3309), 128, mem[_3493 + 164 len mem[_3493] + 32]
                                else:
                                    mem[floor32(mem[_3493]) + _3493 + 196] = mem[floor32(mem[_3493]) + _3493 + -(mem[_3493] % 32) + 228 len mem[_3493] % 32]
                                    require ext_code.size(address(_3132))
                                    call address(_3132).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3309), 128, mem[_3493], mem[_3493 + 196 len floor32(mem[_3493]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _2990 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3125 = mem[(32 * idx + 1) + 128]
                                    _3304 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3304 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3304 + 36] = 0
                                    mem[_3304 + 68] = 0 / 997 * s
                                    mem[_3304 + 100] = address(_3125)
                                    mem[_3304 + 132] = 128
                                    mem[_3304 + 164] = mem[_3304]
                                    t = 0
                                    while t < mem[_3304]:
                                        mem[t + _3304 + 196] = mem[t + _3304 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3304] % 32:
                                        require ext_code.size(address(_2990))
                                        call address(_2990).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3125), 128, mem[_3304 + 164 len mem[_3304] + 32]
                                    else:
                                        mem[floor32(mem[_3304]) + _3304 + 196] = mem[floor32(mem[_3304]) + _3304 + -(mem[_3304] % 32) + 228 len mem[_3304] % 32]
                                        require ext_code.size(address(_2990))
                                        call address(_2990).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3125), 128, mem[_3304], mem[_3304 + 196 len floor32(mem[_3304]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3123 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3303 = mem[(32 * idx + 1) + 128]
                                    _3481 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3481 + 36] = 0
                                    mem[_3481 + 68] = 0 / 997 * s
                                    mem[_3481 + 100] = address(_3303)
                                    mem[_3481 + 132] = 128
                                    mem[_3481 + 164] = mem[_3481]
                                    t = 0
                                    while t < mem[_3481]:
                                        mem[t + _3481 + 196] = mem[t + _3481 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3481] % 32:
                                        require ext_code.size(address(_3123))
                                        call address(_3123).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3303), 128, mem[_3481 + 164 len mem[_3481] + 32]
                                    else:
                                        mem[floor32(mem[_3481]) + _3481 + 196] = mem[floor32(mem[_3481]) + _3481 + -(mem[_3481] % 32) + 228 len mem[_3481] % 32]
                                        require ext_code.size(address(_3123))
                                        call address(_3123).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3303), 128, mem[_3481], mem[_3481 + 196 len floor32(mem[_3481]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _2993 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3128 = mem[(32 * idx + 1) + 128]
                                    _3306 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3306 + 36] = 0 / 997 * s
                                    mem[_3306 + 68] = 0
                                    mem[_3306 + 100] = address(_3128)
                                    mem[_3306 + 132] = 128
                                    mem[_3306 + 164] = mem[_3306]
                                    t = 0
                                    while t < mem[_3306]:
                                        mem[t + _3306 + 196] = mem[t + _3306 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3306] % 32:
                                        require ext_code.size(address(_2993))
                                        call address(_2993).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3128), 128, mem[_3306 + 164 len mem[_3306] + 32]
                                    else:
                                        mem[floor32(mem[_3306]) + _3306 + 196] = mem[floor32(mem[_3306]) + _3306 + -(mem[_3306] % 32) + 228 len mem[_3306] % 32]
                                        require ext_code.size(address(_2993))
                                        call address(_2993).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3128), 128, mem[_3306], mem[_3306 + 196 len floor32(mem[_3306]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3126 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3305 = mem[(32 * idx + 1) + 128]
                                    _3485 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3485 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3485 + 36] = 0 / 997 * s
                                    mem[_3485 + 68] = 0
                                    mem[_3485 + 100] = address(_3305)
                                    mem[_3485 + 132] = 128
                                    mem[_3485 + 164] = mem[_3485]
                                    t = 0
                                    while t < mem[_3485]:
                                        mem[t + _3485 + 196] = mem[t + _3485 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3485] % 32:
                                        require ext_code.size(address(_3126))
                                        call address(_3126).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3305), 128, mem[_3485 + 164 len mem[_3485] + 32]
                                    else:
                                        mem[floor32(mem[_3485]) + _3485 + 196] = mem[floor32(mem[_3485]) + _3485 + -(mem[_3485] % 32) + 228 len mem[_3485] % 32]
                                        require ext_code.size(address(_3126))
                                        call address(_3126).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3305), 128, mem[_3485], mem[_3485 + 196 len floor32(mem[_3485]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3298 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3477 = mem[(32 * idx + 1) + 128]
                                _3732 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3732 + 36] = 0
                                mem[_3732 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3732 + 100] = address(_3477)
                                mem[_3732 + 132] = 128
                                mem[_3732 + 164] = mem[_3732]
                                t = 0
                                while t < mem[_3732]:
                                    mem[t + _3732 + 196] = mem[t + _3732 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3732] % 32:
                                    require ext_code.size(address(_3298))
                                    call address(_3298).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3477), 128, mem[_3732 + 164 len mem[_3732] + 32]
                                else:
                                    mem[floor32(mem[_3732]) + _3732 + 196] = mem[floor32(mem[_3732]) + _3732 + -(mem[_3732] % 32) + 228 len mem[_3732] % 32]
                                    require ext_code.size(address(_3298))
                                    call address(_3298).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3477), 128, mem[_3732], mem[_3732 + 196 len floor32(mem[_3732]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3475 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3731 = mem[(32 * idx + 1) + 128]
                            _3943 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3943 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3943 + 36] = 0
                            mem[_3943 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3943 + 100] = address(_3731)
                            mem[_3943 + 132] = 128
                            mem[_3943 + 164] = mem[_3943]
                            t = 0
                            while t < mem[_3943]:
                                mem[t + _3943 + 196] = mem[t + _3943 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3943] % 32:
                                require ext_code.size(address(_3475))
                                call address(_3475).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3731), 128, mem[_3943 + 164 len mem[_3943] + 32]
                            else:
                                mem[floor32(mem[_3943]) + _3943 + 196] = mem[floor32(mem[_3943]) + _3943 + -(mem[_3943] % 32) + 228 len mem[_3943] % 32]
                                require ext_code.size(address(_3475))
                                call address(_3475).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3731), 128, mem[_3943], mem[_3943 + 196 len floor32(mem[_3943]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3943]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3301 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3480 = mem[(32 * idx + 1) + 128]
                            _3734 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3734 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3734 + 68] = 0
                            mem[_3734 + 100] = address(_3480)
                            mem[_3734 + 132] = 128
                            mem[_3734 + 164] = mem[_3734]
                            t = 0
                            while t < mem[_3734]:
                                mem[t + _3734 + 196] = mem[t + _3734 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3734] % 32:
                                require ext_code.size(address(_3301))
                                call address(_3301).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3480), 128, mem[_3734 + 164 len mem[_3734] + 32]
                            else:
                                mem[floor32(mem[_3734]) + _3734 + 196] = mem[floor32(mem[_3734]) + _3734 + -(mem[_3734] % 32) + 228 len mem[_3734] % 32]
                                require ext_code.size(address(_3301))
                                call address(_3301).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3480), 128, mem[_3734], mem[_3734 + 196 len floor32(mem[_3734]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3478 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3733 = mem[(32 * idx + 1) + 128]
                        _3947 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3947 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3947 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_3947 + 68] = 0
                        mem[_3947 + 100] = address(_3733)
                        mem[_3947 + 132] = 128
                        mem[_3947 + 164] = mem[_3947]
                        t = 0
                        while t < mem[_3947]:
                            mem[t + _3947 + 196] = mem[t + _3947 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3947] % 32:
                            require ext_code.size(address(_3478))
                            call address(_3478).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3733), 128, mem[_3947 + 164 len mem[_3947] + 32]
                        else:
                            mem[floor32(mem[_3947]) + _3947 + 196] = mem[floor32(mem[_3947]) + _3947 + -(mem[_3947] % 32) + 228 len mem[_3947] % 32]
                            require ext_code.size(address(_3478))
                            call address(_3478).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3733), 128, mem[_3947], mem[_3947 + 196 len floor32(mem[_3947]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3947]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3292 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3471 = mem[(32 * idx + 1) + 128]
                                _3728 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3728 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3728 + 36] = 0
                                mem[_3728 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3728 + 100] = address(_3471)
                                mem[_3728 + 132] = 128
                                mem[_3728 + 164] = mem[_3728]
                                t = 0
                                while t < mem[_3728]:
                                    mem[t + _3728 + 196] = mem[t + _3728 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3728] % 32:
                                    require ext_code.size(address(_3292))
                                    call address(_3292).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3471), 128, mem[_3728 + 164 len mem[_3728] + 32]
                                else:
                                    mem[floor32(mem[_3728]) + _3728 + 196] = mem[floor32(mem[_3728]) + _3728 + -(mem[_3728] % 32) + 228 len mem[_3728] % 32]
                                    require ext_code.size(address(_3292))
                                    call address(_3292).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3471), 128, mem[_3728], mem[_3728 + 196 len floor32(mem[_3728]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3469 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3727 = mem[(32 * idx + 1) + 128]
                            _3935 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3935 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3935 + 36] = 0
                            mem[_3935 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3935 + 100] = address(_3727)
                            mem[_3935 + 132] = 128
                            mem[_3935 + 164] = mem[_3935]
                            t = 0
                            while t < mem[_3935]:
                                mem[t + _3935 + 196] = mem[t + _3935 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3935] % 32:
                                require ext_code.size(address(_3469))
                                call address(_3469).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3727), 128, mem[_3935 + 164 len mem[_3935] + 32]
                            else:
                                mem[floor32(mem[_3935]) + _3935 + 196] = mem[floor32(mem[_3935]) + _3935 + -(mem[_3935] % 32) + 228 len mem[_3935] % 32]
                                require ext_code.size(address(_3469))
                                call address(_3469).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3727), 128, mem[_3935], mem[_3935 + 196 len floor32(mem[_3935]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3935]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3295 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3474 = mem[(32 * idx + 1) + 128]
                            _3730 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3730 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3730 + 68] = 0
                            mem[_3730 + 100] = address(_3474)
                            mem[_3730 + 132] = 128
                            mem[_3730 + 164] = mem[_3730]
                            t = 0
                            while t < mem[_3730]:
                                mem[t + _3730 + 196] = mem[t + _3730 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3730] % 32:
                                require ext_code.size(address(_3295))
                                call address(_3295).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3474), 128, mem[_3730 + 164 len mem[_3730] + 32]
                            else:
                                mem[floor32(mem[_3730]) + _3730 + 196] = mem[floor32(mem[_3730]) + _3730 + -(mem[_3730] % 32) + 228 len mem[_3730] % 32]
                                require ext_code.size(address(_3295))
                                call address(_3295).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3474), 128, mem[_3730], mem[_3730 + 196 len floor32(mem[_3730]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3472 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3729 = mem[(32 * idx + 1) + 128]
                        _3939 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3939 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3939 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_3939 + 68] = 0
                        mem[_3939 + 100] = address(_3729)
                        mem[_3939 + 132] = 128
                        mem[_3939 + 164] = mem[_3939]
                        t = 0
                        while t < mem[_3939]:
                            mem[t + _3939 + 196] = mem[t + _3939 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3939] % 32:
                            require ext_code.size(address(_3472))
                            call address(_3472).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3729), 128, mem[_3939 + 164 len mem[_3939] + 32]
                        else:
                            mem[floor32(mem[_3939]) + _3939 + 196] = mem[floor32(mem[_3939]) + _3939 + -(mem[_3939] % 32) + 228 len mem[_3939] % 32]
                            require ext_code.size(address(_3472))
                            call address(_3472).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3729), 128, mem[_3939], mem[_3939 + 196 len floor32(mem[_3939]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3939]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3722 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3931 = mem[(32 * idx + 1) + 128]
                            _4138 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4138 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4138 + 36] = 0
                            mem[_4138 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4138 + 100] = address(_3931)
                            mem[_4138 + 132] = 128
                            mem[_4138 + 164] = mem[_4138]
                            t = 0
                            while t < mem[_4138]:
                                mem[t + _4138 + 196] = mem[t + _4138 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4138] % 32:
                                require ext_code.size(address(_3722))
                                call address(_3722).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3931), 128, mem[_4138 + 164 len mem[_4138] + 32]
                            else:
                                mem[floor32(mem[_4138]) + _4138 + 196] = mem[floor32(mem[_4138]) + _4138 + -(mem[_4138] % 32) + 228 len mem[_4138] % 32]
                                require ext_code.size(address(_3722))
                                call address(_3722).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3931), 128, mem[_4138], mem[_4138 + 196 len floor32(mem[_4138]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3929 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4137 = mem[(32 * idx + 1) + 128]
                            _4361 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4361 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4361 + 36] = 0
                            mem[_4361 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4361 + 100] = address(_4137)
                            mem[_4361 + 132] = 128
                            mem[_4361 + 164] = mem[_4361]
                            t = 0
                            while t < mem[_4361]:
                                mem[t + _4361 + 196] = mem[t + _4361 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4361] % 32:
                                require ext_code.size(address(_3929))
                                call address(_3929).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4137), 128, mem[_4361 + 164 len mem[_4361] + 32]
                            else:
                                mem[floor32(mem[_4361]) + _4361 + 196] = mem[floor32(mem[_4361]) + _4361 + -(mem[_4361] % 32) + 228 len mem[_4361] % 32]
                                require ext_code.size(address(_3929))
                                call address(_3929).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4137), 128, mem[_4361], mem[_4361 + 196 len floor32(mem[_4361]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3725 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3934 = mem[(32 * idx + 1) + 128]
                            _4140 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4140 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4140 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4140 + 68] = 0
                            mem[_4140 + 100] = address(_3934)
                            mem[_4140 + 132] = 128
                            mem[_4140 + 164] = mem[_4140]
                            t = 0
                            while t < mem[_4140]:
                                mem[t + _4140 + 196] = mem[t + _4140 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4140] % 32:
                                require ext_code.size(address(_3725))
                                call address(_3725).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3934), 128, mem[_4140 + 164 len mem[_4140] + 32]
                            else:
                                mem[floor32(mem[_4140]) + _4140 + 196] = mem[floor32(mem[_4140]) + _4140 + -(mem[_4140] % 32) + 228 len mem[_4140] % 32]
                                require ext_code.size(address(_3725))
                                call address(_3725).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3934), 128, mem[_4140], mem[_4140 + 196 len floor32(mem[_4140]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3932 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4139 = mem[(32 * idx + 1) + 128]
                            _4365 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4365 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4365 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4365 + 68] = 0
                            mem[_4365 + 100] = address(_4139)
                            mem[_4365 + 132] = 128
                            mem[_4365 + 164] = mem[_4365]
                            t = 0
                            while t < mem[_4365]:
                                mem[t + _4365 + 196] = mem[t + _4365 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4365] % 32:
                                require ext_code.size(address(_3932))
                                call address(_3932).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4139), 128, mem[_4365 + 164 len mem[_4365] + 32]
                            else:
                                mem[floor32(mem[_4365]) + _4365 + 196] = mem[floor32(mem[_4365]) + _4365 + -(mem[_4365] % 32) + 228 len mem[_4365] % 32]
                                require ext_code.size(address(_3932))
                                call address(_3932).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4139), 128, mem[_4365], mem[_4365 + 196 len floor32(mem[_4365]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3012 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3153 = mem[(32 * idx + 1) + 128]
                            _3330 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3330 + 36] = 0
                            mem[_3330 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3330 + 100] = address(_3153)
                            mem[_3330 + 132] = 128
                            mem[_3330 + 164] = mem[_3330]
                            s = 0
                            while s < mem[_3330]:
                                mem[s + _3330 + 196] = mem[s + _3330 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3330] % 32:
                                require ext_code.size(address(_3012))
                                call address(_3012).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3153), 128, mem[_3330 + 164 len mem[_3330] + 32]
                            else:
                                mem[floor32(mem[_3330]) + _3330 + 196] = mem[floor32(mem[_3330]) + _3330 + -(mem[_3330] % 32) + 228 len mem[_3330] % 32]
                                require ext_code.size(address(_3012))
                                call address(_3012).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3153), 128, mem[_3330], mem[_3330 + 196 len floor32(mem[_3330]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3151 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3329 = mem[(32 * idx + 1) + 128]
                            _3521 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3521 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3521 + 36] = 0
                            mem[_3521 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3521 + 100] = address(_3329)
                            mem[_3521 + 132] = 128
                            mem[_3521 + 164] = mem[_3521]
                            s = 0
                            while s < mem[_3521]:
                                mem[s + _3521 + 196] = mem[s + _3521 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3521] % 32:
                                require ext_code.size(address(_3151))
                                call address(_3151).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3329), 128, mem[_3521 + 164 len mem[_3521] + 32]
                            else:
                                mem[floor32(mem[_3521]) + _3521 + 196] = mem[floor32(mem[_3521]) + _3521 + -(mem[_3521] % 32) + 228 len mem[_3521] % 32]
                                require ext_code.size(address(_3151))
                                call address(_3151).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3329), 128, mem[_3521], mem[_3521 + 196 len floor32(mem[_3521]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3015 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3156 = mem[(32 * idx + 1) + 128]
                            _3332 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3332 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3332 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3332 + 68] = 0
                            mem[_3332 + 100] = address(_3156)
                            mem[_3332 + 132] = 128
                            mem[_3332 + 164] = mem[_3332]
                            s = 0
                            while s < mem[_3332]:
                                mem[s + _3332 + 196] = mem[s + _3332 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3332] % 32:
                                require ext_code.size(address(_3015))
                                call address(_3015).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3156), 128, mem[_3332 + 164 len mem[_3332] + 32]
                            else:
                                mem[floor32(mem[_3332]) + _3332 + 196] = mem[floor32(mem[_3332]) + _3332 + -(mem[_3332] % 32) + 228 len mem[_3332] % 32]
                                require ext_code.size(address(_3015))
                                call address(_3015).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3156), 128, mem[_3332], mem[_3332 + 196 len floor32(mem[_3332]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3154 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3331 = mem[(32 * idx + 1) + 128]
                            _3525 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3525 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3525 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3525 + 68] = 0
                            mem[_3525 + 100] = address(_3331)
                            mem[_3525 + 132] = 128
                            mem[_3525 + 164] = mem[_3525]
                            s = 0
                            while s < mem[_3525]:
                                mem[s + _3525 + 196] = mem[s + _3525 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3525] % 32:
                                require ext_code.size(address(_3154))
                                call address(_3154).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3331), 128, mem[_3525 + 164 len mem[_3525] + 32]
                            else:
                                mem[floor32(mem[_3525]) + _3525 + 196] = mem[floor32(mem[_3525]) + _3525 + -(mem[_3525] % 32) + 228 len mem[_3525] % 32]
                                require ext_code.size(address(_3154))
                                call address(_3154).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3331), 128, mem[_3525], mem[_3525 + 196 len floor32(mem[_3525]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3006 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3147 = mem[(32 * idx + 1) + 128]
                                _3326 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3326 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3326 + 36] = 0
                                mem[_3326 + 68] = 0 / 997 * s
                                mem[_3326 + 100] = address(_3147)
                                mem[_3326 + 132] = 128
                                mem[_3326 + 164] = mem[_3326]
                                t = 0
                                while t < mem[_3326]:
                                    mem[t + _3326 + 196] = mem[t + _3326 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3326] % 32:
                                    require ext_code.size(address(_3006))
                                    call address(_3006).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3147), 128, mem[_3326 + 164 len mem[_3326] + 32]
                                else:
                                    mem[floor32(mem[_3326]) + _3326 + 196] = mem[floor32(mem[_3326]) + _3326 + -(mem[_3326] % 32) + 228 len mem[_3326] % 32]
                                    require ext_code.size(address(_3006))
                                    call address(_3006).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3147), 128, mem[_3326], mem[_3326 + 196 len floor32(mem[_3326]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3145 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3325 = mem[(32 * idx + 1) + 128]
                                _3513 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3513 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3513 + 36] = 0
                                mem[_3513 + 68] = 0 / 997 * s
                                mem[_3513 + 100] = address(_3325)
                                mem[_3513 + 132] = 128
                                mem[_3513 + 164] = mem[_3513]
                                t = 0
                                while t < mem[_3513]:
                                    mem[t + _3513 + 196] = mem[t + _3513 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3513] % 32:
                                    require ext_code.size(address(_3145))
                                    call address(_3145).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3325), 128, mem[_3513 + 164 len mem[_3513] + 32]
                                else:
                                    mem[floor32(mem[_3513]) + _3513 + 196] = mem[floor32(mem[_3513]) + _3513 + -(mem[_3513] % 32) + 228 len mem[_3513] % 32]
                                    require ext_code.size(address(_3145))
                                    call address(_3145).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3325), 128, mem[_3513], mem[_3513 + 196 len floor32(mem[_3513]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3009 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3150 = mem[(32 * idx + 1) + 128]
                                _3328 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3328 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3328 + 36] = 0 / 997 * s
                                mem[_3328 + 68] = 0
                                mem[_3328 + 100] = address(_3150)
                                mem[_3328 + 132] = 128
                                mem[_3328 + 164] = mem[_3328]
                                t = 0
                                while t < mem[_3328]:
                                    mem[t + _3328 + 196] = mem[t + _3328 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3328] % 32:
                                    require ext_code.size(address(_3009))
                                    call address(_3009).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3150), 128, mem[_3328 + 164 len mem[_3328] + 32]
                                else:
                                    mem[floor32(mem[_3328]) + _3328 + 196] = mem[floor32(mem[_3328]) + _3328 + -(mem[_3328] % 32) + 228 len mem[_3328] % 32]
                                    require ext_code.size(address(_3009))
                                    call address(_3009).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3150), 128, mem[_3328], mem[_3328 + 196 len floor32(mem[_3328]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3148 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3327 = mem[(32 * idx + 1) + 128]
                                _3517 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3517 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3517 + 36] = 0 / 997 * s
                                mem[_3517 + 68] = 0
                                mem[_3517 + 100] = address(_3327)
                                mem[_3517 + 132] = 128
                                mem[_3517 + 164] = mem[_3517]
                                t = 0
                                while t < mem[_3517]:
                                    mem[t + _3517 + 196] = mem[t + _3517 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3517] % 32:
                                    require ext_code.size(address(_3148))
                                    call address(_3148).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3327), 128, mem[_3517 + 164 len mem[_3517] + 32]
                                else:
                                    mem[floor32(mem[_3517]) + _3517 + 196] = mem[floor32(mem[_3517]) + _3517 + -(mem[_3517] % 32) + 228 len mem[_3517] % 32]
                                    require ext_code.size(address(_3148))
                                    call address(_3148).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3327), 128, mem[_3517], mem[_3517 + 196 len floor32(mem[_3517]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3320 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3509 = mem[(32 * idx + 1) + 128]
                            _3758 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3758 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3758 + 36] = 0
                            mem[_3758 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3758 + 100] = address(_3509)
                            mem[_3758 + 132] = 128
                            mem[_3758 + 164] = mem[_3758]
                            t = 0
                            while t < mem[_3758]:
                                mem[t + _3758 + 196] = mem[t + _3758 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3758] % 32:
                                require ext_code.size(address(_3320))
                                call address(_3320).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3509), 128, mem[_3758 + 164 len mem[_3758] + 32]
                            else:
                                mem[floor32(mem[_3758]) + _3758 + 196] = mem[floor32(mem[_3758]) + _3758 + -(mem[_3758] % 32) + 228 len mem[_3758] % 32]
                                require ext_code.size(address(_3320))
                                call address(_3320).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3509), 128, mem[_3758], mem[_3758 + 196 len floor32(mem[_3758]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3507 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3757 = mem[(32 * idx + 1) + 128]
                        _3969 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3969 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3969 + 36] = 0
                        mem[_3969 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3969 + 100] = address(_3757)
                        mem[_3969 + 132] = 128
                        mem[_3969 + 164] = mem[_3969]
                        t = 0
                        while t < mem[_3969]:
                            mem[t + _3969 + 196] = mem[t + _3969 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3969] % 32:
                            require ext_code.size(address(_3507))
                            call address(_3507).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3757), 128, mem[_3969 + 164 len mem[_3969] + 32]
                        else:
                            mem[floor32(mem[_3969]) + _3969 + 196] = mem[floor32(mem[_3969]) + _3969 + -(mem[_3969] % 32) + 228 len mem[_3969] % 32]
                            require ext_code.size(address(_3507))
                            call address(_3507).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3757), 128, mem[_3969], mem[_3969 + 196 len floor32(mem[_3969]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3969]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3323 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3512 = mem[(32 * idx + 1) + 128]
                        _3760 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3760 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3760 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3760 + 68] = 0
                        mem[_3760 + 100] = address(_3512)
                        mem[_3760 + 132] = 128
                        mem[_3760 + 164] = mem[_3760]
                        t = 0
                        while t < mem[_3760]:
                            mem[t + _3760 + 196] = mem[t + _3760 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3760] % 32:
                            require ext_code.size(address(_3323))
                            call address(_3323).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3512), 128, mem[_3760 + 164 len mem[_3760] + 32]
                        else:
                            mem[floor32(mem[_3760]) + _3760 + 196] = mem[floor32(mem[_3760]) + _3760 + -(mem[_3760] % 32) + 228 len mem[_3760] % 32]
                            require ext_code.size(address(_3323))
                            call address(_3323).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3512), 128, mem[_3760], mem[_3760 + 196 len floor32(mem[_3760]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3510 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3759 = mem[(32 * idx + 1) + 128]
                    _3973 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_3973 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3973 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_3973 + 68] = 0
                    mem[_3973 + 100] = address(_3759)
                    mem[_3973 + 132] = 128
                    mem[_3973 + 164] = mem[_3973]
                    t = 0
                    while t < mem[_3973]:
                        mem[t + _3973 + 196] = mem[t + _3973 + 32]
                        t = t + 32
                        continue 
                    if not mem[_3973] % 32:
                        require ext_code.size(address(_3510))
                        call address(_3510).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3759), 128, mem[_3973 + 164 len mem[_3973] + 32]
                    else:
                        mem[floor32(mem[_3973]) + _3973 + 196] = mem[floor32(mem[_3973]) + _3973 + -(mem[_3973] % 32) + 228 len mem[_3973] % 32]
                        require ext_code.size(address(_3510))
                        call address(_3510).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3759), 128, mem[_3973], mem[_3973 + 196 len floor32(mem[_3973]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_3973]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3314 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3503 = mem[(32 * idx + 1) + 128]
                            _3754 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3754 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3754 + 36] = 0
                            mem[_3754 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3754 + 100] = address(_3503)
                            mem[_3754 + 132] = 128
                            mem[_3754 + 164] = mem[_3754]
                            t = 0
                            while t < mem[_3754]:
                                mem[t + _3754 + 196] = mem[t + _3754 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3754] % 32:
                                require ext_code.size(address(_3314))
                                call address(_3314).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3503), 128, mem[_3754 + 164 len mem[_3754] + 32]
                            else:
                                mem[floor32(mem[_3754]) + _3754 + 196] = mem[floor32(mem[_3754]) + _3754 + -(mem[_3754] % 32) + 228 len mem[_3754] % 32]
                                require ext_code.size(address(_3314))
                                call address(_3314).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3503), 128, mem[_3754], mem[_3754 + 196 len floor32(mem[_3754]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3501 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3753 = mem[(32 * idx + 1) + 128]
                        _3961 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3961 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3961 + 36] = 0
                        mem[_3961 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3961 + 100] = address(_3753)
                        mem[_3961 + 132] = 128
                        mem[_3961 + 164] = mem[_3961]
                        t = 0
                        while t < mem[_3961]:
                            mem[t + _3961 + 196] = mem[t + _3961 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3961] % 32:
                            require ext_code.size(address(_3501))
                            call address(_3501).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3753), 128, mem[_3961 + 164 len mem[_3961] + 32]
                        else:
                            mem[floor32(mem[_3961]) + _3961 + 196] = mem[floor32(mem[_3961]) + _3961 + -(mem[_3961] % 32) + 228 len mem[_3961] % 32]
                            require ext_code.size(address(_3501))
                            call address(_3501).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3753), 128, mem[_3961], mem[_3961 + 196 len floor32(mem[_3961]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3961]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3317 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3506 = mem[(32 * idx + 1) + 128]
                        _3756 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3756 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3756 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3756 + 68] = 0
                        mem[_3756 + 100] = address(_3506)
                        mem[_3756 + 132] = 128
                        mem[_3756 + 164] = mem[_3756]
                        t = 0
                        while t < mem[_3756]:
                            mem[t + _3756 + 196] = mem[t + _3756 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3756] % 32:
                            require ext_code.size(address(_3317))
                            call address(_3317).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3506), 128, mem[_3756 + 164 len mem[_3756] + 32]
                        else:
                            mem[floor32(mem[_3756]) + _3756 + 196] = mem[floor32(mem[_3756]) + _3756 + -(mem[_3756] % 32) + 228 len mem[_3756] % 32]
                            require ext_code.size(address(_3317))
                            call address(_3317).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3506), 128, mem[_3756], mem[_3756 + 196 len floor32(mem[_3756]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3504 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3755 = mem[(32 * idx + 1) + 128]
                    _3965 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_3965 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3965 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_3965 + 68] = 0
                    mem[_3965 + 100] = address(_3755)
                    mem[_3965 + 132] = 128
                    mem[_3965 + 164] = mem[_3965]
                    t = 0
                    while t < mem[_3965]:
                        mem[t + _3965 + 196] = mem[t + _3965 + 32]
                        t = t + 32
                        continue 
                    if not mem[_3965] % 32:
                        require ext_code.size(address(_3504))
                        call address(_3504).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3755), 128, mem[_3965 + 164 len mem[_3965] + 32]
                    else:
                        mem[floor32(mem[_3965]) + _3965 + 196] = mem[floor32(mem[_3965]) + _3965 + -(mem[_3965] % 32) + 228 len mem[_3965] % 32]
                        require ext_code.size(address(_3504))
                        call address(_3504).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3755), 128, mem[_3965], mem[_3965 + 196 len floor32(mem[_3965]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_3965]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3748 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3957 = mem[(32 * idx + 1) + 128]
                        _4166 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4166 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4166 + 36] = 0
                        mem[_4166 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4166 + 100] = address(_3957)
                        mem[_4166 + 132] = 128
                        mem[_4166 + 164] = mem[_4166]
                        t = 0
                        while t < mem[_4166]:
                            mem[t + _4166 + 196] = mem[t + _4166 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4166] % 32:
                            require ext_code.size(address(_3748))
                            call address(_3748).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3957), 128, mem[_4166 + 164 len mem[_4166] + 32]
                        else:
                            mem[floor32(mem[_4166]) + _4166 + 196] = mem[floor32(mem[_4166]) + _4166 + -(mem[_4166] % 32) + 228 len mem[_4166] % 32]
                            require ext_code.size(address(_3748))
                            call address(_3748).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3957), 128, mem[_4166], mem[_4166 + 196 len floor32(mem[_4166]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3955 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4165 = mem[(32 * idx + 1) + 128]
                        _4385 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4385 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4385 + 36] = 0
                        mem[_4385 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4385 + 100] = address(_4165)
                        mem[_4385 + 132] = 128
                        mem[_4385 + 164] = mem[_4385]
                        t = 0
                        while t < mem[_4385]:
                            mem[t + _4385 + 196] = mem[t + _4385 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4385] % 32:
                            require ext_code.size(address(_3955))
                            call address(_3955).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4165), 128, mem[_4385 + 164 len mem[_4385] + 32]
                        else:
                            mem[floor32(mem[_4385]) + _4385 + 196] = mem[floor32(mem[_4385]) + _4385 + -(mem[_4385] % 32) + 228 len mem[_4385] % 32]
                            require ext_code.size(address(_3955))
                            call address(_3955).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4165), 128, mem[_4385], mem[_4385 + 196 len floor32(mem[_4385]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3751 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3960 = mem[(32 * idx + 1) + 128]
                        _4168 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4168 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4168 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4168 + 68] = 0
                        mem[_4168 + 100] = address(_3960)
                        mem[_4168 + 132] = 128
                        mem[_4168 + 164] = mem[_4168]
                        t = 0
                        while t < mem[_4168]:
                            mem[t + _4168 + 196] = mem[t + _4168 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4168] % 32:
                            require ext_code.size(address(_3751))
                            call address(_3751).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3960), 128, mem[_4168 + 164 len mem[_4168] + 32]
                        else:
                            mem[floor32(mem[_4168]) + _4168 + 196] = mem[floor32(mem[_4168]) + _4168 + -(mem[_4168] % 32) + 228 len mem[_4168] % 32]
                            require ext_code.size(address(_3751))
                            call address(_3751).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3960), 128, mem[_4168], mem[_4168 + 196 len floor32(mem[_4168]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3958 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4167 = mem[(32 * idx + 1) + 128]
                        _4389 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4389 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4389 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4389 + 68] = 0
                        mem[_4389 + 100] = address(_4167)
                        mem[_4389 + 132] = 128
                        mem[_4389 + 164] = mem[_4389]
                        t = 0
                        while t < mem[_4389]:
                            mem[t + _4389 + 196] = mem[t + _4389 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4389] % 32:
                            require ext_code.size(address(_3958))
                            call address(_3958).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4167), 128, mem[_4389 + 164 len mem[_4389] + 32]
                        else:
                            mem[floor32(mem[_4389]) + _4389 + 196] = mem[floor32(mem[_4389]) + _4389 + -(mem[_4389] % 32) + 228 len mem[_4389] % 32]
                            require ext_code.size(address(_3958))
                            call address(_3958).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4167), 128, mem[_4389], mem[_4389 + 196 len floor32(mem[_4389]) + 32]
            else:
                if address(_2528) == address(_2523):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3028 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3175 = mem[(32 * idx + 1) + 128]
                                _3352 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3352 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3352 + 36] = 0
                                mem[_3352 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3352 + 100] = address(_3175)
                                mem[_3352 + 132] = 128
                                mem[_3352 + 164] = mem[_3352]
                                s = 0
                                while s < mem[_3352]:
                                    mem[s + _3352 + 196] = mem[s + _3352 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3352] % 32:
                                    require ext_code.size(address(_3028))
                                    call address(_3028).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3175), 128, mem[_3352 + 164 len mem[_3352] + 32]
                                else:
                                    mem[floor32(mem[_3352]) + _3352 + 196] = mem[floor32(mem[_3352]) + _3352 + -(mem[_3352] % 32) + 228 len mem[_3352] % 32]
                                    require ext_code.size(address(_3028))
                                    call address(_3028).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3175), 128, mem[_3352], mem[_3352 + 196 len floor32(mem[_3352]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3173 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3351 = mem[(32 * idx + 1) + 128]
                                _3553 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3553 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3553 + 36] = 0
                                mem[_3553 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3553 + 100] = address(_3351)
                                mem[_3553 + 132] = 128
                                mem[_3553 + 164] = mem[_3553]
                                s = 0
                                while s < mem[_3553]:
                                    mem[s + _3553 + 196] = mem[s + _3553 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3553] % 32:
                                    require ext_code.size(address(_3173))
                                    call address(_3173).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3351), 128, mem[_3553 + 164 len mem[_3553] + 32]
                                else:
                                    mem[floor32(mem[_3553]) + _3553 + 196] = mem[floor32(mem[_3553]) + _3553 + -(mem[_3553] % 32) + 228 len mem[_3553] % 32]
                                    require ext_code.size(address(_3173))
                                    call address(_3173).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3351), 128, mem[_3553], mem[_3553 + 196 len floor32(mem[_3553]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3031 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3178 = mem[(32 * idx + 1) + 128]
                                _3354 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3354 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3354 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3354 + 68] = 0
                                mem[_3354 + 100] = address(_3178)
                                mem[_3354 + 132] = 128
                                mem[_3354 + 164] = mem[_3354]
                                s = 0
                                while s < mem[_3354]:
                                    mem[s + _3354 + 196] = mem[s + _3354 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3354] % 32:
                                    require ext_code.size(address(_3031))
                                    call address(_3031).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3178), 128, mem[_3354 + 164 len mem[_3354] + 32]
                                else:
                                    mem[floor32(mem[_3354]) + _3354 + 196] = mem[floor32(mem[_3354]) + _3354 + -(mem[_3354] % 32) + 228 len mem[_3354] % 32]
                                    require ext_code.size(address(_3031))
                                    call address(_3031).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3178), 128, mem[_3354], mem[_3354 + 196 len floor32(mem[_3354]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3176 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3353 = mem[(32 * idx + 1) + 128]
                                _3557 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3557 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3557 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3557 + 68] = 0
                                mem[_3557 + 100] = address(_3353)
                                mem[_3557 + 132] = 128
                                mem[_3557 + 164] = mem[_3557]
                                s = 0
                                while s < mem[_3557]:
                                    mem[s + _3557 + 196] = mem[s + _3557 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3557] % 32:
                                    require ext_code.size(address(_3176))
                                    call address(_3176).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3353), 128, mem[_3557 + 164 len mem[_3557] + 32]
                                else:
                                    mem[floor32(mem[_3557]) + _3557 + 196] = mem[floor32(mem[_3557]) + _3557 + -(mem[_3557] % 32) + 228 len mem[_3557] % 32]
                                    require ext_code.size(address(_3176))
                                    call address(_3176).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3353), 128, mem[_3557], mem[_3557 + 196 len floor32(mem[_3557]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3022 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3169 = mem[(32 * idx + 1) + 128]
                                    _3348 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3348 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3348 + 36] = 0
                                    mem[_3348 + 68] = 0 / 997 * s
                                    mem[_3348 + 100] = address(_3169)
                                    mem[_3348 + 132] = 128
                                    mem[_3348 + 164] = mem[_3348]
                                    t = 0
                                    while t < mem[_3348]:
                                        mem[t + _3348 + 196] = mem[t + _3348 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3348] % 32:
                                        require ext_code.size(address(_3022))
                                        call address(_3022).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3169), 128, mem[_3348 + 164 len mem[_3348] + 32]
                                    else:
                                        mem[floor32(mem[_3348]) + _3348 + 196] = mem[floor32(mem[_3348]) + _3348 + -(mem[_3348] % 32) + 228 len mem[_3348] % 32]
                                        require ext_code.size(address(_3022))
                                        call address(_3022).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3169), 128, mem[_3348], mem[_3348 + 196 len floor32(mem[_3348]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3167 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3347 = mem[(32 * idx + 1) + 128]
                                    _3545 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3545 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3545 + 36] = 0
                                    mem[_3545 + 68] = 0 / 997 * s
                                    mem[_3545 + 100] = address(_3347)
                                    mem[_3545 + 132] = 128
                                    mem[_3545 + 164] = mem[_3545]
                                    t = 0
                                    while t < mem[_3545]:
                                        mem[t + _3545 + 196] = mem[t + _3545 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3545] % 32:
                                        require ext_code.size(address(_3167))
                                        call address(_3167).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3347), 128, mem[_3545 + 164 len mem[_3545] + 32]
                                    else:
                                        mem[floor32(mem[_3545]) + _3545 + 196] = mem[floor32(mem[_3545]) + _3545 + -(mem[_3545] % 32) + 228 len mem[_3545] % 32]
                                        require ext_code.size(address(_3167))
                                        call address(_3167).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3347), 128, mem[_3545], mem[_3545 + 196 len floor32(mem[_3545]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3025 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3172 = mem[(32 * idx + 1) + 128]
                                    _3350 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3350 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3350 + 36] = 0 / 997 * s
                                    mem[_3350 + 68] = 0
                                    mem[_3350 + 100] = address(_3172)
                                    mem[_3350 + 132] = 128
                                    mem[_3350 + 164] = mem[_3350]
                                    t = 0
                                    while t < mem[_3350]:
                                        mem[t + _3350 + 196] = mem[t + _3350 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3350] % 32:
                                        require ext_code.size(address(_3025))
                                        call address(_3025).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3172), 128, mem[_3350 + 164 len mem[_3350] + 32]
                                    else:
                                        mem[floor32(mem[_3350]) + _3350 + 196] = mem[floor32(mem[_3350]) + _3350 + -(mem[_3350] % 32) + 228 len mem[_3350] % 32]
                                        require ext_code.size(address(_3025))
                                        call address(_3025).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3172), 128, mem[_3350], mem[_3350 + 196 len floor32(mem[_3350]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3170 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3349 = mem[(32 * idx + 1) + 128]
                                    _3549 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3549 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3549 + 36] = 0 / 997 * s
                                    mem[_3549 + 68] = 0
                                    mem[_3549 + 100] = address(_3349)
                                    mem[_3549 + 132] = 128
                                    mem[_3549 + 164] = mem[_3549]
                                    t = 0
                                    while t < mem[_3549]:
                                        mem[t + _3549 + 196] = mem[t + _3549 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3549] % 32:
                                        require ext_code.size(address(_3170))
                                        call address(_3170).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3349), 128, mem[_3549 + 164 len mem[_3549] + 32]
                                    else:
                                        mem[floor32(mem[_3549]) + _3549 + 196] = mem[floor32(mem[_3549]) + _3549 + -(mem[_3549] % 32) + 228 len mem[_3549] % 32]
                                        require ext_code.size(address(_3170))
                                        call address(_3170).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3349), 128, mem[_3549], mem[_3549 + 196 len floor32(mem[_3549]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3342 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3541 = mem[(32 * idx + 1) + 128]
                                _3784 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3784 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3784 + 36] = 0
                                mem[_3784 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3784 + 100] = address(_3541)
                                mem[_3784 + 132] = 128
                                mem[_3784 + 164] = mem[_3784]
                                t = 0
                                while t < mem[_3784]:
                                    mem[t + _3784 + 196] = mem[t + _3784 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3784] % 32:
                                    require ext_code.size(address(_3342))
                                    call address(_3342).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3541), 128, mem[_3784 + 164 len mem[_3784] + 32]
                                else:
                                    mem[floor32(mem[_3784]) + _3784 + 196] = mem[floor32(mem[_3784]) + _3784 + -(mem[_3784] % 32) + 228 len mem[_3784] % 32]
                                    require ext_code.size(address(_3342))
                                    call address(_3342).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3541), 128, mem[_3784], mem[_3784 + 196 len floor32(mem[_3784]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3539 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3783 = mem[(32 * idx + 1) + 128]
                            _3995 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3995 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3995 + 36] = 0
                            mem[_3995 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3995 + 100] = address(_3783)
                            mem[_3995 + 132] = 128
                            mem[_3995 + 164] = mem[_3995]
                            t = 0
                            while t < mem[_3995]:
                                mem[t + _3995 + 196] = mem[t + _3995 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3995] % 32:
                                require ext_code.size(address(_3539))
                                call address(_3539).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3783), 128, mem[_3995 + 164 len mem[_3995] + 32]
                            else:
                                mem[floor32(mem[_3995]) + _3995 + 196] = mem[floor32(mem[_3995]) + _3995 + -(mem[_3995] % 32) + 228 len mem[_3995] % 32]
                                require ext_code.size(address(_3539))
                                call address(_3539).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3783), 128, mem[_3995], mem[_3995 + 196 len floor32(mem[_3995]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3995]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3345 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3544 = mem[(32 * idx + 1) + 128]
                            _3786 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3786 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3786 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3786 + 68] = 0
                            mem[_3786 + 100] = address(_3544)
                            mem[_3786 + 132] = 128
                            mem[_3786 + 164] = mem[_3786]
                            t = 0
                            while t < mem[_3786]:
                                mem[t + _3786 + 196] = mem[t + _3786 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3786] % 32:
                                require ext_code.size(address(_3345))
                                call address(_3345).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3544), 128, mem[_3786 + 164 len mem[_3786] + 32]
                            else:
                                mem[floor32(mem[_3786]) + _3786 + 196] = mem[floor32(mem[_3786]) + _3786 + -(mem[_3786] % 32) + 228 len mem[_3786] % 32]
                                require ext_code.size(address(_3345))
                                call address(_3345).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3544), 128, mem[_3786], mem[_3786 + 196 len floor32(mem[_3786]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3542 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3785 = mem[(32 * idx + 1) + 128]
                        _3999 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3999 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3999 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_3999 + 68] = 0
                        mem[_3999 + 100] = address(_3785)
                        mem[_3999 + 132] = 128
                        mem[_3999 + 164] = mem[_3999]
                        t = 0
                        while t < mem[_3999]:
                            mem[t + _3999 + 196] = mem[t + _3999 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3999] % 32:
                            require ext_code.size(address(_3542))
                            call address(_3542).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3785), 128, mem[_3999 + 164 len mem[_3999] + 32]
                        else:
                            mem[floor32(mem[_3999]) + _3999 + 196] = mem[floor32(mem[_3999]) + _3999 + -(mem[_3999] % 32) + 228 len mem[_3999] % 32]
                            require ext_code.size(address(_3542))
                            call address(_3542).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3785), 128, mem[_3999], mem[_3999 + 196 len floor32(mem[_3999]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3999]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3336 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3535 = mem[(32 * idx + 1) + 128]
                                _3780 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3780 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3780 + 36] = 0
                                mem[_3780 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3780 + 100] = address(_3535)
                                mem[_3780 + 132] = 128
                                mem[_3780 + 164] = mem[_3780]
                                t = 0
                                while t < mem[_3780]:
                                    mem[t + _3780 + 196] = mem[t + _3780 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3780] % 32:
                                    require ext_code.size(address(_3336))
                                    call address(_3336).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3535), 128, mem[_3780 + 164 len mem[_3780] + 32]
                                else:
                                    mem[floor32(mem[_3780]) + _3780 + 196] = mem[floor32(mem[_3780]) + _3780 + -(mem[_3780] % 32) + 228 len mem[_3780] % 32]
                                    require ext_code.size(address(_3336))
                                    call address(_3336).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3535), 128, mem[_3780], mem[_3780 + 196 len floor32(mem[_3780]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3533 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3779 = mem[(32 * idx + 1) + 128]
                            _3987 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3987 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3987 + 36] = 0
                            mem[_3987 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3987 + 100] = address(_3779)
                            mem[_3987 + 132] = 128
                            mem[_3987 + 164] = mem[_3987]
                            t = 0
                            while t < mem[_3987]:
                                mem[t + _3987 + 196] = mem[t + _3987 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3987] % 32:
                                require ext_code.size(address(_3533))
                                call address(_3533).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3779), 128, mem[_3987 + 164 len mem[_3987] + 32]
                            else:
                                mem[floor32(mem[_3987]) + _3987 + 196] = mem[floor32(mem[_3987]) + _3987 + -(mem[_3987] % 32) + 228 len mem[_3987] % 32]
                                require ext_code.size(address(_3533))
                                call address(_3533).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3779), 128, mem[_3987], mem[_3987 + 196 len floor32(mem[_3987]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3987]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3339 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3538 = mem[(32 * idx + 1) + 128]
                            _3782 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3782 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3782 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3782 + 68] = 0
                            mem[_3782 + 100] = address(_3538)
                            mem[_3782 + 132] = 128
                            mem[_3782 + 164] = mem[_3782]
                            t = 0
                            while t < mem[_3782]:
                                mem[t + _3782 + 196] = mem[t + _3782 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3782] % 32:
                                require ext_code.size(address(_3339))
                                call address(_3339).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3538), 128, mem[_3782 + 164 len mem[_3782] + 32]
                            else:
                                mem[floor32(mem[_3782]) + _3782 + 196] = mem[floor32(mem[_3782]) + _3782 + -(mem[_3782] % 32) + 228 len mem[_3782] % 32]
                                require ext_code.size(address(_3339))
                                call address(_3339).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3538), 128, mem[_3782], mem[_3782 + 196 len floor32(mem[_3782]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3536 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3781 = mem[(32 * idx + 1) + 128]
                        _3991 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3991 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_3991 + 68] = 0
                        mem[_3991 + 100] = address(_3781)
                        mem[_3991 + 132] = 128
                        mem[_3991 + 164] = mem[_3991]
                        t = 0
                        while t < mem[_3991]:
                            mem[t + _3991 + 196] = mem[t + _3991 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3991] % 32:
                            require ext_code.size(address(_3536))
                            call address(_3536).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3781), 128, mem[_3991 + 164 len mem[_3991] + 32]
                        else:
                            mem[floor32(mem[_3991]) + _3991 + 196] = mem[floor32(mem[_3991]) + _3991 + -(mem[_3991] % 32) + 228 len mem[_3991] % 32]
                            require ext_code.size(address(_3536))
                            call address(_3536).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3781), 128, mem[_3991], mem[_3991 + 196 len floor32(mem[_3991]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3991]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3774 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3983 = mem[(32 * idx + 1) + 128]
                            _4194 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4194 + 36] = 0
                            mem[_4194 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4194 + 100] = address(_3983)
                            mem[_4194 + 132] = 128
                            mem[_4194 + 164] = mem[_4194]
                            t = 0
                            while t < mem[_4194]:
                                mem[t + _4194 + 196] = mem[t + _4194 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4194] % 32:
                                require ext_code.size(address(_3774))
                                call address(_3774).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3983), 128, mem[_4194 + 164 len mem[_4194] + 32]
                            else:
                                mem[floor32(mem[_4194]) + _4194 + 196] = mem[floor32(mem[_4194]) + _4194 + -(mem[_4194] % 32) + 228 len mem[_4194] % 32]
                                require ext_code.size(address(_3774))
                                call address(_3774).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3983), 128, mem[_4194], mem[_4194 + 196 len floor32(mem[_4194]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3981 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4193 = mem[(32 * idx + 1) + 128]
                            _4409 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4409 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4409 + 36] = 0
                            mem[_4409 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4409 + 100] = address(_4193)
                            mem[_4409 + 132] = 128
                            mem[_4409 + 164] = mem[_4409]
                            t = 0
                            while t < mem[_4409]:
                                mem[t + _4409 + 196] = mem[t + _4409 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4409] % 32:
                                require ext_code.size(address(_3981))
                                call address(_3981).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4193), 128, mem[_4409 + 164 len mem[_4409] + 32]
                            else:
                                mem[floor32(mem[_4409]) + _4409 + 196] = mem[floor32(mem[_4409]) + _4409 + -(mem[_4409] % 32) + 228 len mem[_4409] % 32]
                                require ext_code.size(address(_3981))
                                call address(_3981).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4193), 128, mem[_4409], mem[_4409 + 196 len floor32(mem[_4409]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3777 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3986 = mem[(32 * idx + 1) + 128]
                            _4196 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4196 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4196 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4196 + 68] = 0
                            mem[_4196 + 100] = address(_3986)
                            mem[_4196 + 132] = 128
                            mem[_4196 + 164] = mem[_4196]
                            t = 0
                            while t < mem[_4196]:
                                mem[t + _4196 + 196] = mem[t + _4196 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4196] % 32:
                                require ext_code.size(address(_3777))
                                call address(_3777).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3986), 128, mem[_4196 + 164 len mem[_4196] + 32]
                            else:
                                mem[floor32(mem[_4196]) + _4196 + 196] = mem[floor32(mem[_4196]) + _4196 + -(mem[_4196] % 32) + 228 len mem[_4196] % 32]
                                require ext_code.size(address(_3777))
                                call address(_3777).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3986), 128, mem[_4196], mem[_4196 + 196 len floor32(mem[_4196]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3984 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4195 = mem[(32 * idx + 1) + 128]
                            _4413 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4413 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4413 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4413 + 68] = 0
                            mem[_4413 + 100] = address(_4195)
                            mem[_4413 + 132] = 128
                            mem[_4413 + 164] = mem[_4413]
                            t = 0
                            while t < mem[_4413]:
                                mem[t + _4413 + 196] = mem[t + _4413 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4413] % 32:
                                require ext_code.size(address(_3984))
                                call address(_3984).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4195), 128, mem[_4413 + 164 len mem[_4413] + 32]
                            else:
                                mem[floor32(mem[_4413]) + _4413 + 196] = mem[floor32(mem[_4413]) + _4413 + -(mem[_4413] % 32) + 228 len mem[_4413] % 32]
                                require ext_code.size(address(_3984))
                                call address(_3984).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4195), 128, mem[_4413], mem[_4413 + 196 len floor32(mem[_4413]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3044 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3197 = mem[(32 * idx + 1) + 128]
                            _3374 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3374 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3374 + 36] = 0
                            mem[_3374 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3374 + 100] = address(_3197)
                            mem[_3374 + 132] = 128
                            mem[_3374 + 164] = mem[_3374]
                            s = 0
                            while s < mem[_3374]:
                                mem[s + _3374 + 196] = mem[s + _3374 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3374] % 32:
                                require ext_code.size(address(_3044))
                                call address(_3044).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3197), 128, mem[_3374 + 164 len mem[_3374] + 32]
                            else:
                                mem[floor32(mem[_3374]) + _3374 + 196] = mem[floor32(mem[_3374]) + _3374 + -(mem[_3374] % 32) + 228 len mem[_3374] % 32]
                                require ext_code.size(address(_3044))
                                call address(_3044).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3197), 128, mem[_3374], mem[_3374 + 196 len floor32(mem[_3374]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3195 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3373 = mem[(32 * idx + 1) + 128]
                            _3585 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3585 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3585 + 36] = 0
                            mem[_3585 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3585 + 100] = address(_3373)
                            mem[_3585 + 132] = 128
                            mem[_3585 + 164] = mem[_3585]
                            s = 0
                            while s < mem[_3585]:
                                mem[s + _3585 + 196] = mem[s + _3585 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3585] % 32:
                                require ext_code.size(address(_3195))
                                call address(_3195).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3373), 128, mem[_3585 + 164 len mem[_3585] + 32]
                            else:
                                mem[floor32(mem[_3585]) + _3585 + 196] = mem[floor32(mem[_3585]) + _3585 + -(mem[_3585] % 32) + 228 len mem[_3585] % 32]
                                require ext_code.size(address(_3195))
                                call address(_3195).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3373), 128, mem[_3585], mem[_3585 + 196 len floor32(mem[_3585]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3047 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3200 = mem[(32 * idx + 1) + 128]
                            _3376 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3376 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3376 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3376 + 68] = 0
                            mem[_3376 + 100] = address(_3200)
                            mem[_3376 + 132] = 128
                            mem[_3376 + 164] = mem[_3376]
                            s = 0
                            while s < mem[_3376]:
                                mem[s + _3376 + 196] = mem[s + _3376 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3376] % 32:
                                require ext_code.size(address(_3047))
                                call address(_3047).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3200), 128, mem[_3376 + 164 len mem[_3376] + 32]
                            else:
                                mem[floor32(mem[_3376]) + _3376 + 196] = mem[floor32(mem[_3376]) + _3376 + -(mem[_3376] % 32) + 228 len mem[_3376] % 32]
                                require ext_code.size(address(_3047))
                                call address(_3047).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3200), 128, mem[_3376], mem[_3376 + 196 len floor32(mem[_3376]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3198 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3375 = mem[(32 * idx + 1) + 128]
                            _3589 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3589 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3589 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3589 + 68] = 0
                            mem[_3589 + 100] = address(_3375)
                            mem[_3589 + 132] = 128
                            mem[_3589 + 164] = mem[_3589]
                            s = 0
                            while s < mem[_3589]:
                                mem[s + _3589 + 196] = mem[s + _3589 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3589] % 32:
                                require ext_code.size(address(_3198))
                                call address(_3198).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3375), 128, mem[_3589 + 164 len mem[_3589] + 32]
                            else:
                                mem[floor32(mem[_3589]) + _3589 + 196] = mem[floor32(mem[_3589]) + _3589 + -(mem[_3589] % 32) + 228 len mem[_3589] % 32]
                                require ext_code.size(address(_3198))
                                call address(_3198).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3375), 128, mem[_3589], mem[_3589 + 196 len floor32(mem[_3589]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3038 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3191 = mem[(32 * idx + 1) + 128]
                                _3370 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3370 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3370 + 36] = 0
                                mem[_3370 + 68] = 0 / 997 * s
                                mem[_3370 + 100] = address(_3191)
                                mem[_3370 + 132] = 128
                                mem[_3370 + 164] = mem[_3370]
                                t = 0
                                while t < mem[_3370]:
                                    mem[t + _3370 + 196] = mem[t + _3370 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3370] % 32:
                                    require ext_code.size(address(_3038))
                                    call address(_3038).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3191), 128, mem[_3370 + 164 len mem[_3370] + 32]
                                else:
                                    mem[floor32(mem[_3370]) + _3370 + 196] = mem[floor32(mem[_3370]) + _3370 + -(mem[_3370] % 32) + 228 len mem[_3370] % 32]
                                    require ext_code.size(address(_3038))
                                    call address(_3038).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3191), 128, mem[_3370], mem[_3370 + 196 len floor32(mem[_3370]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3189 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3369 = mem[(32 * idx + 1) + 128]
                                _3577 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3577 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3577 + 36] = 0
                                mem[_3577 + 68] = 0 / 997 * s
                                mem[_3577 + 100] = address(_3369)
                                mem[_3577 + 132] = 128
                                mem[_3577 + 164] = mem[_3577]
                                t = 0
                                while t < mem[_3577]:
                                    mem[t + _3577 + 196] = mem[t + _3577 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3577] % 32:
                                    require ext_code.size(address(_3189))
                                    call address(_3189).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3369), 128, mem[_3577 + 164 len mem[_3577] + 32]
                                else:
                                    mem[floor32(mem[_3577]) + _3577 + 196] = mem[floor32(mem[_3577]) + _3577 + -(mem[_3577] % 32) + 228 len mem[_3577] % 32]
                                    require ext_code.size(address(_3189))
                                    call address(_3189).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3369), 128, mem[_3577], mem[_3577 + 196 len floor32(mem[_3577]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3041 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3194 = mem[(32 * idx + 1) + 128]
                                _3372 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3372 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3372 + 36] = 0 / 997 * s
                                mem[_3372 + 68] = 0
                                mem[_3372 + 100] = address(_3194)
                                mem[_3372 + 132] = 128
                                mem[_3372 + 164] = mem[_3372]
                                t = 0
                                while t < mem[_3372]:
                                    mem[t + _3372 + 196] = mem[t + _3372 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3372] % 32:
                                    require ext_code.size(address(_3041))
                                    call address(_3041).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3194), 128, mem[_3372 + 164 len mem[_3372] + 32]
                                else:
                                    mem[floor32(mem[_3372]) + _3372 + 196] = mem[floor32(mem[_3372]) + _3372 + -(mem[_3372] % 32) + 228 len mem[_3372] % 32]
                                    require ext_code.size(address(_3041))
                                    call address(_3041).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3194), 128, mem[_3372], mem[_3372 + 196 len floor32(mem[_3372]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3192 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3371 = mem[(32 * idx + 1) + 128]
                                _3581 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3581 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3581 + 36] = 0 / 997 * s
                                mem[_3581 + 68] = 0
                                mem[_3581 + 100] = address(_3371)
                                mem[_3581 + 132] = 128
                                mem[_3581 + 164] = mem[_3581]
                                t = 0
                                while t < mem[_3581]:
                                    mem[t + _3581 + 196] = mem[t + _3581 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3581] % 32:
                                    require ext_code.size(address(_3192))
                                    call address(_3192).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3371), 128, mem[_3581 + 164 len mem[_3581] + 32]
                                else:
                                    mem[floor32(mem[_3581]) + _3581 + 196] = mem[floor32(mem[_3581]) + _3581 + -(mem[_3581] % 32) + 228 len mem[_3581] % 32]
                                    require ext_code.size(address(_3192))
                                    call address(_3192).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3371), 128, mem[_3581], mem[_3581 + 196 len floor32(mem[_3581]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3364 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3573 = mem[(32 * idx + 1) + 128]
                            _3810 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3810 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3810 + 36] = 0
                            mem[_3810 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3810 + 100] = address(_3573)
                            mem[_3810 + 132] = 128
                            mem[_3810 + 164] = mem[_3810]
                            t = 0
                            while t < mem[_3810]:
                                mem[t + _3810 + 196] = mem[t + _3810 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3810] % 32:
                                require ext_code.size(address(_3364))
                                call address(_3364).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3573), 128, mem[_3810 + 164 len mem[_3810] + 32]
                            else:
                                mem[floor32(mem[_3810]) + _3810 + 196] = mem[floor32(mem[_3810]) + _3810 + -(mem[_3810] % 32) + 228 len mem[_3810] % 32]
                                require ext_code.size(address(_3364))
                                call address(_3364).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3573), 128, mem[_3810], mem[_3810 + 196 len floor32(mem[_3810]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3571 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3809 = mem[(32 * idx + 1) + 128]
                        _4021 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4021 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4021 + 36] = 0
                        mem[_4021 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4021 + 100] = address(_3809)
                        mem[_4021 + 132] = 128
                        mem[_4021 + 164] = mem[_4021]
                        t = 0
                        while t < mem[_4021]:
                            mem[t + _4021 + 196] = mem[t + _4021 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4021] % 32:
                            require ext_code.size(address(_3571))
                            call address(_3571).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3809), 128, mem[_4021 + 164 len mem[_4021] + 32]
                        else:
                            mem[floor32(mem[_4021]) + _4021 + 196] = mem[floor32(mem[_4021]) + _4021 + -(mem[_4021] % 32) + 228 len mem[_4021] % 32]
                            require ext_code.size(address(_3571))
                            call address(_3571).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3809), 128, mem[_4021], mem[_4021 + 196 len floor32(mem[_4021]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4021]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3367 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3576 = mem[(32 * idx + 1) + 128]
                        _3812 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3812 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3812 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3812 + 68] = 0
                        mem[_3812 + 100] = address(_3576)
                        mem[_3812 + 132] = 128
                        mem[_3812 + 164] = mem[_3812]
                        t = 0
                        while t < mem[_3812]:
                            mem[t + _3812 + 196] = mem[t + _3812 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3812] % 32:
                            require ext_code.size(address(_3367))
                            call address(_3367).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3576), 128, mem[_3812 + 164 len mem[_3812] + 32]
                        else:
                            mem[floor32(mem[_3812]) + _3812 + 196] = mem[floor32(mem[_3812]) + _3812 + -(mem[_3812] % 32) + 228 len mem[_3812] % 32]
                            require ext_code.size(address(_3367))
                            call address(_3367).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3576), 128, mem[_3812], mem[_3812 + 196 len floor32(mem[_3812]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3574 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3811 = mem[(32 * idx + 1) + 128]
                    _4025 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4025 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4025 + 68] = 0
                    mem[_4025 + 100] = address(_3811)
                    mem[_4025 + 132] = 128
                    mem[_4025 + 164] = mem[_4025]
                    t = 0
                    while t < mem[_4025]:
                        mem[t + _4025 + 196] = mem[t + _4025 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4025] % 32:
                        require ext_code.size(address(_3574))
                        call address(_3574).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3811), 128, mem[_4025 + 164 len mem[_4025] + 32]
                    else:
                        mem[floor32(mem[_4025]) + _4025 + 196] = mem[floor32(mem[_4025]) + _4025 + -(mem[_4025] % 32) + 228 len mem[_4025] % 32]
                        require ext_code.size(address(_3574))
                        call address(_3574).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3811), 128, mem[_4025], mem[_4025 + 196 len floor32(mem[_4025]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4025]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3358 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3567 = mem[(32 * idx + 1) + 128]
                            _3806 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3806 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3806 + 36] = 0
                            mem[_3806 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3806 + 100] = address(_3567)
                            mem[_3806 + 132] = 128
                            mem[_3806 + 164] = mem[_3806]
                            t = 0
                            while t < mem[_3806]:
                                mem[t + _3806 + 196] = mem[t + _3806 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3806] % 32:
                                require ext_code.size(address(_3358))
                                call address(_3358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3567), 128, mem[_3806 + 164 len mem[_3806] + 32]
                            else:
                                mem[floor32(mem[_3806]) + _3806 + 196] = mem[floor32(mem[_3806]) + _3806 + -(mem[_3806] % 32) + 228 len mem[_3806] % 32]
                                require ext_code.size(address(_3358))
                                call address(_3358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3567), 128, mem[_3806], mem[_3806 + 196 len floor32(mem[_3806]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3565 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3805 = mem[(32 * idx + 1) + 128]
                        _4013 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4013 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4013 + 36] = 0
                        mem[_4013 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4013 + 100] = address(_3805)
                        mem[_4013 + 132] = 128
                        mem[_4013 + 164] = mem[_4013]
                        t = 0
                        while t < mem[_4013]:
                            mem[t + _4013 + 196] = mem[t + _4013 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4013] % 32:
                            require ext_code.size(address(_3565))
                            call address(_3565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3805), 128, mem[_4013 + 164 len mem[_4013] + 32]
                        else:
                            mem[floor32(mem[_4013]) + _4013 + 196] = mem[floor32(mem[_4013]) + _4013 + -(mem[_4013] % 32) + 228 len mem[_4013] % 32]
                            require ext_code.size(address(_3565))
                            call address(_3565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3805), 128, mem[_4013], mem[_4013 + 196 len floor32(mem[_4013]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4013]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3361 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3570 = mem[(32 * idx + 1) + 128]
                        _3808 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3808 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3808 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3808 + 68] = 0
                        mem[_3808 + 100] = address(_3570)
                        mem[_3808 + 132] = 128
                        mem[_3808 + 164] = mem[_3808]
                        t = 0
                        while t < mem[_3808]:
                            mem[t + _3808 + 196] = mem[t + _3808 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3808] % 32:
                            require ext_code.size(address(_3361))
                            call address(_3361).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3570), 128, mem[_3808 + 164 len mem[_3808] + 32]
                        else:
                            mem[floor32(mem[_3808]) + _3808 + 196] = mem[floor32(mem[_3808]) + _3808 + -(mem[_3808] % 32) + 228 len mem[_3808] % 32]
                            require ext_code.size(address(_3361))
                            call address(_3361).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3570), 128, mem[_3808], mem[_3808 + 196 len floor32(mem[_3808]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3568 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3807 = mem[(32 * idx + 1) + 128]
                    _4017 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4017 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4017 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4017 + 68] = 0
                    mem[_4017 + 100] = address(_3807)
                    mem[_4017 + 132] = 128
                    mem[_4017 + 164] = mem[_4017]
                    t = 0
                    while t < mem[_4017]:
                        mem[t + _4017 + 196] = mem[t + _4017 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4017] % 32:
                        require ext_code.size(address(_3568))
                        call address(_3568).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3807), 128, mem[_4017 + 164 len mem[_4017] + 32]
                    else:
                        mem[floor32(mem[_4017]) + _4017 + 196] = mem[floor32(mem[_4017]) + _4017 + -(mem[_4017] % 32) + 228 len mem[_4017] % 32]
                        require ext_code.size(address(_3568))
                        call address(_3568).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3807), 128, mem[_4017], mem[_4017 + 196 len floor32(mem[_4017]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4017]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3800 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4009 = mem[(32 * idx + 1) + 128]
                        _4222 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4222 + 36] = 0
                        mem[_4222 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4222 + 100] = address(_4009)
                        mem[_4222 + 132] = 128
                        mem[_4222 + 164] = mem[_4222]
                        t = 0
                        while t < mem[_4222]:
                            mem[t + _4222 + 196] = mem[t + _4222 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4222] % 32:
                            require ext_code.size(address(_3800))
                            call address(_3800).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4009), 128, mem[_4222 + 164 len mem[_4222] + 32]
                        else:
                            mem[floor32(mem[_4222]) + _4222 + 196] = mem[floor32(mem[_4222]) + _4222 + -(mem[_4222] % 32) + 228 len mem[_4222] % 32]
                            require ext_code.size(address(_3800))
                            call address(_3800).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4009), 128, mem[_4222], mem[_4222 + 196 len floor32(mem[_4222]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4007 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4221 = mem[(32 * idx + 1) + 128]
                        _4433 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4433 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4433 + 36] = 0
                        mem[_4433 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4433 + 100] = address(_4221)
                        mem[_4433 + 132] = 128
                        mem[_4433 + 164] = mem[_4433]
                        t = 0
                        while t < mem[_4433]:
                            mem[t + _4433 + 196] = mem[t + _4433 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4433] % 32:
                            require ext_code.size(address(_4007))
                            call address(_4007).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4221), 128, mem[_4433 + 164 len mem[_4433] + 32]
                        else:
                            mem[floor32(mem[_4433]) + _4433 + 196] = mem[floor32(mem[_4433]) + _4433 + -(mem[_4433] % 32) + 228 len mem[_4433] % 32]
                            require ext_code.size(address(_4007))
                            call address(_4007).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4221), 128, mem[_4433], mem[_4433 + 196 len floor32(mem[_4433]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3803 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4012 = mem[(32 * idx + 1) + 128]
                        _4224 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4224 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4224 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4224 + 68] = 0
                        mem[_4224 + 100] = address(_4012)
                        mem[_4224 + 132] = 128
                        mem[_4224 + 164] = mem[_4224]
                        t = 0
                        while t < mem[_4224]:
                            mem[t + _4224 + 196] = mem[t + _4224 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4224] % 32:
                            require ext_code.size(address(_3803))
                            call address(_3803).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4012), 128, mem[_4224 + 164 len mem[_4224] + 32]
                        else:
                            mem[floor32(mem[_4224]) + _4224 + 196] = mem[floor32(mem[_4224]) + _4224 + -(mem[_4224] % 32) + 228 len mem[_4224] % 32]
                            require ext_code.size(address(_3803))
                            call address(_3803).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4012), 128, mem[_4224], mem[_4224 + 196 len floor32(mem[_4224]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4010 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4223 = mem[(32 * idx + 1) + 128]
                        _4437 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4437 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4437 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4437 + 68] = 0
                        mem[_4437 + 100] = address(_4223)
                        mem[_4437 + 132] = 128
                        mem[_4437 + 164] = mem[_4437]
                        t = 0
                        while t < mem[_4437]:
                            mem[t + _4437 + 196] = mem[t + _4437 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4437] % 32:
                            require ext_code.size(address(_4010))
                            call address(_4010).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4223), 128, mem[_4437 + 164 len mem[_4437] + 32]
                        else:
                            mem[floor32(mem[_4437]) + _4437 + 196] = mem[floor32(mem[_4437]) + _4437 + -(mem[_4437] % 32) + 228 len mem[_4437] % 32]
                            require ext_code.size(address(_4010))
                            call address(_4010).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4223), 128, mem[_4437], mem[_4437 + 196 len floor32(mem[_4437]) + 32]
        else:
            _2525 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
            _2529 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
                if address(_2525) == address(_2525):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3060 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3219 = mem[(32 * idx + 1) + 128]
                                _3396 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3396 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3396 + 36] = 0
                                mem[_3396 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3396 + 100] = address(_3219)
                                mem[_3396 + 132] = 128
                                mem[_3396 + 164] = mem[_3396]
                                s = 0
                                while s < mem[_3396]:
                                    mem[s + _3396 + 196] = mem[s + _3396 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3396] % 32:
                                    require ext_code.size(address(_3060))
                                    call address(_3060).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3219), 128, mem[_3396 + 164 len mem[_3396] + 32]
                                else:
                                    mem[floor32(mem[_3396]) + _3396 + 196] = mem[floor32(mem[_3396]) + _3396 + -(mem[_3396] % 32) + 228 len mem[_3396] % 32]
                                    require ext_code.size(address(_3060))
                                    call address(_3060).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3219), 128, mem[_3396], mem[_3396 + 196 len floor32(mem[_3396]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3217 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3395 = mem[(32 * idx + 1) + 128]
                                _3617 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3617 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3617 + 36] = 0
                                mem[_3617 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3617 + 100] = address(_3395)
                                mem[_3617 + 132] = 128
                                mem[_3617 + 164] = mem[_3617]
                                s = 0
                                while s < mem[_3617]:
                                    mem[s + _3617 + 196] = mem[s + _3617 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3617] % 32:
                                    require ext_code.size(address(_3217))
                                    call address(_3217).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3395), 128, mem[_3617 + 164 len mem[_3617] + 32]
                                else:
                                    mem[floor32(mem[_3617]) + _3617 + 196] = mem[floor32(mem[_3617]) + _3617 + -(mem[_3617] % 32) + 228 len mem[_3617] % 32]
                                    require ext_code.size(address(_3217))
                                    call address(_3217).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3395), 128, mem[_3617], mem[_3617 + 196 len floor32(mem[_3617]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3063 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3222 = mem[(32 * idx + 1) + 128]
                                _3398 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3398 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3398 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3398 + 68] = 0
                                mem[_3398 + 100] = address(_3222)
                                mem[_3398 + 132] = 128
                                mem[_3398 + 164] = mem[_3398]
                                s = 0
                                while s < mem[_3398]:
                                    mem[s + _3398 + 196] = mem[s + _3398 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3398] % 32:
                                    require ext_code.size(address(_3063))
                                    call address(_3063).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3222), 128, mem[_3398 + 164 len mem[_3398] + 32]
                                else:
                                    mem[floor32(mem[_3398]) + _3398 + 196] = mem[floor32(mem[_3398]) + _3398 + -(mem[_3398] % 32) + 228 len mem[_3398] % 32]
                                    require ext_code.size(address(_3063))
                                    call address(_3063).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3222), 128, mem[_3398], mem[_3398 + 196 len floor32(mem[_3398]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3220 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3397 = mem[(32 * idx + 1) + 128]
                                _3621 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3621 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3621 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3621 + 68] = 0
                                mem[_3621 + 100] = address(_3397)
                                mem[_3621 + 132] = 128
                                mem[_3621 + 164] = mem[_3621]
                                s = 0
                                while s < mem[_3621]:
                                    mem[s + _3621 + 196] = mem[s + _3621 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3621] % 32:
                                    require ext_code.size(address(_3220))
                                    call address(_3220).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3397), 128, mem[_3621 + 164 len mem[_3621] + 32]
                                else:
                                    mem[floor32(mem[_3621]) + _3621 + 196] = mem[floor32(mem[_3621]) + _3621 + -(mem[_3621] % 32) + 228 len mem[_3621] % 32]
                                    require ext_code.size(address(_3220))
                                    call address(_3220).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3397), 128, mem[_3621], mem[_3621 + 196 len floor32(mem[_3621]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3054 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3213 = mem[(32 * idx + 1) + 128]
                                    _3392 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3392 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3392 + 36] = 0
                                    mem[_3392 + 68] = 0 / 997 * s
                                    mem[_3392 + 100] = address(_3213)
                                    mem[_3392 + 132] = 128
                                    mem[_3392 + 164] = mem[_3392]
                                    t = 0
                                    while t < mem[_3392]:
                                        mem[t + _3392 + 196] = mem[t + _3392 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3392] % 32:
                                        require ext_code.size(address(_3054))
                                        call address(_3054).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3213), 128, mem[_3392 + 164 len mem[_3392] + 32]
                                    else:
                                        mem[floor32(mem[_3392]) + _3392 + 196] = mem[floor32(mem[_3392]) + _3392 + -(mem[_3392] % 32) + 228 len mem[_3392] % 32]
                                        require ext_code.size(address(_3054))
                                        call address(_3054).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3213), 128, mem[_3392], mem[_3392 + 196 len floor32(mem[_3392]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3211 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3391 = mem[(32 * idx + 1) + 128]
                                    _3609 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3609 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3609 + 36] = 0
                                    mem[_3609 + 68] = 0 / 997 * s
                                    mem[_3609 + 100] = address(_3391)
                                    mem[_3609 + 132] = 128
                                    mem[_3609 + 164] = mem[_3609]
                                    t = 0
                                    while t < mem[_3609]:
                                        mem[t + _3609 + 196] = mem[t + _3609 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3609] % 32:
                                        require ext_code.size(address(_3211))
                                        call address(_3211).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3391), 128, mem[_3609 + 164 len mem[_3609] + 32]
                                    else:
                                        mem[floor32(mem[_3609]) + _3609 + 196] = mem[floor32(mem[_3609]) + _3609 + -(mem[_3609] % 32) + 228 len mem[_3609] % 32]
                                        require ext_code.size(address(_3211))
                                        call address(_3211).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3391), 128, mem[_3609], mem[_3609 + 196 len floor32(mem[_3609]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3057 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3216 = mem[(32 * idx + 1) + 128]
                                    _3394 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3394 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3394 + 36] = 0 / 997 * s
                                    mem[_3394 + 68] = 0
                                    mem[_3394 + 100] = address(_3216)
                                    mem[_3394 + 132] = 128
                                    mem[_3394 + 164] = mem[_3394]
                                    t = 0
                                    while t < mem[_3394]:
                                        mem[t + _3394 + 196] = mem[t + _3394 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3394] % 32:
                                        require ext_code.size(address(_3057))
                                        call address(_3057).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3216), 128, mem[_3394 + 164 len mem[_3394] + 32]
                                    else:
                                        mem[floor32(mem[_3394]) + _3394 + 196] = mem[floor32(mem[_3394]) + _3394 + -(mem[_3394] % 32) + 228 len mem[_3394] % 32]
                                        require ext_code.size(address(_3057))
                                        call address(_3057).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3216), 128, mem[_3394], mem[_3394 + 196 len floor32(mem[_3394]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3214 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3393 = mem[(32 * idx + 1) + 128]
                                    _3613 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3613 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3613 + 36] = 0 / 997 * s
                                    mem[_3613 + 68] = 0
                                    mem[_3613 + 100] = address(_3393)
                                    mem[_3613 + 132] = 128
                                    mem[_3613 + 164] = mem[_3613]
                                    t = 0
                                    while t < mem[_3613]:
                                        mem[t + _3613 + 196] = mem[t + _3613 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3613] % 32:
                                        require ext_code.size(address(_3214))
                                        call address(_3214).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3393), 128, mem[_3613 + 164 len mem[_3613] + 32]
                                    else:
                                        mem[floor32(mem[_3613]) + _3613 + 196] = mem[floor32(mem[_3613]) + _3613 + -(mem[_3613] % 32) + 228 len mem[_3613] % 32]
                                        require ext_code.size(address(_3214))
                                        call address(_3214).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3393), 128, mem[_3613], mem[_3613 + 196 len floor32(mem[_3613]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3386 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3605 = mem[(32 * idx + 1) + 128]
                                _3836 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3836 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3836 + 36] = 0
                                mem[_3836 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3836 + 100] = address(_3605)
                                mem[_3836 + 132] = 128
                                mem[_3836 + 164] = mem[_3836]
                                t = 0
                                while t < mem[_3836]:
                                    mem[t + _3836 + 196] = mem[t + _3836 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3836] % 32:
                                    require ext_code.size(address(_3386))
                                    call address(_3386).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3605), 128, mem[_3836 + 164 len mem[_3836] + 32]
                                else:
                                    mem[floor32(mem[_3836]) + _3836 + 196] = mem[floor32(mem[_3836]) + _3836 + -(mem[_3836] % 32) + 228 len mem[_3836] % 32]
                                    require ext_code.size(address(_3386))
                                    call address(_3386).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3605), 128, mem[_3836], mem[_3836 + 196 len floor32(mem[_3836]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3603 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3835 = mem[(32 * idx + 1) + 128]
                            _4047 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4047 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4047 + 36] = 0
                            mem[_4047 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4047 + 100] = address(_3835)
                            mem[_4047 + 132] = 128
                            mem[_4047 + 164] = mem[_4047]
                            t = 0
                            while t < mem[_4047]:
                                mem[t + _4047 + 196] = mem[t + _4047 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4047] % 32:
                                require ext_code.size(address(_3603))
                                call address(_3603).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3835), 128, mem[_4047 + 164 len mem[_4047] + 32]
                            else:
                                mem[floor32(mem[_4047]) + _4047 + 196] = mem[floor32(mem[_4047]) + _4047 + -(mem[_4047] % 32) + 228 len mem[_4047] % 32]
                                require ext_code.size(address(_3603))
                                call address(_3603).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3835), 128, mem[_4047], mem[_4047 + 196 len floor32(mem[_4047]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4047]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3389 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3608 = mem[(32 * idx + 1) + 128]
                            _3838 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3838 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3838 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3838 + 68] = 0
                            mem[_3838 + 100] = address(_3608)
                            mem[_3838 + 132] = 128
                            mem[_3838 + 164] = mem[_3838]
                            t = 0
                            while t < mem[_3838]:
                                mem[t + _3838 + 196] = mem[t + _3838 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3838] % 32:
                                require ext_code.size(address(_3389))
                                call address(_3389).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3608), 128, mem[_3838 + 164 len mem[_3838] + 32]
                            else:
                                mem[floor32(mem[_3838]) + _3838 + 196] = mem[floor32(mem[_3838]) + _3838 + -(mem[_3838] % 32) + 228 len mem[_3838] % 32]
                                require ext_code.size(address(_3389))
                                call address(_3389).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3608), 128, mem[_3838], mem[_3838 + 196 len floor32(mem[_3838]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3606 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3837 = mem[(32 * idx + 1) + 128]
                        _4051 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4051 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4051 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_4051 + 68] = 0
                        mem[_4051 + 100] = address(_3837)
                        mem[_4051 + 132] = 128
                        mem[_4051 + 164] = mem[_4051]
                        t = 0
                        while t < mem[_4051]:
                            mem[t + _4051 + 196] = mem[t + _4051 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4051] % 32:
                            require ext_code.size(address(_3606))
                            call address(_3606).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3837), 128, mem[_4051 + 164 len mem[_4051] + 32]
                        else:
                            mem[floor32(mem[_4051]) + _4051 + 196] = mem[floor32(mem[_4051]) + _4051 + -(mem[_4051] % 32) + 228 len mem[_4051] % 32]
                            require ext_code.size(address(_3606))
                            call address(_3606).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3837), 128, mem[_4051], mem[_4051 + 196 len floor32(mem[_4051]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4051]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3380 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3599 = mem[(32 * idx + 1) + 128]
                                _3832 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3832 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3832 + 36] = 0
                                mem[_3832 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3832 + 100] = address(_3599)
                                mem[_3832 + 132] = 128
                                mem[_3832 + 164] = mem[_3832]
                                t = 0
                                while t < mem[_3832]:
                                    mem[t + _3832 + 196] = mem[t + _3832 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3832] % 32:
                                    require ext_code.size(address(_3380))
                                    call address(_3380).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3599), 128, mem[_3832 + 164 len mem[_3832] + 32]
                                else:
                                    mem[floor32(mem[_3832]) + _3832 + 196] = mem[floor32(mem[_3832]) + _3832 + -(mem[_3832] % 32) + 228 len mem[_3832] % 32]
                                    require ext_code.size(address(_3380))
                                    call address(_3380).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3599), 128, mem[_3832], mem[_3832 + 196 len floor32(mem[_3832]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3597 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3831 = mem[(32 * idx + 1) + 128]
                            _4039 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4039 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4039 + 36] = 0
                            mem[_4039 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_4039 + 100] = address(_3831)
                            mem[_4039 + 132] = 128
                            mem[_4039 + 164] = mem[_4039]
                            t = 0
                            while t < mem[_4039]:
                                mem[t + _4039 + 196] = mem[t + _4039 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4039] % 32:
                                require ext_code.size(address(_3597))
                                call address(_3597).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3831), 128, mem[_4039 + 164 len mem[_4039] + 32]
                            else:
                                mem[floor32(mem[_4039]) + _4039 + 196] = mem[floor32(mem[_4039]) + _4039 + -(mem[_4039] % 32) + 228 len mem[_4039] % 32]
                                require ext_code.size(address(_3597))
                                call address(_3597).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3831), 128, mem[_4039], mem[_4039 + 196 len floor32(mem[_4039]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4039]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3383 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3602 = mem[(32 * idx + 1) + 128]
                            _3834 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3834 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3834 + 68] = 0
                            mem[_3834 + 100] = address(_3602)
                            mem[_3834 + 132] = 128
                            mem[_3834 + 164] = mem[_3834]
                            t = 0
                            while t < mem[_3834]:
                                mem[t + _3834 + 196] = mem[t + _3834 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3834] % 32:
                                require ext_code.size(address(_3383))
                                call address(_3383).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3602), 128, mem[_3834 + 164 len mem[_3834] + 32]
                            else:
                                mem[floor32(mem[_3834]) + _3834 + 196] = mem[floor32(mem[_3834]) + _3834 + -(mem[_3834] % 32) + 228 len mem[_3834] % 32]
                                require ext_code.size(address(_3383))
                                call address(_3383).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3602), 128, mem[_3834], mem[_3834 + 196 len floor32(mem[_3834]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3600 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3833 = mem[(32 * idx + 1) + 128]
                        _4043 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4043 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4043 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_4043 + 68] = 0
                        mem[_4043 + 100] = address(_3833)
                        mem[_4043 + 132] = 128
                        mem[_4043 + 164] = mem[_4043]
                        t = 0
                        while t < mem[_4043]:
                            mem[t + _4043 + 196] = mem[t + _4043 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4043] % 32:
                            require ext_code.size(address(_3600))
                            call address(_3600).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3833), 128, mem[_4043 + 164 len mem[_4043] + 32]
                        else:
                            mem[floor32(mem[_4043]) + _4043 + 196] = mem[floor32(mem[_4043]) + _4043 + -(mem[_4043] % 32) + 228 len mem[_4043] % 32]
                            require ext_code.size(address(_3600))
                            call address(_3600).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3833), 128, mem[_4043], mem[_4043 + 196 len floor32(mem[_4043]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4043]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3826 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4035 = mem[(32 * idx + 1) + 128]
                            _4250 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4250 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4250 + 36] = 0
                            mem[_4250 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4250 + 100] = address(_4035)
                            mem[_4250 + 132] = 128
                            mem[_4250 + 164] = mem[_4250]
                            t = 0
                            while t < mem[_4250]:
                                mem[t + _4250 + 196] = mem[t + _4250 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4250] % 32:
                                require ext_code.size(address(_3826))
                                call address(_3826).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4035), 128, mem[_4250 + 164 len mem[_4250] + 32]
                            else:
                                mem[floor32(mem[_4250]) + _4250 + 196] = mem[floor32(mem[_4250]) + _4250 + -(mem[_4250] % 32) + 228 len mem[_4250] % 32]
                                require ext_code.size(address(_3826))
                                call address(_3826).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4035), 128, mem[_4250], mem[_4250 + 196 len floor32(mem[_4250]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4033 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4249 = mem[(32 * idx + 1) + 128]
                            _4457 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4457 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4457 + 36] = 0
                            mem[_4457 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4457 + 100] = address(_4249)
                            mem[_4457 + 132] = 128
                            mem[_4457 + 164] = mem[_4457]
                            t = 0
                            while t < mem[_4457]:
                                mem[t + _4457 + 196] = mem[t + _4457 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4457] % 32:
                                require ext_code.size(address(_4033))
                                call address(_4033).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4249), 128, mem[_4457 + 164 len mem[_4457] + 32]
                            else:
                                mem[floor32(mem[_4457]) + _4457 + 196] = mem[floor32(mem[_4457]) + _4457 + -(mem[_4457] % 32) + 228 len mem[_4457] % 32]
                                require ext_code.size(address(_4033))
                                call address(_4033).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4249), 128, mem[_4457], mem[_4457 + 196 len floor32(mem[_4457]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3829 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4038 = mem[(32 * idx + 1) + 128]
                            _4252 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4252 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4252 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4252 + 68] = 0
                            mem[_4252 + 100] = address(_4038)
                            mem[_4252 + 132] = 128
                            mem[_4252 + 164] = mem[_4252]
                            t = 0
                            while t < mem[_4252]:
                                mem[t + _4252 + 196] = mem[t + _4252 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4252] % 32:
                                require ext_code.size(address(_3829))
                                call address(_3829).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4038), 128, mem[_4252 + 164 len mem[_4252] + 32]
                            else:
                                mem[floor32(mem[_4252]) + _4252 + 196] = mem[floor32(mem[_4252]) + _4252 + -(mem[_4252] % 32) + 228 len mem[_4252] % 32]
                                require ext_code.size(address(_3829))
                                call address(_3829).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4038), 128, mem[_4252], mem[_4252 + 196 len floor32(mem[_4252]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4036 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4251 = mem[(32 * idx + 1) + 128]
                            _4461 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4461 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4461 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4461 + 68] = 0
                            mem[_4461 + 100] = address(_4251)
                            mem[_4461 + 132] = 128
                            mem[_4461 + 164] = mem[_4461]
                            t = 0
                            while t < mem[_4461]:
                                mem[t + _4461 + 196] = mem[t + _4461 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4461] % 32:
                                require ext_code.size(address(_4036))
                                call address(_4036).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4251), 128, mem[_4461 + 164 len mem[_4461] + 32]
                            else:
                                mem[floor32(mem[_4461]) + _4461 + 196] = mem[floor32(mem[_4461]) + _4461 + -(mem[_4461] % 32) + 228 len mem[_4461] % 32]
                                require ext_code.size(address(_4036))
                                call address(_4036).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4251), 128, mem[_4461], mem[_4461 + 196 len floor32(mem[_4461]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3076 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3241 = mem[(32 * idx + 1) + 128]
                            _3418 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3418 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3418 + 36] = 0
                            mem[_3418 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3418 + 100] = address(_3241)
                            mem[_3418 + 132] = 128
                            mem[_3418 + 164] = mem[_3418]
                            s = 0
                            while s < mem[_3418]:
                                mem[s + _3418 + 196] = mem[s + _3418 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3418] % 32:
                                require ext_code.size(address(_3076))
                                call address(_3076).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3241), 128, mem[_3418 + 164 len mem[_3418] + 32]
                            else:
                                mem[floor32(mem[_3418]) + _3418 + 196] = mem[floor32(mem[_3418]) + _3418 + -(mem[_3418] % 32) + 228 len mem[_3418] % 32]
                                require ext_code.size(address(_3076))
                                call address(_3076).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3241), 128, mem[_3418], mem[_3418 + 196 len floor32(mem[_3418]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3239 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3417 = mem[(32 * idx + 1) + 128]
                            _3649 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3649 + 36] = 0
                            mem[_3649 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3649 + 100] = address(_3417)
                            mem[_3649 + 132] = 128
                            mem[_3649 + 164] = mem[_3649]
                            s = 0
                            while s < mem[_3649]:
                                mem[s + _3649 + 196] = mem[s + _3649 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3649] % 32:
                                require ext_code.size(address(_3239))
                                call address(_3239).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3417), 128, mem[_3649 + 164 len mem[_3649] + 32]
                            else:
                                mem[floor32(mem[_3649]) + _3649 + 196] = mem[floor32(mem[_3649]) + _3649 + -(mem[_3649] % 32) + 228 len mem[_3649] % 32]
                                require ext_code.size(address(_3239))
                                call address(_3239).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3417), 128, mem[_3649], mem[_3649 + 196 len floor32(mem[_3649]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3079 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3244 = mem[(32 * idx + 1) + 128]
                            _3420 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3420 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3420 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3420 + 68] = 0
                            mem[_3420 + 100] = address(_3244)
                            mem[_3420 + 132] = 128
                            mem[_3420 + 164] = mem[_3420]
                            s = 0
                            while s < mem[_3420]:
                                mem[s + _3420 + 196] = mem[s + _3420 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3420] % 32:
                                require ext_code.size(address(_3079))
                                call address(_3079).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3244), 128, mem[_3420 + 164 len mem[_3420] + 32]
                            else:
                                mem[floor32(mem[_3420]) + _3420 + 196] = mem[floor32(mem[_3420]) + _3420 + -(mem[_3420] % 32) + 228 len mem[_3420] % 32]
                                require ext_code.size(address(_3079))
                                call address(_3079).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3244), 128, mem[_3420], mem[_3420 + 196 len floor32(mem[_3420]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3242 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3419 = mem[(32 * idx + 1) + 128]
                            _3653 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3653 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3653 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3653 + 68] = 0
                            mem[_3653 + 100] = address(_3419)
                            mem[_3653 + 132] = 128
                            mem[_3653 + 164] = mem[_3653]
                            s = 0
                            while s < mem[_3653]:
                                mem[s + _3653 + 196] = mem[s + _3653 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3653] % 32:
                                require ext_code.size(address(_3242))
                                call address(_3242).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3419), 128, mem[_3653 + 164 len mem[_3653] + 32]
                            else:
                                mem[floor32(mem[_3653]) + _3653 + 196] = mem[floor32(mem[_3653]) + _3653 + -(mem[_3653] % 32) + 228 len mem[_3653] % 32]
                                require ext_code.size(address(_3242))
                                call address(_3242).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3419), 128, mem[_3653], mem[_3653 + 196 len floor32(mem[_3653]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3070 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3235 = mem[(32 * idx + 1) + 128]
                                _3414 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3414 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3414 + 36] = 0
                                mem[_3414 + 68] = 0 / 997 * s
                                mem[_3414 + 100] = address(_3235)
                                mem[_3414 + 132] = 128
                                mem[_3414 + 164] = mem[_3414]
                                t = 0
                                while t < mem[_3414]:
                                    mem[t + _3414 + 196] = mem[t + _3414 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3414] % 32:
                                    require ext_code.size(address(_3070))
                                    call address(_3070).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3235), 128, mem[_3414 + 164 len mem[_3414] + 32]
                                else:
                                    mem[floor32(mem[_3414]) + _3414 + 196] = mem[floor32(mem[_3414]) + _3414 + -(mem[_3414] % 32) + 228 len mem[_3414] % 32]
                                    require ext_code.size(address(_3070))
                                    call address(_3070).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3235), 128, mem[_3414], mem[_3414 + 196 len floor32(mem[_3414]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3233 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3413 = mem[(32 * idx + 1) + 128]
                                _3641 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3641 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3641 + 36] = 0
                                mem[_3641 + 68] = 0 / 997 * s
                                mem[_3641 + 100] = address(_3413)
                                mem[_3641 + 132] = 128
                                mem[_3641 + 164] = mem[_3641]
                                t = 0
                                while t < mem[_3641]:
                                    mem[t + _3641 + 196] = mem[t + _3641 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3641] % 32:
                                    require ext_code.size(address(_3233))
                                    call address(_3233).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3413), 128, mem[_3641 + 164 len mem[_3641] + 32]
                                else:
                                    mem[floor32(mem[_3641]) + _3641 + 196] = mem[floor32(mem[_3641]) + _3641 + -(mem[_3641] % 32) + 228 len mem[_3641] % 32]
                                    require ext_code.size(address(_3233))
                                    call address(_3233).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3413), 128, mem[_3641], mem[_3641 + 196 len floor32(mem[_3641]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3073 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3238 = mem[(32 * idx + 1) + 128]
                                _3416 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3416 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3416 + 36] = 0 / 997 * s
                                mem[_3416 + 68] = 0
                                mem[_3416 + 100] = address(_3238)
                                mem[_3416 + 132] = 128
                                mem[_3416 + 164] = mem[_3416]
                                t = 0
                                while t < mem[_3416]:
                                    mem[t + _3416 + 196] = mem[t + _3416 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3416] % 32:
                                    require ext_code.size(address(_3073))
                                    call address(_3073).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3238), 128, mem[_3416 + 164 len mem[_3416] + 32]
                                else:
                                    mem[floor32(mem[_3416]) + _3416 + 196] = mem[floor32(mem[_3416]) + _3416 + -(mem[_3416] % 32) + 228 len mem[_3416] % 32]
                                    require ext_code.size(address(_3073))
                                    call address(_3073).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3238), 128, mem[_3416], mem[_3416 + 196 len floor32(mem[_3416]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3236 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3415 = mem[(32 * idx + 1) + 128]
                                _3645 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3645 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3645 + 36] = 0 / 997 * s
                                mem[_3645 + 68] = 0
                                mem[_3645 + 100] = address(_3415)
                                mem[_3645 + 132] = 128
                                mem[_3645 + 164] = mem[_3645]
                                t = 0
                                while t < mem[_3645]:
                                    mem[t + _3645 + 196] = mem[t + _3645 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3645] % 32:
                                    require ext_code.size(address(_3236))
                                    call address(_3236).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3415), 128, mem[_3645 + 164 len mem[_3645] + 32]
                                else:
                                    mem[floor32(mem[_3645]) + _3645 + 196] = mem[floor32(mem[_3645]) + _3645 + -(mem[_3645] % 32) + 228 len mem[_3645] % 32]
                                    require ext_code.size(address(_3236))
                                    call address(_3236).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3415), 128, mem[_3645], mem[_3645 + 196 len floor32(mem[_3645]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3408 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3637 = mem[(32 * idx + 1) + 128]
                            _3862 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3862 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3862 + 36] = 0
                            mem[_3862 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3862 + 100] = address(_3637)
                            mem[_3862 + 132] = 128
                            mem[_3862 + 164] = mem[_3862]
                            t = 0
                            while t < mem[_3862]:
                                mem[t + _3862 + 196] = mem[t + _3862 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3862] % 32:
                                require ext_code.size(address(_3408))
                                call address(_3408).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3637), 128, mem[_3862 + 164 len mem[_3862] + 32]
                            else:
                                mem[floor32(mem[_3862]) + _3862 + 196] = mem[floor32(mem[_3862]) + _3862 + -(mem[_3862] % 32) + 228 len mem[_3862] % 32]
                                require ext_code.size(address(_3408))
                                call address(_3408).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3637), 128, mem[_3862], mem[_3862 + 196 len floor32(mem[_3862]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3635 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3861 = mem[(32 * idx + 1) + 128]
                        _4073 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4073 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4073 + 36] = 0
                        mem[_4073 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4073 + 100] = address(_3861)
                        mem[_4073 + 132] = 128
                        mem[_4073 + 164] = mem[_4073]
                        t = 0
                        while t < mem[_4073]:
                            mem[t + _4073 + 196] = mem[t + _4073 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4073] % 32:
                            require ext_code.size(address(_3635))
                            call address(_3635).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3861), 128, mem[_4073 + 164 len mem[_4073] + 32]
                        else:
                            mem[floor32(mem[_4073]) + _4073 + 196] = mem[floor32(mem[_4073]) + _4073 + -(mem[_4073] % 32) + 228 len mem[_4073] % 32]
                            require ext_code.size(address(_3635))
                            call address(_3635).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3861), 128, mem[_4073], mem[_4073 + 196 len floor32(mem[_4073]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4073]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3411 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3640 = mem[(32 * idx + 1) + 128]
                        _3864 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3864 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3864 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3864 + 68] = 0
                        mem[_3864 + 100] = address(_3640)
                        mem[_3864 + 132] = 128
                        mem[_3864 + 164] = mem[_3864]
                        t = 0
                        while t < mem[_3864]:
                            mem[t + _3864 + 196] = mem[t + _3864 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3864] % 32:
                            require ext_code.size(address(_3411))
                            call address(_3411).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3640), 128, mem[_3864 + 164 len mem[_3864] + 32]
                        else:
                            mem[floor32(mem[_3864]) + _3864 + 196] = mem[floor32(mem[_3864]) + _3864 + -(mem[_3864] % 32) + 228 len mem[_3864] % 32]
                            require ext_code.size(address(_3411))
                            call address(_3411).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3640), 128, mem[_3864], mem[_3864 + 196 len floor32(mem[_3864]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3638 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3863 = mem[(32 * idx + 1) + 128]
                    _4077 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4077 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4077 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4077 + 68] = 0
                    mem[_4077 + 100] = address(_3863)
                    mem[_4077 + 132] = 128
                    mem[_4077 + 164] = mem[_4077]
                    t = 0
                    while t < mem[_4077]:
                        mem[t + _4077 + 196] = mem[t + _4077 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4077] % 32:
                        require ext_code.size(address(_3638))
                        call address(_3638).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3863), 128, mem[_4077 + 164 len mem[_4077] + 32]
                    else:
                        mem[floor32(mem[_4077]) + _4077 + 196] = mem[floor32(mem[_4077]) + _4077 + -(mem[_4077] % 32) + 228 len mem[_4077] % 32]
                        require ext_code.size(address(_3638))
                        call address(_3638).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3863), 128, mem[_4077], mem[_4077 + 196 len floor32(mem[_4077]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4077]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3402 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3631 = mem[(32 * idx + 1) + 128]
                            _3858 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3858 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3858 + 36] = 0
                            mem[_3858 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3858 + 100] = address(_3631)
                            mem[_3858 + 132] = 128
                            mem[_3858 + 164] = mem[_3858]
                            t = 0
                            while t < mem[_3858]:
                                mem[t + _3858 + 196] = mem[t + _3858 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3858] % 32:
                                require ext_code.size(address(_3402))
                                call address(_3402).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3631), 128, mem[_3858 + 164 len mem[_3858] + 32]
                            else:
                                mem[floor32(mem[_3858]) + _3858 + 196] = mem[floor32(mem[_3858]) + _3858 + -(mem[_3858] % 32) + 228 len mem[_3858] % 32]
                                require ext_code.size(address(_3402))
                                call address(_3402).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3631), 128, mem[_3858], mem[_3858 + 196 len floor32(mem[_3858]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3629 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3857 = mem[(32 * idx + 1) + 128]
                        _4065 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4065 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4065 + 36] = 0
                        mem[_4065 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4065 + 100] = address(_3857)
                        mem[_4065 + 132] = 128
                        mem[_4065 + 164] = mem[_4065]
                        t = 0
                        while t < mem[_4065]:
                            mem[t + _4065 + 196] = mem[t + _4065 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4065] % 32:
                            require ext_code.size(address(_3629))
                            call address(_3629).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3857), 128, mem[_4065 + 164 len mem[_4065] + 32]
                        else:
                            mem[floor32(mem[_4065]) + _4065 + 196] = mem[floor32(mem[_4065]) + _4065 + -(mem[_4065] % 32) + 228 len mem[_4065] % 32]
                            require ext_code.size(address(_3629))
                            call address(_3629).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3857), 128, mem[_4065], mem[_4065 + 196 len floor32(mem[_4065]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4065]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3405 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3634 = mem[(32 * idx + 1) + 128]
                        _3860 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3860 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3860 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3860 + 68] = 0
                        mem[_3860 + 100] = address(_3634)
                        mem[_3860 + 132] = 128
                        mem[_3860 + 164] = mem[_3860]
                        t = 0
                        while t < mem[_3860]:
                            mem[t + _3860 + 196] = mem[t + _3860 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3860] % 32:
                            require ext_code.size(address(_3405))
                            call address(_3405).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3634), 128, mem[_3860 + 164 len mem[_3860] + 32]
                        else:
                            mem[floor32(mem[_3860]) + _3860 + 196] = mem[floor32(mem[_3860]) + _3860 + -(mem[_3860] % 32) + 228 len mem[_3860] % 32]
                            require ext_code.size(address(_3405))
                            call address(_3405).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3634), 128, mem[_3860], mem[_3860 + 196 len floor32(mem[_3860]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3632 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3859 = mem[(32 * idx + 1) + 128]
                    _4069 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4069 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4069 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4069 + 68] = 0
                    mem[_4069 + 100] = address(_3859)
                    mem[_4069 + 132] = 128
                    mem[_4069 + 164] = mem[_4069]
                    t = 0
                    while t < mem[_4069]:
                        mem[t + _4069 + 196] = mem[t + _4069 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4069] % 32:
                        require ext_code.size(address(_3632))
                        call address(_3632).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3859), 128, mem[_4069 + 164 len mem[_4069] + 32]
                    else:
                        mem[floor32(mem[_4069]) + _4069 + 196] = mem[floor32(mem[_4069]) + _4069 + -(mem[_4069] % 32) + 228 len mem[_4069] % 32]
                        require ext_code.size(address(_3632))
                        call address(_3632).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3859), 128, mem[_4069], mem[_4069 + 196 len floor32(mem[_4069]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4069]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3852 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4061 = mem[(32 * idx + 1) + 128]
                        _4278 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4278 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4278 + 36] = 0
                        mem[_4278 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4278 + 100] = address(_4061)
                        mem[_4278 + 132] = 128
                        mem[_4278 + 164] = mem[_4278]
                        t = 0
                        while t < mem[_4278]:
                            mem[t + _4278 + 196] = mem[t + _4278 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4278] % 32:
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4061), 128, mem[_4278 + 164 len mem[_4278] + 32]
                        else:
                            mem[floor32(mem[_4278]) + _4278 + 196] = mem[floor32(mem[_4278]) + _4278 + -(mem[_4278] % 32) + 228 len mem[_4278] % 32]
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4061), 128, mem[_4278], mem[_4278 + 196 len floor32(mem[_4278]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4059 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4277 = mem[(32 * idx + 1) + 128]
                        _4481 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4481 + 36] = 0
                        mem[_4481 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4481 + 100] = address(_4277)
                        mem[_4481 + 132] = 128
                        mem[_4481 + 164] = mem[_4481]
                        t = 0
                        while t < mem[_4481]:
                            mem[t + _4481 + 196] = mem[t + _4481 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4481] % 32:
                            require ext_code.size(address(_4059))
                            call address(_4059).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4277), 128, mem[_4481 + 164 len mem[_4481] + 32]
                        else:
                            mem[floor32(mem[_4481]) + _4481 + 196] = mem[floor32(mem[_4481]) + _4481 + -(mem[_4481] % 32) + 228 len mem[_4481] % 32]
                            require ext_code.size(address(_4059))
                            call address(_4059).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4277), 128, mem[_4481], mem[_4481 + 196 len floor32(mem[_4481]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3855 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4064 = mem[(32 * idx + 1) + 128]
                        _4280 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4280 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4280 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4280 + 68] = 0
                        mem[_4280 + 100] = address(_4064)
                        mem[_4280 + 132] = 128
                        mem[_4280 + 164] = mem[_4280]
                        t = 0
                        while t < mem[_4280]:
                            mem[t + _4280 + 196] = mem[t + _4280 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4280] % 32:
                            require ext_code.size(address(_3855))
                            call address(_3855).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4064), 128, mem[_4280 + 164 len mem[_4280] + 32]
                        else:
                            mem[floor32(mem[_4280]) + _4280 + 196] = mem[floor32(mem[_4280]) + _4280 + -(mem[_4280] % 32) + 228 len mem[_4280] % 32]
                            require ext_code.size(address(_3855))
                            call address(_3855).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4064), 128, mem[_4280], mem[_4280 + 196 len floor32(mem[_4280]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4062 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4279 = mem[(32 * idx + 1) + 128]
                        _4485 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4485 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4485 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4485 + 68] = 0
                        mem[_4485 + 100] = address(_4279)
                        mem[_4485 + 132] = 128
                        mem[_4485 + 164] = mem[_4485]
                        t = 0
                        while t < mem[_4485]:
                            mem[t + _4485 + 196] = mem[t + _4485 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4485] % 32:
                            require ext_code.size(address(_4062))
                            call address(_4062).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4279), 128, mem[_4485 + 164 len mem[_4485] + 32]
                        else:
                            mem[floor32(mem[_4485]) + _4485 + 196] = mem[floor32(mem[_4485]) + _4485 + -(mem[_4485] % 32) + 228 len mem[_4485] % 32]
                            require ext_code.size(address(_4062))
                            call address(_4062).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4279), 128, mem[_4485], mem[_4485 + 196 len floor32(mem[_4485]) + 32]
            else:
                if address(_2529) == address(_2525):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3092 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3263 = mem[(32 * idx + 1) + 128]
                                _3440 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3440 + 36] = 0
                                mem[_3440 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3440 + 100] = address(_3263)
                                mem[_3440 + 132] = 128
                                mem[_3440 + 164] = mem[_3440]
                                s = 0
                                while s < mem[_3440]:
                                    mem[s + _3440 + 196] = mem[s + _3440 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3440] % 32:
                                    require ext_code.size(address(_3092))
                                    call address(_3092).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3263), 128, mem[_3440 + 164 len mem[_3440] + 32]
                                else:
                                    mem[floor32(mem[_3440]) + _3440 + 196] = mem[floor32(mem[_3440]) + _3440 + -(mem[_3440] % 32) + 228 len mem[_3440] % 32]
                                    require ext_code.size(address(_3092))
                                    call address(_3092).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3263), 128, mem[_3440], mem[_3440 + 196 len floor32(mem[_3440]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3261 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3439 = mem[(32 * idx + 1) + 128]
                                _3681 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3681 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3681 + 36] = 0
                                mem[_3681 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3681 + 100] = address(_3439)
                                mem[_3681 + 132] = 128
                                mem[_3681 + 164] = mem[_3681]
                                s = 0
                                while s < mem[_3681]:
                                    mem[s + _3681 + 196] = mem[s + _3681 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3681] % 32:
                                    require ext_code.size(address(_3261))
                                    call address(_3261).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3439), 128, mem[_3681 + 164 len mem[_3681] + 32]
                                else:
                                    mem[floor32(mem[_3681]) + _3681 + 196] = mem[floor32(mem[_3681]) + _3681 + -(mem[_3681] % 32) + 228 len mem[_3681] % 32]
                                    require ext_code.size(address(_3261))
                                    call address(_3261).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3439), 128, mem[_3681], mem[_3681 + 196 len floor32(mem[_3681]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3095 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3266 = mem[(32 * idx + 1) + 128]
                                _3442 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3442 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3442 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3442 + 68] = 0
                                mem[_3442 + 100] = address(_3266)
                                mem[_3442 + 132] = 128
                                mem[_3442 + 164] = mem[_3442]
                                s = 0
                                while s < mem[_3442]:
                                    mem[s + _3442 + 196] = mem[s + _3442 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3442] % 32:
                                    require ext_code.size(address(_3095))
                                    call address(_3095).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3266), 128, mem[_3442 + 164 len mem[_3442] + 32]
                                else:
                                    mem[floor32(mem[_3442]) + _3442 + 196] = mem[floor32(mem[_3442]) + _3442 + -(mem[_3442] % 32) + 228 len mem[_3442] % 32]
                                    require ext_code.size(address(_3095))
                                    call address(_3095).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3266), 128, mem[_3442], mem[_3442 + 196 len floor32(mem[_3442]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3264 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3441 = mem[(32 * idx + 1) + 128]
                                _3685 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3685 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3685 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3685 + 68] = 0
                                mem[_3685 + 100] = address(_3441)
                                mem[_3685 + 132] = 128
                                mem[_3685 + 164] = mem[_3685]
                                s = 0
                                while s < mem[_3685]:
                                    mem[s + _3685 + 196] = mem[s + _3685 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3685] % 32:
                                    require ext_code.size(address(_3264))
                                    call address(_3264).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3441), 128, mem[_3685 + 164 len mem[_3685] + 32]
                                else:
                                    mem[floor32(mem[_3685]) + _3685 + 196] = mem[floor32(mem[_3685]) + _3685 + -(mem[_3685] % 32) + 228 len mem[_3685] % 32]
                                    require ext_code.size(address(_3264))
                                    call address(_3264).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3441), 128, mem[_3685], mem[_3685 + 196 len floor32(mem[_3685]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3086 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3257 = mem[(32 * idx + 1) + 128]
                                    _3436 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3436 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3436 + 36] = 0
                                    mem[_3436 + 68] = 0 / 997 * s
                                    mem[_3436 + 100] = address(_3257)
                                    mem[_3436 + 132] = 128
                                    mem[_3436 + 164] = mem[_3436]
                                    t = 0
                                    while t < mem[_3436]:
                                        mem[t + _3436 + 196] = mem[t + _3436 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3436] % 32:
                                        require ext_code.size(address(_3086))
                                        call address(_3086).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3257), 128, mem[_3436 + 164 len mem[_3436] + 32]
                                    else:
                                        mem[floor32(mem[_3436]) + _3436 + 196] = mem[floor32(mem[_3436]) + _3436 + -(mem[_3436] % 32) + 228 len mem[_3436] % 32]
                                        require ext_code.size(address(_3086))
                                        call address(_3086).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3257), 128, mem[_3436], mem[_3436 + 196 len floor32(mem[_3436]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3255 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3435 = mem[(32 * idx + 1) + 128]
                                    _3673 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3673 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3673 + 36] = 0
                                    mem[_3673 + 68] = 0 / 997 * s
                                    mem[_3673 + 100] = address(_3435)
                                    mem[_3673 + 132] = 128
                                    mem[_3673 + 164] = mem[_3673]
                                    t = 0
                                    while t < mem[_3673]:
                                        mem[t + _3673 + 196] = mem[t + _3673 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3673] % 32:
                                        require ext_code.size(address(_3255))
                                        call address(_3255).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3435), 128, mem[_3673 + 164 len mem[_3673] + 32]
                                    else:
                                        mem[floor32(mem[_3673]) + _3673 + 196] = mem[floor32(mem[_3673]) + _3673 + -(mem[_3673] % 32) + 228 len mem[_3673] % 32]
                                        require ext_code.size(address(_3255))
                                        call address(_3255).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3435), 128, mem[_3673], mem[_3673 + 196 len floor32(mem[_3673]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3089 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3260 = mem[(32 * idx + 1) + 128]
                                    _3438 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3438 + 36] = 0 / 997 * s
                                    mem[_3438 + 68] = 0
                                    mem[_3438 + 100] = address(_3260)
                                    mem[_3438 + 132] = 128
                                    mem[_3438 + 164] = mem[_3438]
                                    t = 0
                                    while t < mem[_3438]:
                                        mem[t + _3438 + 196] = mem[t + _3438 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3438] % 32:
                                        require ext_code.size(address(_3089))
                                        call address(_3089).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3260), 128, mem[_3438 + 164 len mem[_3438] + 32]
                                    else:
                                        mem[floor32(mem[_3438]) + _3438 + 196] = mem[floor32(mem[_3438]) + _3438 + -(mem[_3438] % 32) + 228 len mem[_3438] % 32]
                                        require ext_code.size(address(_3089))
                                        call address(_3089).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3260), 128, mem[_3438], mem[_3438 + 196 len floor32(mem[_3438]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3258 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3437 = mem[(32 * idx + 1) + 128]
                                    _3677 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3677 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3677 + 36] = 0 / 997 * s
                                    mem[_3677 + 68] = 0
                                    mem[_3677 + 100] = address(_3437)
                                    mem[_3677 + 132] = 128
                                    mem[_3677 + 164] = mem[_3677]
                                    t = 0
                                    while t < mem[_3677]:
                                        mem[t + _3677 + 196] = mem[t + _3677 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3677] % 32:
                                        require ext_code.size(address(_3258))
                                        call address(_3258).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3437), 128, mem[_3677 + 164 len mem[_3677] + 32]
                                    else:
                                        mem[floor32(mem[_3677]) + _3677 + 196] = mem[floor32(mem[_3677]) + _3677 + -(mem[_3677] % 32) + 228 len mem[_3677] % 32]
                                        require ext_code.size(address(_3258))
                                        call address(_3258).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3437), 128, mem[_3677], mem[_3677 + 196 len floor32(mem[_3677]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3430 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3669 = mem[(32 * idx + 1) + 128]
                                _3888 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3888 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3888 + 36] = 0
                                mem[_3888 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3888 + 100] = address(_3669)
                                mem[_3888 + 132] = 128
                                mem[_3888 + 164] = mem[_3888]
                                t = 0
                                while t < mem[_3888]:
                                    mem[t + _3888 + 196] = mem[t + _3888 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3888] % 32:
                                    require ext_code.size(address(_3430))
                                    call address(_3430).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3669), 128, mem[_3888 + 164 len mem[_3888] + 32]
                                else:
                                    mem[floor32(mem[_3888]) + _3888 + 196] = mem[floor32(mem[_3888]) + _3888 + -(mem[_3888] % 32) + 228 len mem[_3888] % 32]
                                    require ext_code.size(address(_3430))
                                    call address(_3430).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3669), 128, mem[_3888], mem[_3888 + 196 len floor32(mem[_3888]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3667 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3887 = mem[(32 * idx + 1) + 128]
                            _4099 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4099 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4099 + 36] = 0
                            mem[_4099 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4099 + 100] = address(_3887)
                            mem[_4099 + 132] = 128
                            mem[_4099 + 164] = mem[_4099]
                            t = 0
                            while t < mem[_4099]:
                                mem[t + _4099 + 196] = mem[t + _4099 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4099] % 32:
                                require ext_code.size(address(_3667))
                                call address(_3667).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3887), 128, mem[_4099 + 164 len mem[_4099] + 32]
                            else:
                                mem[floor32(mem[_4099]) + _4099 + 196] = mem[floor32(mem[_4099]) + _4099 + -(mem[_4099] % 32) + 228 len mem[_4099] % 32]
                                require ext_code.size(address(_3667))
                                call address(_3667).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3887), 128, mem[_4099], mem[_4099 + 196 len floor32(mem[_4099]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4099]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3433 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3672 = mem[(32 * idx + 1) + 128]
                            _3890 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3890 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3890 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3890 + 68] = 0
                            mem[_3890 + 100] = address(_3672)
                            mem[_3890 + 132] = 128
                            mem[_3890 + 164] = mem[_3890]
                            t = 0
                            while t < mem[_3890]:
                                mem[t + _3890 + 196] = mem[t + _3890 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3890] % 32:
                                require ext_code.size(address(_3433))
                                call address(_3433).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3672), 128, mem[_3890 + 164 len mem[_3890] + 32]
                            else:
                                mem[floor32(mem[_3890]) + _3890 + 196] = mem[floor32(mem[_3890]) + _3890 + -(mem[_3890] % 32) + 228 len mem[_3890] % 32]
                                require ext_code.size(address(_3433))
                                call address(_3433).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3672), 128, mem[_3890], mem[_3890 + 196 len floor32(mem[_3890]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3670 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3889 = mem[(32 * idx + 1) + 128]
                        _4103 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4103 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4103 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_4103 + 68] = 0
                        mem[_4103 + 100] = address(_3889)
                        mem[_4103 + 132] = 128
                        mem[_4103 + 164] = mem[_4103]
                        t = 0
                        while t < mem[_4103]:
                            mem[t + _4103 + 196] = mem[t + _4103 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4103] % 32:
                            require ext_code.size(address(_3670))
                            call address(_3670).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3889), 128, mem[_4103 + 164 len mem[_4103] + 32]
                        else:
                            mem[floor32(mem[_4103]) + _4103 + 196] = mem[floor32(mem[_4103]) + _4103 + -(mem[_4103] % 32) + 228 len mem[_4103] % 32]
                            require ext_code.size(address(_3670))
                            call address(_3670).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3889), 128, mem[_4103], mem[_4103 + 196 len floor32(mem[_4103]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4103]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3424 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3663 = mem[(32 * idx + 1) + 128]
                                _3884 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3884 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3884 + 36] = 0
                                mem[_3884 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3884 + 100] = address(_3663)
                                mem[_3884 + 132] = 128
                                mem[_3884 + 164] = mem[_3884]
                                t = 0
                                while t < mem[_3884]:
                                    mem[t + _3884 + 196] = mem[t + _3884 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3884] % 32:
                                    require ext_code.size(address(_3424))
                                    call address(_3424).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3663), 128, mem[_3884 + 164 len mem[_3884] + 32]
                                else:
                                    mem[floor32(mem[_3884]) + _3884 + 196] = mem[floor32(mem[_3884]) + _3884 + -(mem[_3884] % 32) + 228 len mem[_3884] % 32]
                                    require ext_code.size(address(_3424))
                                    call address(_3424).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3663), 128, mem[_3884], mem[_3884 + 196 len floor32(mem[_3884]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3661 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3883 = mem[(32 * idx + 1) + 128]
                            _4091 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4091 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4091 + 36] = 0
                            mem[_4091 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_4091 + 100] = address(_3883)
                            mem[_4091 + 132] = 128
                            mem[_4091 + 164] = mem[_4091]
                            t = 0
                            while t < mem[_4091]:
                                mem[t + _4091 + 196] = mem[t + _4091 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4091] % 32:
                                require ext_code.size(address(_3661))
                                call address(_3661).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3883), 128, mem[_4091 + 164 len mem[_4091] + 32]
                            else:
                                mem[floor32(mem[_4091]) + _4091 + 196] = mem[floor32(mem[_4091]) + _4091 + -(mem[_4091] % 32) + 228 len mem[_4091] % 32]
                                require ext_code.size(address(_3661))
                                call address(_3661).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3883), 128, mem[_4091], mem[_4091 + 196 len floor32(mem[_4091]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4091]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3427 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3666 = mem[(32 * idx + 1) + 128]
                            _3886 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3886 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3886 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3886 + 68] = 0
                            mem[_3886 + 100] = address(_3666)
                            mem[_3886 + 132] = 128
                            mem[_3886 + 164] = mem[_3886]
                            t = 0
                            while t < mem[_3886]:
                                mem[t + _3886 + 196] = mem[t + _3886 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3886] % 32:
                                require ext_code.size(address(_3427))
                                call address(_3427).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3666), 128, mem[_3886 + 164 len mem[_3886] + 32]
                            else:
                                mem[floor32(mem[_3886]) + _3886 + 196] = mem[floor32(mem[_3886]) + _3886 + -(mem[_3886] % 32) + 228 len mem[_3886] % 32]
                                require ext_code.size(address(_3427))
                                call address(_3427).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3666), 128, mem[_3886], mem[_3886 + 196 len floor32(mem[_3886]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3664 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3885 = mem[(32 * idx + 1) + 128]
                        _4095 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4095 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4095 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_4095 + 68] = 0
                        mem[_4095 + 100] = address(_3885)
                        mem[_4095 + 132] = 128
                        mem[_4095 + 164] = mem[_4095]
                        t = 0
                        while t < mem[_4095]:
                            mem[t + _4095 + 196] = mem[t + _4095 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4095] % 32:
                            require ext_code.size(address(_3664))
                            call address(_3664).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3885), 128, mem[_4095 + 164 len mem[_4095] + 32]
                        else:
                            mem[floor32(mem[_4095]) + _4095 + 196] = mem[floor32(mem[_4095]) + _4095 + -(mem[_4095] % 32) + 228 len mem[_4095] % 32]
                            require ext_code.size(address(_3664))
                            call address(_3664).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3885), 128, mem[_4095], mem[_4095 + 196 len floor32(mem[_4095]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4095]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3878 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4087 = mem[(32 * idx + 1) + 128]
                            _4306 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4306 + 36] = 0
                            mem[_4306 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4306 + 100] = address(_4087)
                            mem[_4306 + 132] = 128
                            mem[_4306 + 164] = mem[_4306]
                            t = 0
                            while t < mem[_4306]:
                                mem[t + _4306 + 196] = mem[t + _4306 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4306] % 32:
                                require ext_code.size(address(_3878))
                                call address(_3878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4087), 128, mem[_4306 + 164 len mem[_4306] + 32]
                            else:
                                mem[floor32(mem[_4306]) + _4306 + 196] = mem[floor32(mem[_4306]) + _4306 + -(mem[_4306] % 32) + 228 len mem[_4306] % 32]
                                require ext_code.size(address(_3878))
                                call address(_3878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4087), 128, mem[_4306], mem[_4306 + 196 len floor32(mem[_4306]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4085 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4305 = mem[(32 * idx + 1) + 128]
                            _4505 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4505 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4505 + 36] = 0
                            mem[_4505 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4505 + 100] = address(_4305)
                            mem[_4505 + 132] = 128
                            mem[_4505 + 164] = mem[_4505]
                            t = 0
                            while t < mem[_4505]:
                                mem[t + _4505 + 196] = mem[t + _4505 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4505] % 32:
                                require ext_code.size(address(_4085))
                                call address(_4085).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4305), 128, mem[_4505 + 164 len mem[_4505] + 32]
                            else:
                                mem[floor32(mem[_4505]) + _4505 + 196] = mem[floor32(mem[_4505]) + _4505 + -(mem[_4505] % 32) + 228 len mem[_4505] % 32]
                                require ext_code.size(address(_4085))
                                call address(_4085).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4305), 128, mem[_4505], mem[_4505 + 196 len floor32(mem[_4505]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3881 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4090 = mem[(32 * idx + 1) + 128]
                            _4308 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4308 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4308 + 68] = 0
                            mem[_4308 + 100] = address(_4090)
                            mem[_4308 + 132] = 128
                            mem[_4308 + 164] = mem[_4308]
                            t = 0
                            while t < mem[_4308]:
                                mem[t + _4308 + 196] = mem[t + _4308 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4308] % 32:
                                require ext_code.size(address(_3881))
                                call address(_3881).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4090), 128, mem[_4308 + 164 len mem[_4308] + 32]
                            else:
                                mem[floor32(mem[_4308]) + _4308 + 196] = mem[floor32(mem[_4308]) + _4308 + -(mem[_4308] % 32) + 228 len mem[_4308] % 32]
                                require ext_code.size(address(_3881))
                                call address(_3881).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4090), 128, mem[_4308], mem[_4308 + 196 len floor32(mem[_4308]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4088 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4307 = mem[(32 * idx + 1) + 128]
                            _4509 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4509 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4509 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4509 + 68] = 0
                            mem[_4509 + 100] = address(_4307)
                            mem[_4509 + 132] = 128
                            mem[_4509 + 164] = mem[_4509]
                            t = 0
                            while t < mem[_4509]:
                                mem[t + _4509 + 196] = mem[t + _4509 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4509] % 32:
                                require ext_code.size(address(_4088))
                                call address(_4088).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4307), 128, mem[_4509 + 164 len mem[_4509] + 32]
                            else:
                                mem[floor32(mem[_4509]) + _4509 + 196] = mem[floor32(mem[_4509]) + _4509 + -(mem[_4509] % 32) + 228 len mem[_4509] % 32]
                                require ext_code.size(address(_4088))
                                call address(_4088).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4307), 128, mem[_4509], mem[_4509 + 196 len floor32(mem[_4509]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3108 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3285 = mem[(32 * idx + 1) + 128]
                            _3462 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3462 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3462 + 36] = 0
                            mem[_3462 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3462 + 100] = address(_3285)
                            mem[_3462 + 132] = 128
                            mem[_3462 + 164] = mem[_3462]
                            s = 0
                            while s < mem[_3462]:
                                mem[s + _3462 + 196] = mem[s + _3462 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3462] % 32:
                                require ext_code.size(address(_3108))
                                call address(_3108).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3285), 128, mem[_3462 + 164 len mem[_3462] + 32]
                            else:
                                mem[floor32(mem[_3462]) + _3462 + 196] = mem[floor32(mem[_3462]) + _3462 + -(mem[_3462] % 32) + 228 len mem[_3462] % 32]
                                require ext_code.size(address(_3108))
                                call address(_3108).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3285), 128, mem[_3462], mem[_3462 + 196 len floor32(mem[_3462]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3283 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3461 = mem[(32 * idx + 1) + 128]
                            _3713 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3713 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3713 + 36] = 0
                            mem[_3713 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3713 + 100] = address(_3461)
                            mem[_3713 + 132] = 128
                            mem[_3713 + 164] = mem[_3713]
                            s = 0
                            while s < mem[_3713]:
                                mem[s + _3713 + 196] = mem[s + _3713 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3713] % 32:
                                require ext_code.size(address(_3283))
                                call address(_3283).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3461), 128, mem[_3713 + 164 len mem[_3713] + 32]
                            else:
                                mem[floor32(mem[_3713]) + _3713 + 196] = mem[floor32(mem[_3713]) + _3713 + -(mem[_3713] % 32) + 228 len mem[_3713] % 32]
                                require ext_code.size(address(_3283))
                                call address(_3283).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3461), 128, mem[_3713], mem[_3713 + 196 len floor32(mem[_3713]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3111 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3288 = mem[(32 * idx + 1) + 128]
                            _3464 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3464 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3464 + 68] = 0
                            mem[_3464 + 100] = address(_3288)
                            mem[_3464 + 132] = 128
                            mem[_3464 + 164] = mem[_3464]
                            s = 0
                            while s < mem[_3464]:
                                mem[s + _3464 + 196] = mem[s + _3464 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3464] % 32:
                                require ext_code.size(address(_3111))
                                call address(_3111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3288), 128, mem[_3464 + 164 len mem[_3464] + 32]
                            else:
                                mem[floor32(mem[_3464]) + _3464 + 196] = mem[floor32(mem[_3464]) + _3464 + -(mem[_3464] % 32) + 228 len mem[_3464] % 32]
                                require ext_code.size(address(_3111))
                                call address(_3111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3288), 128, mem[_3464], mem[_3464 + 196 len floor32(mem[_3464]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3286 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3463 = mem[(32 * idx + 1) + 128]
                            _3717 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3717 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3717 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3717 + 68] = 0
                            mem[_3717 + 100] = address(_3463)
                            mem[_3717 + 132] = 128
                            mem[_3717 + 164] = mem[_3717]
                            s = 0
                            while s < mem[_3717]:
                                mem[s + _3717 + 196] = mem[s + _3717 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3717] % 32:
                                require ext_code.size(address(_3286))
                                call address(_3286).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3463), 128, mem[_3717 + 164 len mem[_3717] + 32]
                            else:
                                mem[floor32(mem[_3717]) + _3717 + 196] = mem[floor32(mem[_3717]) + _3717 + -(mem[_3717] % 32) + 228 len mem[_3717] % 32]
                                require ext_code.size(address(_3286))
                                call address(_3286).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3463), 128, mem[_3717], mem[_3717 + 196 len floor32(mem[_3717]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3102 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3279 = mem[(32 * idx + 1) + 128]
                                _3458 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3458 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3458 + 36] = 0
                                mem[_3458 + 68] = 0 / 997 * s
                                mem[_3458 + 100] = address(_3279)
                                mem[_3458 + 132] = 128
                                mem[_3458 + 164] = mem[_3458]
                                t = 0
                                while t < mem[_3458]:
                                    mem[t + _3458 + 196] = mem[t + _3458 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3458] % 32:
                                    require ext_code.size(address(_3102))
                                    call address(_3102).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3279), 128, mem[_3458 + 164 len mem[_3458] + 32]
                                else:
                                    mem[floor32(mem[_3458]) + _3458 + 196] = mem[floor32(mem[_3458]) + _3458 + -(mem[_3458] % 32) + 228 len mem[_3458] % 32]
                                    require ext_code.size(address(_3102))
                                    call address(_3102).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3279), 128, mem[_3458], mem[_3458 + 196 len floor32(mem[_3458]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3277 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3457 = mem[(32 * idx + 1) + 128]
                                _3705 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3705 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3705 + 36] = 0
                                mem[_3705 + 68] = 0 / 997 * s
                                mem[_3705 + 100] = address(_3457)
                                mem[_3705 + 132] = 128
                                mem[_3705 + 164] = mem[_3705]
                                t = 0
                                while t < mem[_3705]:
                                    mem[t + _3705 + 196] = mem[t + _3705 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3705] % 32:
                                    require ext_code.size(address(_3277))
                                    call address(_3277).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3457), 128, mem[_3705 + 164 len mem[_3705] + 32]
                                else:
                                    mem[floor32(mem[_3705]) + _3705 + 196] = mem[floor32(mem[_3705]) + _3705 + -(mem[_3705] % 32) + 228 len mem[_3705] % 32]
                                    require ext_code.size(address(_3277))
                                    call address(_3277).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3457), 128, mem[_3705], mem[_3705 + 196 len floor32(mem[_3705]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3105 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3282 = mem[(32 * idx + 1) + 128]
                                _3460 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3460 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3460 + 36] = 0 / 997 * s
                                mem[_3460 + 68] = 0
                                mem[_3460 + 100] = address(_3282)
                                mem[_3460 + 132] = 128
                                mem[_3460 + 164] = mem[_3460]
                                t = 0
                                while t < mem[_3460]:
                                    mem[t + _3460 + 196] = mem[t + _3460 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3460] % 32:
                                    require ext_code.size(address(_3105))
                                    call address(_3105).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3282), 128, mem[_3460 + 164 len mem[_3460] + 32]
                                else:
                                    mem[floor32(mem[_3460]) + _3460 + 196] = mem[floor32(mem[_3460]) + _3460 + -(mem[_3460] % 32) + 228 len mem[_3460] % 32]
                                    require ext_code.size(address(_3105))
                                    call address(_3105).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3282), 128, mem[_3460], mem[_3460 + 196 len floor32(mem[_3460]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3280 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3459 = mem[(32 * idx + 1) + 128]
                                _3709 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3709 + 36] = 0 / 997 * s
                                mem[_3709 + 68] = 0
                                mem[_3709 + 100] = address(_3459)
                                mem[_3709 + 132] = 128
                                mem[_3709 + 164] = mem[_3709]
                                t = 0
                                while t < mem[_3709]:
                                    mem[t + _3709 + 196] = mem[t + _3709 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3709] % 32:
                                    require ext_code.size(address(_3280))
                                    call address(_3280).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3459), 128, mem[_3709 + 164 len mem[_3709] + 32]
                                else:
                                    mem[floor32(mem[_3709]) + _3709 + 196] = mem[floor32(mem[_3709]) + _3709 + -(mem[_3709] % 32) + 228 len mem[_3709] % 32]
                                    require ext_code.size(address(_3280))
                                    call address(_3280).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3459), 128, mem[_3709], mem[_3709 + 196 len floor32(mem[_3709]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3452 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3701 = mem[(32 * idx + 1) + 128]
                            _3914 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3914 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3914 + 36] = 0
                            mem[_3914 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3914 + 100] = address(_3701)
                            mem[_3914 + 132] = 128
                            mem[_3914 + 164] = mem[_3914]
                            t = 0
                            while t < mem[_3914]:
                                mem[t + _3914 + 196] = mem[t + _3914 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3914] % 32:
                                require ext_code.size(address(_3452))
                                call address(_3452).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3701), 128, mem[_3914 + 164 len mem[_3914] + 32]
                            else:
                                mem[floor32(mem[_3914]) + _3914 + 196] = mem[floor32(mem[_3914]) + _3914 + -(mem[_3914] % 32) + 228 len mem[_3914] % 32]
                                require ext_code.size(address(_3452))
                                call address(_3452).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3701), 128, mem[_3914], mem[_3914 + 196 len floor32(mem[_3914]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3699 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3913 = mem[(32 * idx + 1) + 128]
                        _4125 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4125 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4125 + 36] = 0
                        mem[_4125 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4125 + 100] = address(_3913)
                        mem[_4125 + 132] = 128
                        mem[_4125 + 164] = mem[_4125]
                        t = 0
                        while t < mem[_4125]:
                            mem[t + _4125 + 196] = mem[t + _4125 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4125] % 32:
                            require ext_code.size(address(_3699))
                            call address(_3699).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3913), 128, mem[_4125 + 164 len mem[_4125] + 32]
                        else:
                            mem[floor32(mem[_4125]) + _4125 + 196] = mem[floor32(mem[_4125]) + _4125 + -(mem[_4125] % 32) + 228 len mem[_4125] % 32]
                            require ext_code.size(address(_3699))
                            call address(_3699).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3913), 128, mem[_4125], mem[_4125 + 196 len floor32(mem[_4125]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4125]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3455 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3704 = mem[(32 * idx + 1) + 128]
                        _3916 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3916 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3916 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3916 + 68] = 0
                        mem[_3916 + 100] = address(_3704)
                        mem[_3916 + 132] = 128
                        mem[_3916 + 164] = mem[_3916]
                        t = 0
                        while t < mem[_3916]:
                            mem[t + _3916 + 196] = mem[t + _3916 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3916] % 32:
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3704), 128, mem[_3916 + 164 len mem[_3916] + 32]
                        else:
                            mem[floor32(mem[_3916]) + _3916 + 196] = mem[floor32(mem[_3916]) + _3916 + -(mem[_3916] % 32) + 228 len mem[_3916] % 32]
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3704), 128, mem[_3916], mem[_3916 + 196 len floor32(mem[_3916]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3702 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3915 = mem[(32 * idx + 1) + 128]
                    _4129 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4129 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4129 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4129 + 68] = 0
                    mem[_4129 + 100] = address(_3915)
                    mem[_4129 + 132] = 128
                    mem[_4129 + 164] = mem[_4129]
                    t = 0
                    while t < mem[_4129]:
                        mem[t + _4129 + 196] = mem[t + _4129 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4129] % 32:
                        require ext_code.size(address(_3702))
                        call address(_3702).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3915), 128, mem[_4129 + 164 len mem[_4129] + 32]
                    else:
                        mem[floor32(mem[_4129]) + _4129 + 196] = mem[floor32(mem[_4129]) + _4129 + -(mem[_4129] % 32) + 228 len mem[_4129] % 32]
                        require ext_code.size(address(_3702))
                        call address(_3702).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3915), 128, mem[_4129], mem[_4129 + 196 len floor32(mem[_4129]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4129]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3446 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3695 = mem[(32 * idx + 1) + 128]
                            _3910 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3910 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3910 + 36] = 0
                            mem[_3910 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3910 + 100] = address(_3695)
                            mem[_3910 + 132] = 128
                            mem[_3910 + 164] = mem[_3910]
                            t = 0
                            while t < mem[_3910]:
                                mem[t + _3910 + 196] = mem[t + _3910 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3910] % 32:
                                require ext_code.size(address(_3446))
                                call address(_3446).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3695), 128, mem[_3910 + 164 len mem[_3910] + 32]
                            else:
                                mem[floor32(mem[_3910]) + _3910 + 196] = mem[floor32(mem[_3910]) + _3910 + -(mem[_3910] % 32) + 228 len mem[_3910] % 32]
                                require ext_code.size(address(_3446))
                                call address(_3446).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3695), 128, mem[_3910], mem[_3910 + 196 len floor32(mem[_3910]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3693 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3909 = mem[(32 * idx + 1) + 128]
                        _4117 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4117 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4117 + 36] = 0
                        mem[_4117 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4117 + 100] = address(_3909)
                        mem[_4117 + 132] = 128
                        mem[_4117 + 164] = mem[_4117]
                        t = 0
                        while t < mem[_4117]:
                            mem[t + _4117 + 196] = mem[t + _4117 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4117] % 32:
                            require ext_code.size(address(_3693))
                            call address(_3693).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3909), 128, mem[_4117 + 164 len mem[_4117] + 32]
                        else:
                            mem[floor32(mem[_4117]) + _4117 + 196] = mem[floor32(mem[_4117]) + _4117 + -(mem[_4117] % 32) + 228 len mem[_4117] % 32]
                            require ext_code.size(address(_3693))
                            call address(_3693).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3909), 128, mem[_4117], mem[_4117 + 196 len floor32(mem[_4117]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4117]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3449 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3698 = mem[(32 * idx + 1) + 128]
                        _3912 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3912 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3912 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3912 + 68] = 0
                        mem[_3912 + 100] = address(_3698)
                        mem[_3912 + 132] = 128
                        mem[_3912 + 164] = mem[_3912]
                        t = 0
                        while t < mem[_3912]:
                            mem[t + _3912 + 196] = mem[t + _3912 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3912] % 32:
                            require ext_code.size(address(_3449))
                            call address(_3449).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3698), 128, mem[_3912 + 164 len mem[_3912] + 32]
                        else:
                            mem[floor32(mem[_3912]) + _3912 + 196] = mem[floor32(mem[_3912]) + _3912 + -(mem[_3912] % 32) + 228 len mem[_3912] % 32]
                            require ext_code.size(address(_3449))
                            call address(_3449).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3698), 128, mem[_3912], mem[_3912 + 196 len floor32(mem[_3912]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3696 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3911 = mem[(32 * idx + 1) + 128]
                    _4121 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4121 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4121 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4121 + 68] = 0
                    mem[_4121 + 100] = address(_3911)
                    mem[_4121 + 132] = 128
                    mem[_4121 + 164] = mem[_4121]
                    t = 0
                    while t < mem[_4121]:
                        mem[t + _4121 + 196] = mem[t + _4121 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4121] % 32:
                        require ext_code.size(address(_3696))
                        call address(_3696).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3911), 128, mem[_4121 + 164 len mem[_4121] + 32]
                    else:
                        mem[floor32(mem[_4121]) + _4121 + 196] = mem[floor32(mem[_4121]) + _4121 + -(mem[_4121] % 32) + 228 len mem[_4121] % 32]
                        require ext_code.size(address(_3696))
                        call address(_3696).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3911), 128, mem[_4121], mem[_4121 + 196 len floor32(mem[_4121]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4121]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3904 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4113 = mem[(32 * idx + 1) + 128]
                        _4334 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4334 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4334 + 36] = 0
                        mem[_4334 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4334 + 100] = address(_4113)
                        mem[_4334 + 132] = 128
                        mem[_4334 + 164] = mem[_4334]
                        t = 0
                        while t < mem[_4334]:
                            mem[t + _4334 + 196] = mem[t + _4334 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4334] % 32:
                            require ext_code.size(address(_3904))
                            call address(_3904).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4113), 128, mem[_4334 + 164 len mem[_4334] + 32]
                        else:
                            mem[floor32(mem[_4334]) + _4334 + 196] = mem[floor32(mem[_4334]) + _4334 + -(mem[_4334] % 32) + 228 len mem[_4334] % 32]
                            require ext_code.size(address(_3904))
                            call address(_3904).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4113), 128, mem[_4334], mem[_4334 + 196 len floor32(mem[_4334]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4111 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4333 = mem[(32 * idx + 1) + 128]
                        _4529 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4529 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4529 + 36] = 0
                        mem[_4529 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4529 + 100] = address(_4333)
                        mem[_4529 + 132] = 128
                        mem[_4529 + 164] = mem[_4529]
                        t = 0
                        while t < mem[_4529]:
                            mem[t + _4529 + 196] = mem[t + _4529 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4529] % 32:
                            require ext_code.size(address(_4111))
                            call address(_4111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4333), 128, mem[_4529 + 164 len mem[_4529] + 32]
                        else:
                            mem[floor32(mem[_4529]) + _4529 + 196] = mem[floor32(mem[_4529]) + _4529 + -(mem[_4529] % 32) + 228 len mem[_4529] % 32]
                            require ext_code.size(address(_4111))
                            call address(_4111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4333), 128, mem[_4529], mem[_4529 + 196 len floor32(mem[_4529]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3907 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4116 = mem[(32 * idx + 1) + 128]
                        _4336 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4336 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4336 + 68] = 0
                        mem[_4336 + 100] = address(_4116)
                        mem[_4336 + 132] = 128
                        mem[_4336 + 164] = mem[_4336]
                        t = 0
                        while t < mem[_4336]:
                            mem[t + _4336 + 196] = mem[t + _4336 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4336] % 32:
                            require ext_code.size(address(_3907))
                            call address(_3907).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4116), 128, mem[_4336 + 164 len mem[_4336] + 32]
                        else:
                            mem[floor32(mem[_4336]) + _4336 + 196] = mem[floor32(mem[_4336]) + _4336 + -(mem[_4336] % 32) + 228 len mem[_4336] % 32]
                            require ext_code.size(address(_3907))
                            call address(_3907).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4116), 128, mem[_4336], mem[_4336 + 196 len floor32(mem[_4336]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4114 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4335 = mem[(32 * idx + 1) + 128]
                        _4533 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4533 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4533 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4533 + 68] = 0
                        mem[_4533 + 100] = address(_4335)
                        mem[_4533 + 132] = 128
                        mem[_4533 + 164] = mem[_4533]
                        t = 0
                        while t < mem[_4533]:
                            mem[t + _4533 + 196] = mem[t + _4533 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4533] % 32:
                            require ext_code.size(address(_4114))
                            call address(_4114).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4335), 128, mem[_4533 + 164 len mem[_4533] + 32]
                        else:
                            mem[floor32(mem[_4533]) + _4533 + 196] = mem[floor32(mem[_4533]) + _4533 + -(mem[_4533] % 32) + 228 len mem[_4533] % 32]
                            require ext_code.size(address(_4114))
                            call address(_4114).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4335), 128, mem[_4533], mem[_4533 + 196 len floor32(mem[_4533]) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
        continue 
    require 0 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
    _2508 = mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
    mem[mem[64] + 4] = this.address
    require ext_code.size(address(_2508))
    staticcall address(_2508).0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
    require ext_code.size(mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20])
    call mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20].0xa9059cbb with:
         gas gas_remaining wei
        args 0xac8569140dd1681fe072990f40ed6f1e68d2552a, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 32, 33, 0x315472616e7366657248656c7065723a205452414e534645525f4641494c45445f, mem[mem[64] + 101 len 31]
}

function uniswapV2Call(address arg1, uint256 arg2, uint256 arg3, bytes arg4) {
    require calldata.size - 4 >= 128
    require arg4 <= 4294967296
    require arg4 + 36 <= calldata.size
    require arg4.length <= 4294967296 and arg4 + arg4.length + 36 <= calldata.size
    if arg1 != this.address:
        revert with 0, '!sender'
    require arg4.length >= 96
    require cd[(arg4 + 36)] <= 4294967296
    require cd[(arg4 + 36)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 36)] + 36)] <= 4294967296 and cd[(arg4 + 36)] + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 68 <= arg4.length + 36
    mem[96] = cd[(arg4 + cd[(arg4 + 36)] + 36)]
    mem[128 len 32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]] = call.data[arg4 + cd[(arg4 + 36)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]]
    require cd[(arg4 + 68)] <= 4294967296
    require cd[(arg4 + 68)] + 68 <= arg4.length + 36
    require cd[(arg4 + cd[(arg4 + 68)] + 36)] <= 4294967296 and cd[(arg4 + 68)] + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 68 <= arg4.length + 36
    mem[64] = (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128] = cd[(arg4 + cd[(arg4 + 68)] + 36)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160 len 32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]] = call.data[arg4 + cd[(arg4 + 68)] + 68 len 32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160] = 0
    require cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1 < cd[(arg4 + cd[(arg4 + 36)] + 36)]
    if mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1) + 140 len 20] != msg.sender:
        revert with 0, '!pair'
    require 0 < cd[(arg4 + cd[(arg4 + 68)] + 36)]
    _10 = mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
    require 0 < cd[(arg4 + cd[(arg4 + 36)] + 36)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 164] = mem[140 len 20]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 196] = cd[(arg4 + 100)]
    require ext_code.size(address(_10))
    call address(_10).0xa9059cbb with:
         gas gas_remaining wei
        args mem[140 len 20], cd[(arg4 + 100)]
    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 160] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 
                    32,
                    33,
                    0x775472616e7366657248656c7065723a205452414e534645525f4641494c45445f,
                    mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + (32 * cd[(arg4 + cd[(arg4 + 68)] + 36)]) + 261 len 31]
    idx = 0
    s = cd[(arg4 + 100)]
    while idx < cd[(arg4 + cd[(arg4 + 36)] + 36)] - 1:
        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        _2504 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
        require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        _2507 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
        require idx < mem[96]
        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
            _2523 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
            _2528 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
                if address(_2523) == address(_2523):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _2996 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3131 = mem[(32 * idx + 1) + 128]
                                _3308 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3308 + 36] = 0
                                mem[_3308 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3308 + 100] = address(_3131)
                                mem[_3308 + 132] = 128
                                mem[_3308 + 164] = mem[_3308]
                                s = 0
                                while s < mem[_3308]:
                                    mem[s + _3308 + 196] = mem[s + _3308 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3308] % 32:
                                    require ext_code.size(address(_2996))
                                    call address(_2996).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3131), 128, mem[_3308 + 164 len mem[_3308] + 32]
                                else:
                                    mem[floor32(mem[_3308]) + _3308 + 196] = mem[floor32(mem[_3308]) + _3308 + -(mem[_3308] % 32) + 228 len mem[_3308] % 32]
                                    require ext_code.size(address(_2996))
                                    call address(_2996).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3131), 128, mem[_3308], mem[_3308 + 196 len floor32(mem[_3308]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3129 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3307 = mem[(32 * idx + 1) + 128]
                                _3489 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3489 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3489 + 36] = 0
                                mem[_3489 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3489 + 100] = address(_3307)
                                mem[_3489 + 132] = 128
                                mem[_3489 + 164] = mem[_3489]
                                s = 0
                                while s < mem[_3489]:
                                    mem[s + _3489 + 196] = mem[s + _3489 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3489] % 32:
                                    require ext_code.size(address(_3129))
                                    call address(_3129).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3307), 128, mem[_3489 + 164 len mem[_3489] + 32]
                                else:
                                    mem[floor32(mem[_3489]) + _3489 + 196] = mem[floor32(mem[_3489]) + _3489 + -(mem[_3489] % 32) + 228 len mem[_3489] % 32]
                                    require ext_code.size(address(_3129))
                                    call address(_3129).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3307), 128, mem[_3489], mem[_3489 + 196 len floor32(mem[_3489]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _2999 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3134 = mem[(32 * idx + 1) + 128]
                                _3310 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3310 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3310 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3310 + 68] = 0
                                mem[_3310 + 100] = address(_3134)
                                mem[_3310 + 132] = 128
                                mem[_3310 + 164] = mem[_3310]
                                s = 0
                                while s < mem[_3310]:
                                    mem[s + _3310 + 196] = mem[s + _3310 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3310] % 32:
                                    require ext_code.size(address(_2999))
                                    call address(_2999).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3134), 128, mem[_3310 + 164 len mem[_3310] + 32]
                                else:
                                    mem[floor32(mem[_3310]) + _3310 + 196] = mem[floor32(mem[_3310]) + _3310 + -(mem[_3310] % 32) + 228 len mem[_3310] % 32]
                                    require ext_code.size(address(_2999))
                                    call address(_2999).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3134), 128, mem[_3310], mem[_3310 + 196 len floor32(mem[_3310]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3132 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3309 = mem[(32 * idx + 1) + 128]
                                _3493 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3493 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3493 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3493 + 68] = 0
                                mem[_3493 + 100] = address(_3309)
                                mem[_3493 + 132] = 128
                                mem[_3493 + 164] = mem[_3493]
                                s = 0
                                while s < mem[_3493]:
                                    mem[s + _3493 + 196] = mem[s + _3493 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3493] % 32:
                                    require ext_code.size(address(_3132))
                                    call address(_3132).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3309), 128, mem[_3493 + 164 len mem[_3493] + 32]
                                else:
                                    mem[floor32(mem[_3493]) + _3493 + 196] = mem[floor32(mem[_3493]) + _3493 + -(mem[_3493] % 32) + 228 len mem[_3493] % 32]
                                    require ext_code.size(address(_3132))
                                    call address(_3132).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3309), 128, mem[_3493], mem[_3493 + 196 len floor32(mem[_3493]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _2990 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3125 = mem[(32 * idx + 1) + 128]
                                    _3304 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3304 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3304 + 36] = 0
                                    mem[_3304 + 68] = 0 / 997 * s
                                    mem[_3304 + 100] = address(_3125)
                                    mem[_3304 + 132] = 128
                                    mem[_3304 + 164] = mem[_3304]
                                    t = 0
                                    while t < mem[_3304]:
                                        mem[t + _3304 + 196] = mem[t + _3304 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3304] % 32:
                                        require ext_code.size(address(_2990))
                                        call address(_2990).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3125), 128, mem[_3304 + 164 len mem[_3304] + 32]
                                    else:
                                        mem[floor32(mem[_3304]) + _3304 + 196] = mem[floor32(mem[_3304]) + _3304 + -(mem[_3304] % 32) + 228 len mem[_3304] % 32]
                                        require ext_code.size(address(_2990))
                                        call address(_2990).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3125), 128, mem[_3304], mem[_3304 + 196 len floor32(mem[_3304]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3123 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3303 = mem[(32 * idx + 1) + 128]
                                    _3481 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3481 + 36] = 0
                                    mem[_3481 + 68] = 0 / 997 * s
                                    mem[_3481 + 100] = address(_3303)
                                    mem[_3481 + 132] = 128
                                    mem[_3481 + 164] = mem[_3481]
                                    t = 0
                                    while t < mem[_3481]:
                                        mem[t + _3481 + 196] = mem[t + _3481 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3481] % 32:
                                        require ext_code.size(address(_3123))
                                        call address(_3123).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3303), 128, mem[_3481 + 164 len mem[_3481] + 32]
                                    else:
                                        mem[floor32(mem[_3481]) + _3481 + 196] = mem[floor32(mem[_3481]) + _3481 + -(mem[_3481] % 32) + 228 len mem[_3481] % 32]
                                        require ext_code.size(address(_3123))
                                        call address(_3123).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3303), 128, mem[_3481], mem[_3481 + 196 len floor32(mem[_3481]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _2993 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3128 = mem[(32 * idx + 1) + 128]
                                    _3306 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3306 + 36] = 0 / 997 * s
                                    mem[_3306 + 68] = 0
                                    mem[_3306 + 100] = address(_3128)
                                    mem[_3306 + 132] = 128
                                    mem[_3306 + 164] = mem[_3306]
                                    t = 0
                                    while t < mem[_3306]:
                                        mem[t + _3306 + 196] = mem[t + _3306 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3306] % 32:
                                        require ext_code.size(address(_2993))
                                        call address(_2993).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3128), 128, mem[_3306 + 164 len mem[_3306] + 32]
                                    else:
                                        mem[floor32(mem[_3306]) + _3306 + 196] = mem[floor32(mem[_3306]) + _3306 + -(mem[_3306] % 32) + 228 len mem[_3306] % 32]
                                        require ext_code.size(address(_2993))
                                        call address(_2993).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3128), 128, mem[_3306], mem[_3306 + 196 len floor32(mem[_3306]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3126 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3305 = mem[(32 * idx + 1) + 128]
                                    _3485 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3485 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3485 + 36] = 0 / 997 * s
                                    mem[_3485 + 68] = 0
                                    mem[_3485 + 100] = address(_3305)
                                    mem[_3485 + 132] = 128
                                    mem[_3485 + 164] = mem[_3485]
                                    t = 0
                                    while t < mem[_3485]:
                                        mem[t + _3485 + 196] = mem[t + _3485 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3485] % 32:
                                        require ext_code.size(address(_3126))
                                        call address(_3126).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3305), 128, mem[_3485 + 164 len mem[_3485] + 32]
                                    else:
                                        mem[floor32(mem[_3485]) + _3485 + 196] = mem[floor32(mem[_3485]) + _3485 + -(mem[_3485] % 32) + 228 len mem[_3485] % 32]
                                        require ext_code.size(address(_3126))
                                        call address(_3126).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3305), 128, mem[_3485], mem[_3485 + 196 len floor32(mem[_3485]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3298 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3477 = mem[(32 * idx + 1) + 128]
                                _3732 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3732 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3732 + 36] = 0
                                mem[_3732 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3732 + 100] = address(_3477)
                                mem[_3732 + 132] = 128
                                mem[_3732 + 164] = mem[_3732]
                                t = 0
                                while t < mem[_3732]:
                                    mem[t + _3732 + 196] = mem[t + _3732 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3732] % 32:
                                    require ext_code.size(address(_3298))
                                    call address(_3298).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3477), 128, mem[_3732 + 164 len mem[_3732] + 32]
                                else:
                                    mem[floor32(mem[_3732]) + _3732 + 196] = mem[floor32(mem[_3732]) + _3732 + -(mem[_3732] % 32) + 228 len mem[_3732] % 32]
                                    require ext_code.size(address(_3298))
                                    call address(_3298).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3477), 128, mem[_3732], mem[_3732 + 196 len floor32(mem[_3732]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3475 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3731 = mem[(32 * idx + 1) + 128]
                            _3943 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3943 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3943 + 36] = 0
                            mem[_3943 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3943 + 100] = address(_3731)
                            mem[_3943 + 132] = 128
                            mem[_3943 + 164] = mem[_3943]
                            t = 0
                            while t < mem[_3943]:
                                mem[t + _3943 + 196] = mem[t + _3943 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3943] % 32:
                                require ext_code.size(address(_3475))
                                call address(_3475).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3731), 128, mem[_3943 + 164 len mem[_3943] + 32]
                            else:
                                mem[floor32(mem[_3943]) + _3943 + 196] = mem[floor32(mem[_3943]) + _3943 + -(mem[_3943] % 32) + 228 len mem[_3943] % 32]
                                require ext_code.size(address(_3475))
                                call address(_3475).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3731), 128, mem[_3943], mem[_3943 + 196 len floor32(mem[_3943]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3943]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3301 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3480 = mem[(32 * idx + 1) + 128]
                            _3734 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3734 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3734 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3734 + 68] = 0
                            mem[_3734 + 100] = address(_3480)
                            mem[_3734 + 132] = 128
                            mem[_3734 + 164] = mem[_3734]
                            t = 0
                            while t < mem[_3734]:
                                mem[t + _3734 + 196] = mem[t + _3734 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3734] % 32:
                                require ext_code.size(address(_3301))
                                call address(_3301).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3480), 128, mem[_3734 + 164 len mem[_3734] + 32]
                            else:
                                mem[floor32(mem[_3734]) + _3734 + 196] = mem[floor32(mem[_3734]) + _3734 + -(mem[_3734] % 32) + 228 len mem[_3734] % 32]
                                require ext_code.size(address(_3301))
                                call address(_3301).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3480), 128, mem[_3734], mem[_3734 + 196 len floor32(mem[_3734]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3478 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3733 = mem[(32 * idx + 1) + 128]
                        _3947 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3947 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3947 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_3947 + 68] = 0
                        mem[_3947 + 100] = address(_3733)
                        mem[_3947 + 132] = 128
                        mem[_3947 + 164] = mem[_3947]
                        t = 0
                        while t < mem[_3947]:
                            mem[t + _3947 + 196] = mem[t + _3947 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3947] % 32:
                            require ext_code.size(address(_3478))
                            call address(_3478).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3733), 128, mem[_3947 + 164 len mem[_3947] + 32]
                        else:
                            mem[floor32(mem[_3947]) + _3947 + 196] = mem[floor32(mem[_3947]) + _3947 + -(mem[_3947] % 32) + 228 len mem[_3947] % 32]
                            require ext_code.size(address(_3478))
                            call address(_3478).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3733), 128, mem[_3947], mem[_3947 + 196 len floor32(mem[_3947]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3947]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3292 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3471 = mem[(32 * idx + 1) + 128]
                                _3728 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3728 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3728 + 36] = 0
                                mem[_3728 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3728 + 100] = address(_3471)
                                mem[_3728 + 132] = 128
                                mem[_3728 + 164] = mem[_3728]
                                t = 0
                                while t < mem[_3728]:
                                    mem[t + _3728 + 196] = mem[t + _3728 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3728] % 32:
                                    require ext_code.size(address(_3292))
                                    call address(_3292).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3471), 128, mem[_3728 + 164 len mem[_3728] + 32]
                                else:
                                    mem[floor32(mem[_3728]) + _3728 + 196] = mem[floor32(mem[_3728]) + _3728 + -(mem[_3728] % 32) + 228 len mem[_3728] % 32]
                                    require ext_code.size(address(_3292))
                                    call address(_3292).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3471), 128, mem[_3728], mem[_3728 + 196 len floor32(mem[_3728]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3469 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3727 = mem[(32 * idx + 1) + 128]
                            _3935 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3935 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3935 + 36] = 0
                            mem[_3935 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3935 + 100] = address(_3727)
                            mem[_3935 + 132] = 128
                            mem[_3935 + 164] = mem[_3935]
                            t = 0
                            while t < mem[_3935]:
                                mem[t + _3935 + 196] = mem[t + _3935 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3935] % 32:
                                require ext_code.size(address(_3469))
                                call address(_3469).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3727), 128, mem[_3935 + 164 len mem[_3935] + 32]
                            else:
                                mem[floor32(mem[_3935]) + _3935 + 196] = mem[floor32(mem[_3935]) + _3935 + -(mem[_3935] % 32) + 228 len mem[_3935] % 32]
                                require ext_code.size(address(_3469))
                                call address(_3469).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3727), 128, mem[_3935], mem[_3935 + 196 len floor32(mem[_3935]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3935]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3295 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3474 = mem[(32 * idx + 1) + 128]
                            _3730 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3730 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3730 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3730 + 68] = 0
                            mem[_3730 + 100] = address(_3474)
                            mem[_3730 + 132] = 128
                            mem[_3730 + 164] = mem[_3730]
                            t = 0
                            while t < mem[_3730]:
                                mem[t + _3730 + 196] = mem[t + _3730 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3730] % 32:
                                require ext_code.size(address(_3295))
                                call address(_3295).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3474), 128, mem[_3730 + 164 len mem[_3730] + 32]
                            else:
                                mem[floor32(mem[_3730]) + _3730 + 196] = mem[floor32(mem[_3730]) + _3730 + -(mem[_3730] % 32) + 228 len mem[_3730] % 32]
                                require ext_code.size(address(_3295))
                                call address(_3295).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3474), 128, mem[_3730], mem[_3730 + 196 len floor32(mem[_3730]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3472 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3729 = mem[(32 * idx + 1) + 128]
                        _3939 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3939 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3939 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_3939 + 68] = 0
                        mem[_3939 + 100] = address(_3729)
                        mem[_3939 + 132] = 128
                        mem[_3939 + 164] = mem[_3939]
                        t = 0
                        while t < mem[_3939]:
                            mem[t + _3939 + 196] = mem[t + _3939 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3939] % 32:
                            require ext_code.size(address(_3472))
                            call address(_3472).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3729), 128, mem[_3939 + 164 len mem[_3939] + 32]
                        else:
                            mem[floor32(mem[_3939]) + _3939 + 196] = mem[floor32(mem[_3939]) + _3939 + -(mem[_3939] % 32) + 228 len mem[_3939] % 32]
                            require ext_code.size(address(_3472))
                            call address(_3472).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3729), 128, mem[_3939], mem[_3939 + 196 len floor32(mem[_3939]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3939]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3722 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3931 = mem[(32 * idx + 1) + 128]
                            _4138 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4138 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4138 + 36] = 0
                            mem[_4138 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4138 + 100] = address(_3931)
                            mem[_4138 + 132] = 128
                            mem[_4138 + 164] = mem[_4138]
                            t = 0
                            while t < mem[_4138]:
                                mem[t + _4138 + 196] = mem[t + _4138 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4138] % 32:
                                require ext_code.size(address(_3722))
                                call address(_3722).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3931), 128, mem[_4138 + 164 len mem[_4138] + 32]
                            else:
                                mem[floor32(mem[_4138]) + _4138 + 196] = mem[floor32(mem[_4138]) + _4138 + -(mem[_4138] % 32) + 228 len mem[_4138] % 32]
                                require ext_code.size(address(_3722))
                                call address(_3722).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3931), 128, mem[_4138], mem[_4138 + 196 len floor32(mem[_4138]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3929 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4137 = mem[(32 * idx + 1) + 128]
                            _4361 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4361 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4361 + 36] = 0
                            mem[_4361 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4361 + 100] = address(_4137)
                            mem[_4361 + 132] = 128
                            mem[_4361 + 164] = mem[_4361]
                            t = 0
                            while t < mem[_4361]:
                                mem[t + _4361 + 196] = mem[t + _4361 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4361] % 32:
                                require ext_code.size(address(_3929))
                                call address(_3929).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4137), 128, mem[_4361 + 164 len mem[_4361] + 32]
                            else:
                                mem[floor32(mem[_4361]) + _4361 + 196] = mem[floor32(mem[_4361]) + _4361 + -(mem[_4361] % 32) + 228 len mem[_4361] % 32]
                                require ext_code.size(address(_3929))
                                call address(_3929).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4137), 128, mem[_4361], mem[_4361 + 196 len floor32(mem[_4361]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3725 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3934 = mem[(32 * idx + 1) + 128]
                            _4140 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4140 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4140 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4140 + 68] = 0
                            mem[_4140 + 100] = address(_3934)
                            mem[_4140 + 132] = 128
                            mem[_4140 + 164] = mem[_4140]
                            t = 0
                            while t < mem[_4140]:
                                mem[t + _4140 + 196] = mem[t + _4140 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4140] % 32:
                                require ext_code.size(address(_3725))
                                call address(_3725).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3934), 128, mem[_4140 + 164 len mem[_4140] + 32]
                            else:
                                mem[floor32(mem[_4140]) + _4140 + 196] = mem[floor32(mem[_4140]) + _4140 + -(mem[_4140] % 32) + 228 len mem[_4140] % 32]
                                require ext_code.size(address(_3725))
                                call address(_3725).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3934), 128, mem[_4140], mem[_4140 + 196 len floor32(mem[_4140]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3932 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4139 = mem[(32 * idx + 1) + 128]
                            _4365 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4365 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4365 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4365 + 68] = 0
                            mem[_4365 + 100] = address(_4139)
                            mem[_4365 + 132] = 128
                            mem[_4365 + 164] = mem[_4365]
                            t = 0
                            while t < mem[_4365]:
                                mem[t + _4365 + 196] = mem[t + _4365 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4365] % 32:
                                require ext_code.size(address(_3932))
                                call address(_3932).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4139), 128, mem[_4365 + 164 len mem[_4365] + 32]
                            else:
                                mem[floor32(mem[_4365]) + _4365 + 196] = mem[floor32(mem[_4365]) + _4365 + -(mem[_4365] % 32) + 228 len mem[_4365] % 32]
                                require ext_code.size(address(_3932))
                                call address(_3932).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4139), 128, mem[_4365], mem[_4365 + 196 len floor32(mem[_4365]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3012 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3153 = mem[(32 * idx + 1) + 128]
                            _3330 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3330 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3330 + 36] = 0
                            mem[_3330 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3330 + 100] = address(_3153)
                            mem[_3330 + 132] = 128
                            mem[_3330 + 164] = mem[_3330]
                            s = 0
                            while s < mem[_3330]:
                                mem[s + _3330 + 196] = mem[s + _3330 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3330] % 32:
                                require ext_code.size(address(_3012))
                                call address(_3012).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3153), 128, mem[_3330 + 164 len mem[_3330] + 32]
                            else:
                                mem[floor32(mem[_3330]) + _3330 + 196] = mem[floor32(mem[_3330]) + _3330 + -(mem[_3330] % 32) + 228 len mem[_3330] % 32]
                                require ext_code.size(address(_3012))
                                call address(_3012).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3153), 128, mem[_3330], mem[_3330 + 196 len floor32(mem[_3330]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3151 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3329 = mem[(32 * idx + 1) + 128]
                            _3521 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3521 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3521 + 36] = 0
                            mem[_3521 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3521 + 100] = address(_3329)
                            mem[_3521 + 132] = 128
                            mem[_3521 + 164] = mem[_3521]
                            s = 0
                            while s < mem[_3521]:
                                mem[s + _3521 + 196] = mem[s + _3521 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3521] % 32:
                                require ext_code.size(address(_3151))
                                call address(_3151).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3329), 128, mem[_3521 + 164 len mem[_3521] + 32]
                            else:
                                mem[floor32(mem[_3521]) + _3521 + 196] = mem[floor32(mem[_3521]) + _3521 + -(mem[_3521] % 32) + 228 len mem[_3521] % 32]
                                require ext_code.size(address(_3151))
                                call address(_3151).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3329), 128, mem[_3521], mem[_3521 + 196 len floor32(mem[_3521]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3015 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3156 = mem[(32 * idx + 1) + 128]
                            _3332 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3332 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3332 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3332 + 68] = 0
                            mem[_3332 + 100] = address(_3156)
                            mem[_3332 + 132] = 128
                            mem[_3332 + 164] = mem[_3332]
                            s = 0
                            while s < mem[_3332]:
                                mem[s + _3332 + 196] = mem[s + _3332 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3332] % 32:
                                require ext_code.size(address(_3015))
                                call address(_3015).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3156), 128, mem[_3332 + 164 len mem[_3332] + 32]
                            else:
                                mem[floor32(mem[_3332]) + _3332 + 196] = mem[floor32(mem[_3332]) + _3332 + -(mem[_3332] % 32) + 228 len mem[_3332] % 32]
                                require ext_code.size(address(_3015))
                                call address(_3015).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3156), 128, mem[_3332], mem[_3332 + 196 len floor32(mem[_3332]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3154 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3331 = mem[(32 * idx + 1) + 128]
                            _3525 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3525 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3525 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3525 + 68] = 0
                            mem[_3525 + 100] = address(_3331)
                            mem[_3525 + 132] = 128
                            mem[_3525 + 164] = mem[_3525]
                            s = 0
                            while s < mem[_3525]:
                                mem[s + _3525 + 196] = mem[s + _3525 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3525] % 32:
                                require ext_code.size(address(_3154))
                                call address(_3154).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3331), 128, mem[_3525 + 164 len mem[_3525] + 32]
                            else:
                                mem[floor32(mem[_3525]) + _3525 + 196] = mem[floor32(mem[_3525]) + _3525 + -(mem[_3525] % 32) + 228 len mem[_3525] % 32]
                                require ext_code.size(address(_3154))
                                call address(_3154).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3331), 128, mem[_3525], mem[_3525 + 196 len floor32(mem[_3525]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3006 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3147 = mem[(32 * idx + 1) + 128]
                                _3326 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3326 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3326 + 36] = 0
                                mem[_3326 + 68] = 0 / 997 * s
                                mem[_3326 + 100] = address(_3147)
                                mem[_3326 + 132] = 128
                                mem[_3326 + 164] = mem[_3326]
                                t = 0
                                while t < mem[_3326]:
                                    mem[t + _3326 + 196] = mem[t + _3326 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3326] % 32:
                                    require ext_code.size(address(_3006))
                                    call address(_3006).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3147), 128, mem[_3326 + 164 len mem[_3326] + 32]
                                else:
                                    mem[floor32(mem[_3326]) + _3326 + 196] = mem[floor32(mem[_3326]) + _3326 + -(mem[_3326] % 32) + 228 len mem[_3326] % 32]
                                    require ext_code.size(address(_3006))
                                    call address(_3006).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3147), 128, mem[_3326], mem[_3326 + 196 len floor32(mem[_3326]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3145 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3325 = mem[(32 * idx + 1) + 128]
                                _3513 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3513 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3513 + 36] = 0
                                mem[_3513 + 68] = 0 / 997 * s
                                mem[_3513 + 100] = address(_3325)
                                mem[_3513 + 132] = 128
                                mem[_3513 + 164] = mem[_3513]
                                t = 0
                                while t < mem[_3513]:
                                    mem[t + _3513 + 196] = mem[t + _3513 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3513] % 32:
                                    require ext_code.size(address(_3145))
                                    call address(_3145).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3325), 128, mem[_3513 + 164 len mem[_3513] + 32]
                                else:
                                    mem[floor32(mem[_3513]) + _3513 + 196] = mem[floor32(mem[_3513]) + _3513 + -(mem[_3513] % 32) + 228 len mem[_3513] % 32]
                                    require ext_code.size(address(_3145))
                                    call address(_3145).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3325), 128, mem[_3513], mem[_3513 + 196 len floor32(mem[_3513]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3009 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3150 = mem[(32 * idx + 1) + 128]
                                _3328 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3328 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3328 + 36] = 0 / 997 * s
                                mem[_3328 + 68] = 0
                                mem[_3328 + 100] = address(_3150)
                                mem[_3328 + 132] = 128
                                mem[_3328 + 164] = mem[_3328]
                                t = 0
                                while t < mem[_3328]:
                                    mem[t + _3328 + 196] = mem[t + _3328 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3328] % 32:
                                    require ext_code.size(address(_3009))
                                    call address(_3009).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3150), 128, mem[_3328 + 164 len mem[_3328] + 32]
                                else:
                                    mem[floor32(mem[_3328]) + _3328 + 196] = mem[floor32(mem[_3328]) + _3328 + -(mem[_3328] % 32) + 228 len mem[_3328] % 32]
                                    require ext_code.size(address(_3009))
                                    call address(_3009).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3150), 128, mem[_3328], mem[_3328 + 196 len floor32(mem[_3328]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3148 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3327 = mem[(32 * idx + 1) + 128]
                                _3517 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3517 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3517 + 36] = 0 / 997 * s
                                mem[_3517 + 68] = 0
                                mem[_3517 + 100] = address(_3327)
                                mem[_3517 + 132] = 128
                                mem[_3517 + 164] = mem[_3517]
                                t = 0
                                while t < mem[_3517]:
                                    mem[t + _3517 + 196] = mem[t + _3517 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3517] % 32:
                                    require ext_code.size(address(_3148))
                                    call address(_3148).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3327), 128, mem[_3517 + 164 len mem[_3517] + 32]
                                else:
                                    mem[floor32(mem[_3517]) + _3517 + 196] = mem[floor32(mem[_3517]) + _3517 + -(mem[_3517] % 32) + 228 len mem[_3517] % 32]
                                    require ext_code.size(address(_3148))
                                    call address(_3148).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3327), 128, mem[_3517], mem[_3517 + 196 len floor32(mem[_3517]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3320 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3509 = mem[(32 * idx + 1) + 128]
                            _3758 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3758 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3758 + 36] = 0
                            mem[_3758 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3758 + 100] = address(_3509)
                            mem[_3758 + 132] = 128
                            mem[_3758 + 164] = mem[_3758]
                            t = 0
                            while t < mem[_3758]:
                                mem[t + _3758 + 196] = mem[t + _3758 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3758] % 32:
                                require ext_code.size(address(_3320))
                                call address(_3320).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3509), 128, mem[_3758 + 164 len mem[_3758] + 32]
                            else:
                                mem[floor32(mem[_3758]) + _3758 + 196] = mem[floor32(mem[_3758]) + _3758 + -(mem[_3758] % 32) + 228 len mem[_3758] % 32]
                                require ext_code.size(address(_3320))
                                call address(_3320).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3509), 128, mem[_3758], mem[_3758 + 196 len floor32(mem[_3758]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3507 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3757 = mem[(32 * idx + 1) + 128]
                        _3969 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3969 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3969 + 36] = 0
                        mem[_3969 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3969 + 100] = address(_3757)
                        mem[_3969 + 132] = 128
                        mem[_3969 + 164] = mem[_3969]
                        t = 0
                        while t < mem[_3969]:
                            mem[t + _3969 + 196] = mem[t + _3969 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3969] % 32:
                            require ext_code.size(address(_3507))
                            call address(_3507).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3757), 128, mem[_3969 + 164 len mem[_3969] + 32]
                        else:
                            mem[floor32(mem[_3969]) + _3969 + 196] = mem[floor32(mem[_3969]) + _3969 + -(mem[_3969] % 32) + 228 len mem[_3969] % 32]
                            require ext_code.size(address(_3507))
                            call address(_3507).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3757), 128, mem[_3969], mem[_3969 + 196 len floor32(mem[_3969]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3969]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3323 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3512 = mem[(32 * idx + 1) + 128]
                        _3760 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3760 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3760 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3760 + 68] = 0
                        mem[_3760 + 100] = address(_3512)
                        mem[_3760 + 132] = 128
                        mem[_3760 + 164] = mem[_3760]
                        t = 0
                        while t < mem[_3760]:
                            mem[t + _3760 + 196] = mem[t + _3760 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3760] % 32:
                            require ext_code.size(address(_3323))
                            call address(_3323).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3512), 128, mem[_3760 + 164 len mem[_3760] + 32]
                        else:
                            mem[floor32(mem[_3760]) + _3760 + 196] = mem[floor32(mem[_3760]) + _3760 + -(mem[_3760] % 32) + 228 len mem[_3760] % 32]
                            require ext_code.size(address(_3323))
                            call address(_3323).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3512), 128, mem[_3760], mem[_3760 + 196 len floor32(mem[_3760]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3510 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3759 = mem[(32 * idx + 1) + 128]
                    _3973 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_3973 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3973 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_3973 + 68] = 0
                    mem[_3973 + 100] = address(_3759)
                    mem[_3973 + 132] = 128
                    mem[_3973 + 164] = mem[_3973]
                    t = 0
                    while t < mem[_3973]:
                        mem[t + _3973 + 196] = mem[t + _3973 + 32]
                        t = t + 32
                        continue 
                    if not mem[_3973] % 32:
                        require ext_code.size(address(_3510))
                        call address(_3510).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3759), 128, mem[_3973 + 164 len mem[_3973] + 32]
                    else:
                        mem[floor32(mem[_3973]) + _3973 + 196] = mem[floor32(mem[_3973]) + _3973 + -(mem[_3973] % 32) + 228 len mem[_3973] % 32]
                        require ext_code.size(address(_3510))
                        call address(_3510).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3759), 128, mem[_3973], mem[_3973 + 196 len floor32(mem[_3973]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_3973]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3314 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3503 = mem[(32 * idx + 1) + 128]
                            _3754 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3754 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3754 + 36] = 0
                            mem[_3754 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3754 + 100] = address(_3503)
                            mem[_3754 + 132] = 128
                            mem[_3754 + 164] = mem[_3754]
                            t = 0
                            while t < mem[_3754]:
                                mem[t + _3754 + 196] = mem[t + _3754 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3754] % 32:
                                require ext_code.size(address(_3314))
                                call address(_3314).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3503), 128, mem[_3754 + 164 len mem[_3754] + 32]
                            else:
                                mem[floor32(mem[_3754]) + _3754 + 196] = mem[floor32(mem[_3754]) + _3754 + -(mem[_3754] % 32) + 228 len mem[_3754] % 32]
                                require ext_code.size(address(_3314))
                                call address(_3314).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3503), 128, mem[_3754], mem[_3754 + 196 len floor32(mem[_3754]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3501 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3753 = mem[(32 * idx + 1) + 128]
                        _3961 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3961 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3961 + 36] = 0
                        mem[_3961 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3961 + 100] = address(_3753)
                        mem[_3961 + 132] = 128
                        mem[_3961 + 164] = mem[_3961]
                        t = 0
                        while t < mem[_3961]:
                            mem[t + _3961 + 196] = mem[t + _3961 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3961] % 32:
                            require ext_code.size(address(_3501))
                            call address(_3501).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3753), 128, mem[_3961 + 164 len mem[_3961] + 32]
                        else:
                            mem[floor32(mem[_3961]) + _3961 + 196] = mem[floor32(mem[_3961]) + _3961 + -(mem[_3961] % 32) + 228 len mem[_3961] % 32]
                            require ext_code.size(address(_3501))
                            call address(_3501).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3753), 128, mem[_3961], mem[_3961 + 196 len floor32(mem[_3961]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3961]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3317 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3506 = mem[(32 * idx + 1) + 128]
                        _3756 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3756 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3756 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3756 + 68] = 0
                        mem[_3756 + 100] = address(_3506)
                        mem[_3756 + 132] = 128
                        mem[_3756 + 164] = mem[_3756]
                        t = 0
                        while t < mem[_3756]:
                            mem[t + _3756 + 196] = mem[t + _3756 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3756] % 32:
                            require ext_code.size(address(_3317))
                            call address(_3317).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3506), 128, mem[_3756 + 164 len mem[_3756] + 32]
                        else:
                            mem[floor32(mem[_3756]) + _3756 + 196] = mem[floor32(mem[_3756]) + _3756 + -(mem[_3756] % 32) + 228 len mem[_3756] % 32]
                            require ext_code.size(address(_3317))
                            call address(_3317).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3506), 128, mem[_3756], mem[_3756 + 196 len floor32(mem[_3756]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3504 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3755 = mem[(32 * idx + 1) + 128]
                    _3965 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_3965 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_3965 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_3965 + 68] = 0
                    mem[_3965 + 100] = address(_3755)
                    mem[_3965 + 132] = 128
                    mem[_3965 + 164] = mem[_3965]
                    t = 0
                    while t < mem[_3965]:
                        mem[t + _3965 + 196] = mem[t + _3965 + 32]
                        t = t + 32
                        continue 
                    if not mem[_3965] % 32:
                        require ext_code.size(address(_3504))
                        call address(_3504).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3755), 128, mem[_3965 + 164 len mem[_3965] + 32]
                    else:
                        mem[floor32(mem[_3965]) + _3965 + 196] = mem[floor32(mem[_3965]) + _3965 + -(mem[_3965] % 32) + 228 len mem[_3965] % 32]
                        require ext_code.size(address(_3504))
                        call address(_3504).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3755), 128, mem[_3965], mem[_3965 + 196 len floor32(mem[_3965]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_3965]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3748 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3957 = mem[(32 * idx + 1) + 128]
                        _4166 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4166 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4166 + 36] = 0
                        mem[_4166 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4166 + 100] = address(_3957)
                        mem[_4166 + 132] = 128
                        mem[_4166 + 164] = mem[_4166]
                        t = 0
                        while t < mem[_4166]:
                            mem[t + _4166 + 196] = mem[t + _4166 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4166] % 32:
                            require ext_code.size(address(_3748))
                            call address(_3748).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3957), 128, mem[_4166 + 164 len mem[_4166] + 32]
                        else:
                            mem[floor32(mem[_4166]) + _4166 + 196] = mem[floor32(mem[_4166]) + _4166 + -(mem[_4166] % 32) + 228 len mem[_4166] % 32]
                            require ext_code.size(address(_3748))
                            call address(_3748).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3957), 128, mem[_4166], mem[_4166 + 196 len floor32(mem[_4166]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3955 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4165 = mem[(32 * idx + 1) + 128]
                        _4385 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4385 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4385 + 36] = 0
                        mem[_4385 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4385 + 100] = address(_4165)
                        mem[_4385 + 132] = 128
                        mem[_4385 + 164] = mem[_4385]
                        t = 0
                        while t < mem[_4385]:
                            mem[t + _4385 + 196] = mem[t + _4385 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4385] % 32:
                            require ext_code.size(address(_3955))
                            call address(_3955).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4165), 128, mem[_4385 + 164 len mem[_4385] + 32]
                        else:
                            mem[floor32(mem[_4385]) + _4385 + 196] = mem[floor32(mem[_4385]) + _4385 + -(mem[_4385] % 32) + 228 len mem[_4385] % 32]
                            require ext_code.size(address(_3955))
                            call address(_3955).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4165), 128, mem[_4385], mem[_4385 + 196 len floor32(mem[_4385]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3751 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3960 = mem[(32 * idx + 1) + 128]
                        _4168 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4168 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4168 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4168 + 68] = 0
                        mem[_4168 + 100] = address(_3960)
                        mem[_4168 + 132] = 128
                        mem[_4168 + 164] = mem[_4168]
                        t = 0
                        while t < mem[_4168]:
                            mem[t + _4168 + 196] = mem[t + _4168 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4168] % 32:
                            require ext_code.size(address(_3751))
                            call address(_3751).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3960), 128, mem[_4168 + 164 len mem[_4168] + 32]
                        else:
                            mem[floor32(mem[_4168]) + _4168 + 196] = mem[floor32(mem[_4168]) + _4168 + -(mem[_4168] % 32) + 228 len mem[_4168] % 32]
                            require ext_code.size(address(_3751))
                            call address(_3751).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3960), 128, mem[_4168], mem[_4168 + 196 len floor32(mem[_4168]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3958 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4167 = mem[(32 * idx + 1) + 128]
                        _4389 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4389 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4389 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4389 + 68] = 0
                        mem[_4389 + 100] = address(_4167)
                        mem[_4389 + 132] = 128
                        mem[_4389 + 164] = mem[_4389]
                        t = 0
                        while t < mem[_4389]:
                            mem[t + _4389 + 196] = mem[t + _4389 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4389] % 32:
                            require ext_code.size(address(_3958))
                            call address(_3958).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4167), 128, mem[_4389 + 164 len mem[_4389] + 32]
                        else:
                            mem[floor32(mem[_4389]) + _4389 + 196] = mem[floor32(mem[_4389]) + _4389 + -(mem[_4389] % 32) + 228 len mem[_4389] % 32]
                            require ext_code.size(address(_3958))
                            call address(_3958).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4167), 128, mem[_4389], mem[_4389 + 196 len floor32(mem[_4389]) + 32]
            else:
                if address(_2528) == address(_2523):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3028 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3175 = mem[(32 * idx + 1) + 128]
                                _3352 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3352 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3352 + 36] = 0
                                mem[_3352 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3352 + 100] = address(_3175)
                                mem[_3352 + 132] = 128
                                mem[_3352 + 164] = mem[_3352]
                                s = 0
                                while s < mem[_3352]:
                                    mem[s + _3352 + 196] = mem[s + _3352 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3352] % 32:
                                    require ext_code.size(address(_3028))
                                    call address(_3028).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3175), 128, mem[_3352 + 164 len mem[_3352] + 32]
                                else:
                                    mem[floor32(mem[_3352]) + _3352 + 196] = mem[floor32(mem[_3352]) + _3352 + -(mem[_3352] % 32) + 228 len mem[_3352] % 32]
                                    require ext_code.size(address(_3028))
                                    call address(_3028).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3175), 128, mem[_3352], mem[_3352 + 196 len floor32(mem[_3352]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3173 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3351 = mem[(32 * idx + 1) + 128]
                                _3553 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3553 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3553 + 36] = 0
                                mem[_3553 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3553 + 100] = address(_3351)
                                mem[_3553 + 132] = 128
                                mem[_3553 + 164] = mem[_3553]
                                s = 0
                                while s < mem[_3553]:
                                    mem[s + _3553 + 196] = mem[s + _3553 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3553] % 32:
                                    require ext_code.size(address(_3173))
                                    call address(_3173).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3351), 128, mem[_3553 + 164 len mem[_3553] + 32]
                                else:
                                    mem[floor32(mem[_3553]) + _3553 + 196] = mem[floor32(mem[_3553]) + _3553 + -(mem[_3553] % 32) + 228 len mem[_3553] % 32]
                                    require ext_code.size(address(_3173))
                                    call address(_3173).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3351), 128, mem[_3553], mem[_3553 + 196 len floor32(mem[_3553]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3031 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3178 = mem[(32 * idx + 1) + 128]
                                _3354 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3354 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3354 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3354 + 68] = 0
                                mem[_3354 + 100] = address(_3178)
                                mem[_3354 + 132] = 128
                                mem[_3354 + 164] = mem[_3354]
                                s = 0
                                while s < mem[_3354]:
                                    mem[s + _3354 + 196] = mem[s + _3354 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3354] % 32:
                                    require ext_code.size(address(_3031))
                                    call address(_3031).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3178), 128, mem[_3354 + 164 len mem[_3354] + 32]
                                else:
                                    mem[floor32(mem[_3354]) + _3354 + 196] = mem[floor32(mem[_3354]) + _3354 + -(mem[_3354] % 32) + 228 len mem[_3354] % 32]
                                    require ext_code.size(address(_3031))
                                    call address(_3031).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3178), 128, mem[_3354], mem[_3354 + 196 len floor32(mem[_3354]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3176 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3353 = mem[(32 * idx + 1) + 128]
                                _3557 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3557 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3557 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3557 + 68] = 0
                                mem[_3557 + 100] = address(_3353)
                                mem[_3557 + 132] = 128
                                mem[_3557 + 164] = mem[_3557]
                                s = 0
                                while s < mem[_3557]:
                                    mem[s + _3557 + 196] = mem[s + _3557 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3557] % 32:
                                    require ext_code.size(address(_3176))
                                    call address(_3176).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3353), 128, mem[_3557 + 164 len mem[_3557] + 32]
                                else:
                                    mem[floor32(mem[_3557]) + _3557 + 196] = mem[floor32(mem[_3557]) + _3557 + -(mem[_3557] % 32) + 228 len mem[_3557] % 32]
                                    require ext_code.size(address(_3176))
                                    call address(_3176).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3353), 128, mem[_3557], mem[_3557 + 196 len floor32(mem[_3557]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3022 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3169 = mem[(32 * idx + 1) + 128]
                                    _3348 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3348 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3348 + 36] = 0
                                    mem[_3348 + 68] = 0 / 997 * s
                                    mem[_3348 + 100] = address(_3169)
                                    mem[_3348 + 132] = 128
                                    mem[_3348 + 164] = mem[_3348]
                                    t = 0
                                    while t < mem[_3348]:
                                        mem[t + _3348 + 196] = mem[t + _3348 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3348] % 32:
                                        require ext_code.size(address(_3022))
                                        call address(_3022).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3169), 128, mem[_3348 + 164 len mem[_3348] + 32]
                                    else:
                                        mem[floor32(mem[_3348]) + _3348 + 196] = mem[floor32(mem[_3348]) + _3348 + -(mem[_3348] % 32) + 228 len mem[_3348] % 32]
                                        require ext_code.size(address(_3022))
                                        call address(_3022).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3169), 128, mem[_3348], mem[_3348 + 196 len floor32(mem[_3348]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3167 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3347 = mem[(32 * idx + 1) + 128]
                                    _3545 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3545 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3545 + 36] = 0
                                    mem[_3545 + 68] = 0 / 997 * s
                                    mem[_3545 + 100] = address(_3347)
                                    mem[_3545 + 132] = 128
                                    mem[_3545 + 164] = mem[_3545]
                                    t = 0
                                    while t < mem[_3545]:
                                        mem[t + _3545 + 196] = mem[t + _3545 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3545] % 32:
                                        require ext_code.size(address(_3167))
                                        call address(_3167).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3347), 128, mem[_3545 + 164 len mem[_3545] + 32]
                                    else:
                                        mem[floor32(mem[_3545]) + _3545 + 196] = mem[floor32(mem[_3545]) + _3545 + -(mem[_3545] % 32) + 228 len mem[_3545] % 32]
                                        require ext_code.size(address(_3167))
                                        call address(_3167).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3347), 128, mem[_3545], mem[_3545 + 196 len floor32(mem[_3545]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3025 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3172 = mem[(32 * idx + 1) + 128]
                                    _3350 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3350 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3350 + 36] = 0 / 997 * s
                                    mem[_3350 + 68] = 0
                                    mem[_3350 + 100] = address(_3172)
                                    mem[_3350 + 132] = 128
                                    mem[_3350 + 164] = mem[_3350]
                                    t = 0
                                    while t < mem[_3350]:
                                        mem[t + _3350 + 196] = mem[t + _3350 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3350] % 32:
                                        require ext_code.size(address(_3025))
                                        call address(_3025).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3172), 128, mem[_3350 + 164 len mem[_3350] + 32]
                                    else:
                                        mem[floor32(mem[_3350]) + _3350 + 196] = mem[floor32(mem[_3350]) + _3350 + -(mem[_3350] % 32) + 228 len mem[_3350] % 32]
                                        require ext_code.size(address(_3025))
                                        call address(_3025).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3172), 128, mem[_3350], mem[_3350 + 196 len floor32(mem[_3350]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3170 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3349 = mem[(32 * idx + 1) + 128]
                                    _3549 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3549 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3549 + 36] = 0 / 997 * s
                                    mem[_3549 + 68] = 0
                                    mem[_3549 + 100] = address(_3349)
                                    mem[_3549 + 132] = 128
                                    mem[_3549 + 164] = mem[_3549]
                                    t = 0
                                    while t < mem[_3549]:
                                        mem[t + _3549 + 196] = mem[t + _3549 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3549] % 32:
                                        require ext_code.size(address(_3170))
                                        call address(_3170).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3349), 128, mem[_3549 + 164 len mem[_3549] + 32]
                                    else:
                                        mem[floor32(mem[_3549]) + _3549 + 196] = mem[floor32(mem[_3549]) + _3549 + -(mem[_3549] % 32) + 228 len mem[_3549] % 32]
                                        require ext_code.size(address(_3170))
                                        call address(_3170).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3349), 128, mem[_3549], mem[_3549 + 196 len floor32(mem[_3549]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3342 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3541 = mem[(32 * idx + 1) + 128]
                                _3784 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3784 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3784 + 36] = 0
                                mem[_3784 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3784 + 100] = address(_3541)
                                mem[_3784 + 132] = 128
                                mem[_3784 + 164] = mem[_3784]
                                t = 0
                                while t < mem[_3784]:
                                    mem[t + _3784 + 196] = mem[t + _3784 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3784] % 32:
                                    require ext_code.size(address(_3342))
                                    call address(_3342).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3541), 128, mem[_3784 + 164 len mem[_3784] + 32]
                                else:
                                    mem[floor32(mem[_3784]) + _3784 + 196] = mem[floor32(mem[_3784]) + _3784 + -(mem[_3784] % 32) + 228 len mem[_3784] % 32]
                                    require ext_code.size(address(_3342))
                                    call address(_3342).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3541), 128, mem[_3784], mem[_3784 + 196 len floor32(mem[_3784]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3539 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3783 = mem[(32 * idx + 1) + 128]
                            _3995 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3995 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3995 + 36] = 0
                            mem[_3995 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3995 + 100] = address(_3783)
                            mem[_3995 + 132] = 128
                            mem[_3995 + 164] = mem[_3995]
                            t = 0
                            while t < mem[_3995]:
                                mem[t + _3995 + 196] = mem[t + _3995 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3995] % 32:
                                require ext_code.size(address(_3539))
                                call address(_3539).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3783), 128, mem[_3995 + 164 len mem[_3995] + 32]
                            else:
                                mem[floor32(mem[_3995]) + _3995 + 196] = mem[floor32(mem[_3995]) + _3995 + -(mem[_3995] % 32) + 228 len mem[_3995] % 32]
                                require ext_code.size(address(_3539))
                                call address(_3539).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3783), 128, mem[_3995], mem[_3995 + 196 len floor32(mem[_3995]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3995]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3345 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3544 = mem[(32 * idx + 1) + 128]
                            _3786 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3786 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3786 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3786 + 68] = 0
                            mem[_3786 + 100] = address(_3544)
                            mem[_3786 + 132] = 128
                            mem[_3786 + 164] = mem[_3786]
                            t = 0
                            while t < mem[_3786]:
                                mem[t + _3786 + 196] = mem[t + _3786 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3786] % 32:
                                require ext_code.size(address(_3345))
                                call address(_3345).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3544), 128, mem[_3786 + 164 len mem[_3786] + 32]
                            else:
                                mem[floor32(mem[_3786]) + _3786 + 196] = mem[floor32(mem[_3786]) + _3786 + -(mem[_3786] % 32) + 228 len mem[_3786] % 32]
                                require ext_code.size(address(_3345))
                                call address(_3345).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3544), 128, mem[_3786], mem[_3786 + 196 len floor32(mem[_3786]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3542 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3785 = mem[(32 * idx + 1) + 128]
                        _3999 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3999 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3999 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_3999 + 68] = 0
                        mem[_3999 + 100] = address(_3785)
                        mem[_3999 + 132] = 128
                        mem[_3999 + 164] = mem[_3999]
                        t = 0
                        while t < mem[_3999]:
                            mem[t + _3999 + 196] = mem[t + _3999 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3999] % 32:
                            require ext_code.size(address(_3542))
                            call address(_3542).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3785), 128, mem[_3999 + 164 len mem[_3999] + 32]
                        else:
                            mem[floor32(mem[_3999]) + _3999 + 196] = mem[floor32(mem[_3999]) + _3999 + -(mem[_3999] % 32) + 228 len mem[_3999] % 32]
                            require ext_code.size(address(_3542))
                            call address(_3542).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3785), 128, mem[_3999], mem[_3999 + 196 len floor32(mem[_3999]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3999]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3336 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3535 = mem[(32 * idx + 1) + 128]
                                _3780 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3780 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3780 + 36] = 0
                                mem[_3780 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3780 + 100] = address(_3535)
                                mem[_3780 + 132] = 128
                                mem[_3780 + 164] = mem[_3780]
                                t = 0
                                while t < mem[_3780]:
                                    mem[t + _3780 + 196] = mem[t + _3780 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3780] % 32:
                                    require ext_code.size(address(_3336))
                                    call address(_3336).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3535), 128, mem[_3780 + 164 len mem[_3780] + 32]
                                else:
                                    mem[floor32(mem[_3780]) + _3780 + 196] = mem[floor32(mem[_3780]) + _3780 + -(mem[_3780] % 32) + 228 len mem[_3780] % 32]
                                    require ext_code.size(address(_3336))
                                    call address(_3336).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3535), 128, mem[_3780], mem[_3780 + 196 len floor32(mem[_3780]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3533 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3779 = mem[(32 * idx + 1) + 128]
                            _3987 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3987 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3987 + 36] = 0
                            mem[_3987 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3987 + 100] = address(_3779)
                            mem[_3987 + 132] = 128
                            mem[_3987 + 164] = mem[_3987]
                            t = 0
                            while t < mem[_3987]:
                                mem[t + _3987 + 196] = mem[t + _3987 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3987] % 32:
                                require ext_code.size(address(_3533))
                                call address(_3533).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3779), 128, mem[_3987 + 164 len mem[_3987] + 32]
                            else:
                                mem[floor32(mem[_3987]) + _3987 + 196] = mem[floor32(mem[_3987]) + _3987 + -(mem[_3987] % 32) + 228 len mem[_3987] % 32]
                                require ext_code.size(address(_3533))
                                call address(_3533).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3779), 128, mem[_3987], mem[_3987 + 196 len floor32(mem[_3987]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_3987]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3339 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3538 = mem[(32 * idx + 1) + 128]
                            _3782 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3782 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3782 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3782 + 68] = 0
                            mem[_3782 + 100] = address(_3538)
                            mem[_3782 + 132] = 128
                            mem[_3782 + 164] = mem[_3782]
                            t = 0
                            while t < mem[_3782]:
                                mem[t + _3782 + 196] = mem[t + _3782 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3782] % 32:
                                require ext_code.size(address(_3339))
                                call address(_3339).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3538), 128, mem[_3782 + 164 len mem[_3782] + 32]
                            else:
                                mem[floor32(mem[_3782]) + _3782 + 196] = mem[floor32(mem[_3782]) + _3782 + -(mem[_3782] % 32) + 228 len mem[_3782] % 32]
                                require ext_code.size(address(_3339))
                                call address(_3339).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3538), 128, mem[_3782], mem[_3782 + 196 len floor32(mem[_3782]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3536 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3781 = mem[(32 * idx + 1) + 128]
                        _3991 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3991 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3991 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_3991 + 68] = 0
                        mem[_3991 + 100] = address(_3781)
                        mem[_3991 + 132] = 128
                        mem[_3991 + 164] = mem[_3991]
                        t = 0
                        while t < mem[_3991]:
                            mem[t + _3991 + 196] = mem[t + _3991 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3991] % 32:
                            require ext_code.size(address(_3536))
                            call address(_3536).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3781), 128, mem[_3991 + 164 len mem[_3991] + 32]
                        else:
                            mem[floor32(mem[_3991]) + _3991 + 196] = mem[floor32(mem[_3991]) + _3991 + -(mem[_3991] % 32) + 228 len mem[_3991] % 32]
                            require ext_code.size(address(_3536))
                            call address(_3536).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3781), 128, mem[_3991], mem[_3991 + 196 len floor32(mem[_3991]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_3991]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3774 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3983 = mem[(32 * idx + 1) + 128]
                            _4194 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4194 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4194 + 36] = 0
                            mem[_4194 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4194 + 100] = address(_3983)
                            mem[_4194 + 132] = 128
                            mem[_4194 + 164] = mem[_4194]
                            t = 0
                            while t < mem[_4194]:
                                mem[t + _4194 + 196] = mem[t + _4194 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4194] % 32:
                                require ext_code.size(address(_3774))
                                call address(_3774).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3983), 128, mem[_4194 + 164 len mem[_4194] + 32]
                            else:
                                mem[floor32(mem[_4194]) + _4194 + 196] = mem[floor32(mem[_4194]) + _4194 + -(mem[_4194] % 32) + 228 len mem[_4194] % 32]
                                require ext_code.size(address(_3774))
                                call address(_3774).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3983), 128, mem[_4194], mem[_4194 + 196 len floor32(mem[_4194]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3981 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4193 = mem[(32 * idx + 1) + 128]
                            _4409 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4409 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4409 + 36] = 0
                            mem[_4409 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4409 + 100] = address(_4193)
                            mem[_4409 + 132] = 128
                            mem[_4409 + 164] = mem[_4409]
                            t = 0
                            while t < mem[_4409]:
                                mem[t + _4409 + 196] = mem[t + _4409 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4409] % 32:
                                require ext_code.size(address(_3981))
                                call address(_3981).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4193), 128, mem[_4409 + 164 len mem[_4409] + 32]
                            else:
                                mem[floor32(mem[_4409]) + _4409 + 196] = mem[floor32(mem[_4409]) + _4409 + -(mem[_4409] % 32) + 228 len mem[_4409] % 32]
                                require ext_code.size(address(_3981))
                                call address(_3981).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4193), 128, mem[_4409], mem[_4409 + 196 len floor32(mem[_4409]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3777 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3986 = mem[(32 * idx + 1) + 128]
                            _4196 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4196 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4196 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4196 + 68] = 0
                            mem[_4196 + 100] = address(_3986)
                            mem[_4196 + 132] = 128
                            mem[_4196 + 164] = mem[_4196]
                            t = 0
                            while t < mem[_4196]:
                                mem[t + _4196 + 196] = mem[t + _4196 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4196] % 32:
                                require ext_code.size(address(_3777))
                                call address(_3777).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3986), 128, mem[_4196 + 164 len mem[_4196] + 32]
                            else:
                                mem[floor32(mem[_4196]) + _4196 + 196] = mem[floor32(mem[_4196]) + _4196 + -(mem[_4196] % 32) + 228 len mem[_4196] % 32]
                                require ext_code.size(address(_3777))
                                call address(_3777).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3986), 128, mem[_4196], mem[_4196 + 196 len floor32(mem[_4196]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3984 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4195 = mem[(32 * idx + 1) + 128]
                            _4413 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4413 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4413 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4413 + 68] = 0
                            mem[_4413 + 100] = address(_4195)
                            mem[_4413 + 132] = 128
                            mem[_4413 + 164] = mem[_4413]
                            t = 0
                            while t < mem[_4413]:
                                mem[t + _4413 + 196] = mem[t + _4413 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4413] % 32:
                                require ext_code.size(address(_3984))
                                call address(_3984).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4195), 128, mem[_4413 + 164 len mem[_4413] + 32]
                            else:
                                mem[floor32(mem[_4413]) + _4413 + 196] = mem[floor32(mem[_4413]) + _4413 + -(mem[_4413] % 32) + 228 len mem[_4413] % 32]
                                require ext_code.size(address(_3984))
                                call address(_3984).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4195), 128, mem[_4413], mem[_4413 + 196 len floor32(mem[_4413]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3044 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3197 = mem[(32 * idx + 1) + 128]
                            _3374 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3374 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3374 + 36] = 0
                            mem[_3374 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3374 + 100] = address(_3197)
                            mem[_3374 + 132] = 128
                            mem[_3374 + 164] = mem[_3374]
                            s = 0
                            while s < mem[_3374]:
                                mem[s + _3374 + 196] = mem[s + _3374 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3374] % 32:
                                require ext_code.size(address(_3044))
                                call address(_3044).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3197), 128, mem[_3374 + 164 len mem[_3374] + 32]
                            else:
                                mem[floor32(mem[_3374]) + _3374 + 196] = mem[floor32(mem[_3374]) + _3374 + -(mem[_3374] % 32) + 228 len mem[_3374] % 32]
                                require ext_code.size(address(_3044))
                                call address(_3044).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3197), 128, mem[_3374], mem[_3374 + 196 len floor32(mem[_3374]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3195 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3373 = mem[(32 * idx + 1) + 128]
                            _3585 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3585 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3585 + 36] = 0
                            mem[_3585 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3585 + 100] = address(_3373)
                            mem[_3585 + 132] = 128
                            mem[_3585 + 164] = mem[_3585]
                            s = 0
                            while s < mem[_3585]:
                                mem[s + _3585 + 196] = mem[s + _3585 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3585] % 32:
                                require ext_code.size(address(_3195))
                                call address(_3195).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3373), 128, mem[_3585 + 164 len mem[_3585] + 32]
                            else:
                                mem[floor32(mem[_3585]) + _3585 + 196] = mem[floor32(mem[_3585]) + _3585 + -(mem[_3585] % 32) + 228 len mem[_3585] % 32]
                                require ext_code.size(address(_3195))
                                call address(_3195).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3373), 128, mem[_3585], mem[_3585 + 196 len floor32(mem[_3585]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3047 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3200 = mem[(32 * idx + 1) + 128]
                            _3376 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3376 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3376 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3376 + 68] = 0
                            mem[_3376 + 100] = address(_3200)
                            mem[_3376 + 132] = 128
                            mem[_3376 + 164] = mem[_3376]
                            s = 0
                            while s < mem[_3376]:
                                mem[s + _3376 + 196] = mem[s + _3376 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3376] % 32:
                                require ext_code.size(address(_3047))
                                call address(_3047).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3200), 128, mem[_3376 + 164 len mem[_3376] + 32]
                            else:
                                mem[floor32(mem[_3376]) + _3376 + 196] = mem[floor32(mem[_3376]) + _3376 + -(mem[_3376] % 32) + 228 len mem[_3376] % 32]
                                require ext_code.size(address(_3047))
                                call address(_3047).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3200), 128, mem[_3376], mem[_3376 + 196 len floor32(mem[_3376]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3198 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3375 = mem[(32 * idx + 1) + 128]
                            _3589 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3589 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3589 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3589 + 68] = 0
                            mem[_3589 + 100] = address(_3375)
                            mem[_3589 + 132] = 128
                            mem[_3589 + 164] = mem[_3589]
                            s = 0
                            while s < mem[_3589]:
                                mem[s + _3589 + 196] = mem[s + _3589 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3589] % 32:
                                require ext_code.size(address(_3198))
                                call address(_3198).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3375), 128, mem[_3589 + 164 len mem[_3589] + 32]
                            else:
                                mem[floor32(mem[_3589]) + _3589 + 196] = mem[floor32(mem[_3589]) + _3589 + -(mem[_3589] % 32) + 228 len mem[_3589] % 32]
                                require ext_code.size(address(_3198))
                                call address(_3198).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3375), 128, mem[_3589], mem[_3589 + 196 len floor32(mem[_3589]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3038 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3191 = mem[(32 * idx + 1) + 128]
                                _3370 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3370 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3370 + 36] = 0
                                mem[_3370 + 68] = 0 / 997 * s
                                mem[_3370 + 100] = address(_3191)
                                mem[_3370 + 132] = 128
                                mem[_3370 + 164] = mem[_3370]
                                t = 0
                                while t < mem[_3370]:
                                    mem[t + _3370 + 196] = mem[t + _3370 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3370] % 32:
                                    require ext_code.size(address(_3038))
                                    call address(_3038).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3191), 128, mem[_3370 + 164 len mem[_3370] + 32]
                                else:
                                    mem[floor32(mem[_3370]) + _3370 + 196] = mem[floor32(mem[_3370]) + _3370 + -(mem[_3370] % 32) + 228 len mem[_3370] % 32]
                                    require ext_code.size(address(_3038))
                                    call address(_3038).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3191), 128, mem[_3370], mem[_3370 + 196 len floor32(mem[_3370]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3189 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3369 = mem[(32 * idx + 1) + 128]
                                _3577 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3577 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3577 + 36] = 0
                                mem[_3577 + 68] = 0 / 997 * s
                                mem[_3577 + 100] = address(_3369)
                                mem[_3577 + 132] = 128
                                mem[_3577 + 164] = mem[_3577]
                                t = 0
                                while t < mem[_3577]:
                                    mem[t + _3577 + 196] = mem[t + _3577 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3577] % 32:
                                    require ext_code.size(address(_3189))
                                    call address(_3189).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3369), 128, mem[_3577 + 164 len mem[_3577] + 32]
                                else:
                                    mem[floor32(mem[_3577]) + _3577 + 196] = mem[floor32(mem[_3577]) + _3577 + -(mem[_3577] % 32) + 228 len mem[_3577] % 32]
                                    require ext_code.size(address(_3189))
                                    call address(_3189).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3369), 128, mem[_3577], mem[_3577 + 196 len floor32(mem[_3577]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3041 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3194 = mem[(32 * idx + 1) + 128]
                                _3372 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3372 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3372 + 36] = 0 / 997 * s
                                mem[_3372 + 68] = 0
                                mem[_3372 + 100] = address(_3194)
                                mem[_3372 + 132] = 128
                                mem[_3372 + 164] = mem[_3372]
                                t = 0
                                while t < mem[_3372]:
                                    mem[t + _3372 + 196] = mem[t + _3372 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3372] % 32:
                                    require ext_code.size(address(_3041))
                                    call address(_3041).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3194), 128, mem[_3372 + 164 len mem[_3372] + 32]
                                else:
                                    mem[floor32(mem[_3372]) + _3372 + 196] = mem[floor32(mem[_3372]) + _3372 + -(mem[_3372] % 32) + 228 len mem[_3372] % 32]
                                    require ext_code.size(address(_3041))
                                    call address(_3041).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3194), 128, mem[_3372], mem[_3372 + 196 len floor32(mem[_3372]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3192 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3371 = mem[(32 * idx + 1) + 128]
                                _3581 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3581 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3581 + 36] = 0 / 997 * s
                                mem[_3581 + 68] = 0
                                mem[_3581 + 100] = address(_3371)
                                mem[_3581 + 132] = 128
                                mem[_3581 + 164] = mem[_3581]
                                t = 0
                                while t < mem[_3581]:
                                    mem[t + _3581 + 196] = mem[t + _3581 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3581] % 32:
                                    require ext_code.size(address(_3192))
                                    call address(_3192).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3371), 128, mem[_3581 + 164 len mem[_3581] + 32]
                                else:
                                    mem[floor32(mem[_3581]) + _3581 + 196] = mem[floor32(mem[_3581]) + _3581 + -(mem[_3581] % 32) + 228 len mem[_3581] % 32]
                                    require ext_code.size(address(_3192))
                                    call address(_3192).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3371), 128, mem[_3581], mem[_3581 + 196 len floor32(mem[_3581]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3364 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3573 = mem[(32 * idx + 1) + 128]
                            _3810 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3810 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3810 + 36] = 0
                            mem[_3810 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3810 + 100] = address(_3573)
                            mem[_3810 + 132] = 128
                            mem[_3810 + 164] = mem[_3810]
                            t = 0
                            while t < mem[_3810]:
                                mem[t + _3810 + 196] = mem[t + _3810 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3810] % 32:
                                require ext_code.size(address(_3364))
                                call address(_3364).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3573), 128, mem[_3810 + 164 len mem[_3810] + 32]
                            else:
                                mem[floor32(mem[_3810]) + _3810 + 196] = mem[floor32(mem[_3810]) + _3810 + -(mem[_3810] % 32) + 228 len mem[_3810] % 32]
                                require ext_code.size(address(_3364))
                                call address(_3364).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3573), 128, mem[_3810], mem[_3810 + 196 len floor32(mem[_3810]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3571 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3809 = mem[(32 * idx + 1) + 128]
                        _4021 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4021 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4021 + 36] = 0
                        mem[_4021 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4021 + 100] = address(_3809)
                        mem[_4021 + 132] = 128
                        mem[_4021 + 164] = mem[_4021]
                        t = 0
                        while t < mem[_4021]:
                            mem[t + _4021 + 196] = mem[t + _4021 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4021] % 32:
                            require ext_code.size(address(_3571))
                            call address(_3571).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3809), 128, mem[_4021 + 164 len mem[_4021] + 32]
                        else:
                            mem[floor32(mem[_4021]) + _4021 + 196] = mem[floor32(mem[_4021]) + _4021 + -(mem[_4021] % 32) + 228 len mem[_4021] % 32]
                            require ext_code.size(address(_3571))
                            call address(_3571).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3809), 128, mem[_4021], mem[_4021 + 196 len floor32(mem[_4021]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4021]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3367 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3576 = mem[(32 * idx + 1) + 128]
                        _3812 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3812 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3812 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3812 + 68] = 0
                        mem[_3812 + 100] = address(_3576)
                        mem[_3812 + 132] = 128
                        mem[_3812 + 164] = mem[_3812]
                        t = 0
                        while t < mem[_3812]:
                            mem[t + _3812 + 196] = mem[t + _3812 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3812] % 32:
                            require ext_code.size(address(_3367))
                            call address(_3367).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3576), 128, mem[_3812 + 164 len mem[_3812] + 32]
                        else:
                            mem[floor32(mem[_3812]) + _3812 + 196] = mem[floor32(mem[_3812]) + _3812 + -(mem[_3812] % 32) + 228 len mem[_3812] % 32]
                            require ext_code.size(address(_3367))
                            call address(_3367).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3576), 128, mem[_3812], mem[_3812 + 196 len floor32(mem[_3812]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3574 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3811 = mem[(32 * idx + 1) + 128]
                    _4025 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4025 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4025 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4025 + 68] = 0
                    mem[_4025 + 100] = address(_3811)
                    mem[_4025 + 132] = 128
                    mem[_4025 + 164] = mem[_4025]
                    t = 0
                    while t < mem[_4025]:
                        mem[t + _4025 + 196] = mem[t + _4025 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4025] % 32:
                        require ext_code.size(address(_3574))
                        call address(_3574).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3811), 128, mem[_4025 + 164 len mem[_4025] + 32]
                    else:
                        mem[floor32(mem[_4025]) + _4025 + 196] = mem[floor32(mem[_4025]) + _4025 + -(mem[_4025] % 32) + 228 len mem[_4025] % 32]
                        require ext_code.size(address(_3574))
                        call address(_3574).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3811), 128, mem[_4025], mem[_4025 + 196 len floor32(mem[_4025]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4025]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3358 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3567 = mem[(32 * idx + 1) + 128]
                            _3806 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3806 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3806 + 36] = 0
                            mem[_3806 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3806 + 100] = address(_3567)
                            mem[_3806 + 132] = 128
                            mem[_3806 + 164] = mem[_3806]
                            t = 0
                            while t < mem[_3806]:
                                mem[t + _3806 + 196] = mem[t + _3806 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3806] % 32:
                                require ext_code.size(address(_3358))
                                call address(_3358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3567), 128, mem[_3806 + 164 len mem[_3806] + 32]
                            else:
                                mem[floor32(mem[_3806]) + _3806 + 196] = mem[floor32(mem[_3806]) + _3806 + -(mem[_3806] % 32) + 228 len mem[_3806] % 32]
                                require ext_code.size(address(_3358))
                                call address(_3358).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3567), 128, mem[_3806], mem[_3806 + 196 len floor32(mem[_3806]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3565 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3805 = mem[(32 * idx + 1) + 128]
                        _4013 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4013 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4013 + 36] = 0
                        mem[_4013 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4013 + 100] = address(_3805)
                        mem[_4013 + 132] = 128
                        mem[_4013 + 164] = mem[_4013]
                        t = 0
                        while t < mem[_4013]:
                            mem[t + _4013 + 196] = mem[t + _4013 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4013] % 32:
                            require ext_code.size(address(_3565))
                            call address(_3565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3805), 128, mem[_4013 + 164 len mem[_4013] + 32]
                        else:
                            mem[floor32(mem[_4013]) + _4013 + 196] = mem[floor32(mem[_4013]) + _4013 + -(mem[_4013] % 32) + 228 len mem[_4013] % 32]
                            require ext_code.size(address(_3565))
                            call address(_3565).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3805), 128, mem[_4013], mem[_4013 + 196 len floor32(mem[_4013]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4013]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3361 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3570 = mem[(32 * idx + 1) + 128]
                        _3808 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3808 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3808 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3808 + 68] = 0
                        mem[_3808 + 100] = address(_3570)
                        mem[_3808 + 132] = 128
                        mem[_3808 + 164] = mem[_3808]
                        t = 0
                        while t < mem[_3808]:
                            mem[t + _3808 + 196] = mem[t + _3808 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3808] % 32:
                            require ext_code.size(address(_3361))
                            call address(_3361).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3570), 128, mem[_3808 + 164 len mem[_3808] + 32]
                        else:
                            mem[floor32(mem[_3808]) + _3808 + 196] = mem[floor32(mem[_3808]) + _3808 + -(mem[_3808] % 32) + 228 len mem[_3808] % 32]
                            require ext_code.size(address(_3361))
                            call address(_3361).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3570), 128, mem[_3808], mem[_3808 + 196 len floor32(mem[_3808]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3568 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3807 = mem[(32 * idx + 1) + 128]
                    _4017 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4017 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4017 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4017 + 68] = 0
                    mem[_4017 + 100] = address(_3807)
                    mem[_4017 + 132] = 128
                    mem[_4017 + 164] = mem[_4017]
                    t = 0
                    while t < mem[_4017]:
                        mem[t + _4017 + 196] = mem[t + _4017 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4017] % 32:
                        require ext_code.size(address(_3568))
                        call address(_3568).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3807), 128, mem[_4017 + 164 len mem[_4017] + 32]
                    else:
                        mem[floor32(mem[_4017]) + _4017 + 196] = mem[floor32(mem[_4017]) + _4017 + -(mem[_4017] % 32) + 228 len mem[_4017] % 32]
                        require ext_code.size(address(_3568))
                        call address(_3568).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3807), 128, mem[_4017], mem[_4017 + 196 len floor32(mem[_4017]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4017]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2504):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3800 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4009 = mem[(32 * idx + 1) + 128]
                        _4222 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4222 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4222 + 36] = 0
                        mem[_4222 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4222 + 100] = address(_4009)
                        mem[_4222 + 132] = 128
                        mem[_4222 + 164] = mem[_4222]
                        t = 0
                        while t < mem[_4222]:
                            mem[t + _4222 + 196] = mem[t + _4222 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4222] % 32:
                            require ext_code.size(address(_3800))
                            call address(_3800).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4009), 128, mem[_4222 + 164 len mem[_4222] + 32]
                        else:
                            mem[floor32(mem[_4222]) + _4222 + 196] = mem[floor32(mem[_4222]) + _4222 + -(mem[_4222] % 32) + 228 len mem[_4222] % 32]
                            require ext_code.size(address(_3800))
                            call address(_3800).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4009), 128, mem[_4222], mem[_4222 + 196 len floor32(mem[_4222]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4007 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4221 = mem[(32 * idx + 1) + 128]
                        _4433 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4433 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4433 + 36] = 0
                        mem[_4433 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4433 + 100] = address(_4221)
                        mem[_4433 + 132] = 128
                        mem[_4433 + 164] = mem[_4433]
                        t = 0
                        while t < mem[_4433]:
                            mem[t + _4433 + 196] = mem[t + _4433 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4433] % 32:
                            require ext_code.size(address(_4007))
                            call address(_4007).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4221), 128, mem[_4433 + 164 len mem[_4433] + 32]
                        else:
                            mem[floor32(mem[_4433]) + _4433 + 196] = mem[floor32(mem[_4433]) + _4433 + -(mem[_4433] % 32) + 228 len mem[_4433] % 32]
                            require ext_code.size(address(_4007))
                            call address(_4007).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4221), 128, mem[_4433], mem[_4433 + 196 len floor32(mem[_4433]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3803 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4012 = mem[(32 * idx + 1) + 128]
                        _4224 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4224 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4224 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4224 + 68] = 0
                        mem[_4224 + 100] = address(_4012)
                        mem[_4224 + 132] = 128
                        mem[_4224 + 164] = mem[_4224]
                        t = 0
                        while t < mem[_4224]:
                            mem[t + _4224 + 196] = mem[t + _4224 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4224] % 32:
                            require ext_code.size(address(_3803))
                            call address(_3803).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4012), 128, mem[_4224 + 164 len mem[_4224] + 32]
                        else:
                            mem[floor32(mem[_4224]) + _4224 + 196] = mem[floor32(mem[_4224]) + _4224 + -(mem[_4224] % 32) + 228 len mem[_4224] % 32]
                            require ext_code.size(address(_3803))
                            call address(_3803).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4012), 128, mem[_4224], mem[_4224 + 196 len floor32(mem[_4224]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4010 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4223 = mem[(32 * idx + 1) + 128]
                        _4437 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4437 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4437 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4437 + 68] = 0
                        mem[_4437 + 100] = address(_4223)
                        mem[_4437 + 132] = 128
                        mem[_4437 + 164] = mem[_4437]
                        t = 0
                        while t < mem[_4437]:
                            mem[t + _4437 + 196] = mem[t + _4437 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4437] % 32:
                            require ext_code.size(address(_4010))
                            call address(_4010).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4223), 128, mem[_4437 + 164 len mem[_4437] + 32]
                        else:
                            mem[floor32(mem[_4437]) + _4437 + 196] = mem[floor32(mem[_4437]) + _4437 + -(mem[_4437] % 32) + 228 len mem[_4437] % 32]
                            require ext_code.size(address(_4010))
                            call address(_4010).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4223), 128, mem[_4437], mem[_4437 + 196 len floor32(mem[_4437]) + 32]
        else:
            _2525 = mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require idx + 1 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
            _2529 = mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
            require ext_code.size(mem[(32 * idx) + 140 len 20])
            staticcall mem[(32 * idx) + 140 len 20].getReserves() with:
                    gas gas_remaining wei
            mem[mem[64] len 96] = ext_call.return_data[0 len 96]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 96
            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] < mem[(32 * idx + 1) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20]:
                if address(_2525) == address(_2525):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3060 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3219 = mem[(32 * idx + 1) + 128]
                                _3396 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3396 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3396 + 36] = 0
                                mem[_3396 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3396 + 100] = address(_3219)
                                mem[_3396 + 132] = 128
                                mem[_3396 + 164] = mem[_3396]
                                s = 0
                                while s < mem[_3396]:
                                    mem[s + _3396 + 196] = mem[s + _3396 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3396] % 32:
                                    require ext_code.size(address(_3060))
                                    call address(_3060).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3219), 128, mem[_3396 + 164 len mem[_3396] + 32]
                                else:
                                    mem[floor32(mem[_3396]) + _3396 + 196] = mem[floor32(mem[_3396]) + _3396 + -(mem[_3396] % 32) + 228 len mem[_3396] % 32]
                                    require ext_code.size(address(_3060))
                                    call address(_3060).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3219), 128, mem[_3396], mem[_3396 + 196 len floor32(mem[_3396]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3217 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3395 = mem[(32 * idx + 1) + 128]
                                _3617 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3617 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3617 + 36] = 0
                                mem[_3617 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3617 + 100] = address(_3395)
                                mem[_3617 + 132] = 128
                                mem[_3617 + 164] = mem[_3617]
                                s = 0
                                while s < mem[_3617]:
                                    mem[s + _3617 + 196] = mem[s + _3617 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3617] % 32:
                                    require ext_code.size(address(_3217))
                                    call address(_3217).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3395), 128, mem[_3617 + 164 len mem[_3617] + 32]
                                else:
                                    mem[floor32(mem[_3617]) + _3617 + 196] = mem[floor32(mem[_3617]) + _3617 + -(mem[_3617] % 32) + 228 len mem[_3617] % 32]
                                    require ext_code.size(address(_3217))
                                    call address(_3217).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3395), 128, mem[_3617], mem[_3617 + 196 len floor32(mem[_3617]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3063 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3222 = mem[(32 * idx + 1) + 128]
                                _3398 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3398 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3398 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3398 + 68] = 0
                                mem[_3398 + 100] = address(_3222)
                                mem[_3398 + 132] = 128
                                mem[_3398 + 164] = mem[_3398]
                                s = 0
                                while s < mem[_3398]:
                                    mem[s + _3398 + 196] = mem[s + _3398 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3398] % 32:
                                    require ext_code.size(address(_3063))
                                    call address(_3063).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3222), 128, mem[_3398 + 164 len mem[_3398] + 32]
                                else:
                                    mem[floor32(mem[_3398]) + _3398 + 196] = mem[floor32(mem[_3398]) + _3398 + -(mem[_3398] % 32) + 228 len mem[_3398] % 32]
                                    require ext_code.size(address(_3063))
                                    call address(_3063).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3222), 128, mem[_3398], mem[_3398 + 196 len floor32(mem[_3398]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3220 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3397 = mem[(32 * idx + 1) + 128]
                                _3621 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3621 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3621 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3621 + 68] = 0
                                mem[_3621 + 100] = address(_3397)
                                mem[_3621 + 132] = 128
                                mem[_3621 + 164] = mem[_3621]
                                s = 0
                                while s < mem[_3621]:
                                    mem[s + _3621 + 196] = mem[s + _3621 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3621] % 32:
                                    require ext_code.size(address(_3220))
                                    call address(_3220).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3397), 128, mem[_3621 + 164 len mem[_3621] + 32]
                                else:
                                    mem[floor32(mem[_3621]) + _3621 + 196] = mem[floor32(mem[_3621]) + _3621 + -(mem[_3621] % 32) + 228 len mem[_3621] % 32]
                                    require ext_code.size(address(_3220))
                                    call address(_3220).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3397), 128, mem[_3621], mem[_3621 + 196 len floor32(mem[_3621]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3054 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3213 = mem[(32 * idx + 1) + 128]
                                    _3392 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3392 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3392 + 36] = 0
                                    mem[_3392 + 68] = 0 / 997 * s
                                    mem[_3392 + 100] = address(_3213)
                                    mem[_3392 + 132] = 128
                                    mem[_3392 + 164] = mem[_3392]
                                    t = 0
                                    while t < mem[_3392]:
                                        mem[t + _3392 + 196] = mem[t + _3392 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3392] % 32:
                                        require ext_code.size(address(_3054))
                                        call address(_3054).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3213), 128, mem[_3392 + 164 len mem[_3392] + 32]
                                    else:
                                        mem[floor32(mem[_3392]) + _3392 + 196] = mem[floor32(mem[_3392]) + _3392 + -(mem[_3392] % 32) + 228 len mem[_3392] % 32]
                                        require ext_code.size(address(_3054))
                                        call address(_3054).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3213), 128, mem[_3392], mem[_3392 + 196 len floor32(mem[_3392]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3211 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3391 = mem[(32 * idx + 1) + 128]
                                    _3609 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3609 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3609 + 36] = 0
                                    mem[_3609 + 68] = 0 / 997 * s
                                    mem[_3609 + 100] = address(_3391)
                                    mem[_3609 + 132] = 128
                                    mem[_3609 + 164] = mem[_3609]
                                    t = 0
                                    while t < mem[_3609]:
                                        mem[t + _3609 + 196] = mem[t + _3609 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3609] % 32:
                                        require ext_code.size(address(_3211))
                                        call address(_3211).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3391), 128, mem[_3609 + 164 len mem[_3609] + 32]
                                    else:
                                        mem[floor32(mem[_3609]) + _3609 + 196] = mem[floor32(mem[_3609]) + _3609 + -(mem[_3609] % 32) + 228 len mem[_3609] % 32]
                                        require ext_code.size(address(_3211))
                                        call address(_3211).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3391), 128, mem[_3609], mem[_3609 + 196 len floor32(mem[_3609]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3057 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3216 = mem[(32 * idx + 1) + 128]
                                    _3394 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3394 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3394 + 36] = 0 / 997 * s
                                    mem[_3394 + 68] = 0
                                    mem[_3394 + 100] = address(_3216)
                                    mem[_3394 + 132] = 128
                                    mem[_3394 + 164] = mem[_3394]
                                    t = 0
                                    while t < mem[_3394]:
                                        mem[t + _3394 + 196] = mem[t + _3394 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3394] % 32:
                                        require ext_code.size(address(_3057))
                                        call address(_3057).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3216), 128, mem[_3394 + 164 len mem[_3394] + 32]
                                    else:
                                        mem[floor32(mem[_3394]) + _3394 + 196] = mem[floor32(mem[_3394]) + _3394 + -(mem[_3394] % 32) + 228 len mem[_3394] % 32]
                                        require ext_code.size(address(_3057))
                                        call address(_3057).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3216), 128, mem[_3394], mem[_3394 + 196 len floor32(mem[_3394]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3214 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3393 = mem[(32 * idx + 1) + 128]
                                    _3613 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3613 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3613 + 36] = 0 / 997 * s
                                    mem[_3613 + 68] = 0
                                    mem[_3613 + 100] = address(_3393)
                                    mem[_3613 + 132] = 128
                                    mem[_3613 + 164] = mem[_3613]
                                    t = 0
                                    while t < mem[_3613]:
                                        mem[t + _3613 + 196] = mem[t + _3613 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3613] % 32:
                                        require ext_code.size(address(_3214))
                                        call address(_3214).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3393), 128, mem[_3613 + 164 len mem[_3613] + 32]
                                    else:
                                        mem[floor32(mem[_3613]) + _3613 + 196] = mem[floor32(mem[_3613]) + _3613 + -(mem[_3613] % 32) + 228 len mem[_3613] % 32]
                                        require ext_code.size(address(_3214))
                                        call address(_3214).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3393), 128, mem[_3613], mem[_3613 + 196 len floor32(mem[_3613]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3386 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3605 = mem[(32 * idx + 1) + 128]
                                _3836 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3836 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3836 + 36] = 0
                                mem[_3836 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3836 + 100] = address(_3605)
                                mem[_3836 + 132] = 128
                                mem[_3836 + 164] = mem[_3836]
                                t = 0
                                while t < mem[_3836]:
                                    mem[t + _3836 + 196] = mem[t + _3836 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3836] % 32:
                                    require ext_code.size(address(_3386))
                                    call address(_3386).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3605), 128, mem[_3836 + 164 len mem[_3836] + 32]
                                else:
                                    mem[floor32(mem[_3836]) + _3836 + 196] = mem[floor32(mem[_3836]) + _3836 + -(mem[_3836] % 32) + 228 len mem[_3836] % 32]
                                    require ext_code.size(address(_3386))
                                    call address(_3386).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3605), 128, mem[_3836], mem[_3836 + 196 len floor32(mem[_3836]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3603 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3835 = mem[(32 * idx + 1) + 128]
                            _4047 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4047 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4047 + 36] = 0
                            mem[_4047 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4047 + 100] = address(_3835)
                            mem[_4047 + 132] = 128
                            mem[_4047 + 164] = mem[_4047]
                            t = 0
                            while t < mem[_4047]:
                                mem[t + _4047 + 196] = mem[t + _4047 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4047] % 32:
                                require ext_code.size(address(_3603))
                                call address(_3603).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3835), 128, mem[_4047 + 164 len mem[_4047] + 32]
                            else:
                                mem[floor32(mem[_4047]) + _4047 + 196] = mem[floor32(mem[_4047]) + _4047 + -(mem[_4047] % 32) + 228 len mem[_4047] % 32]
                                require ext_code.size(address(_3603))
                                call address(_3603).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3835), 128, mem[_4047], mem[_4047 + 196 len floor32(mem[_4047]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4047]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3389 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3608 = mem[(32 * idx + 1) + 128]
                            _3838 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3838 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3838 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3838 + 68] = 0
                            mem[_3838 + 100] = address(_3608)
                            mem[_3838 + 132] = 128
                            mem[_3838 + 164] = mem[_3838]
                            t = 0
                            while t < mem[_3838]:
                                mem[t + _3838 + 196] = mem[t + _3838 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3838] % 32:
                                require ext_code.size(address(_3389))
                                call address(_3389).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3608), 128, mem[_3838 + 164 len mem[_3838] + 32]
                            else:
                                mem[floor32(mem[_3838]) + _3838 + 196] = mem[floor32(mem[_3838]) + _3838 + -(mem[_3838] % 32) + 228 len mem[_3838] % 32]
                                require ext_code.size(address(_3389))
                                call address(_3389).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3608), 128, mem[_3838], mem[_3838 + 196 len floor32(mem[_3838]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3606 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3837 = mem[(32 * idx + 1) + 128]
                        _4051 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4051 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4051 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_4051 + 68] = 0
                        mem[_4051 + 100] = address(_3837)
                        mem[_4051 + 132] = 128
                        mem[_4051 + 164] = mem[_4051]
                        t = 0
                        while t < mem[_4051]:
                            mem[t + _4051 + 196] = mem[t + _4051 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4051] % 32:
                            require ext_code.size(address(_3606))
                            call address(_3606).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3837), 128, mem[_4051 + 164 len mem[_4051] + 32]
                        else:
                            mem[floor32(mem[_4051]) + _4051 + 196] = mem[floor32(mem[_4051]) + _4051 + -(mem[_4051] % 32) + 228 len mem[_4051] % 32]
                            require ext_code.size(address(_3606))
                            call address(_3606).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3837), 128, mem[_4051], mem[_4051 + 196 len floor32(mem[_4051]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4051]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3380 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3599 = mem[(32 * idx + 1) + 128]
                                _3832 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3832 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3832 + 36] = 0
                                mem[_3832 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3832 + 100] = address(_3599)
                                mem[_3832 + 132] = 128
                                mem[_3832 + 164] = mem[_3832]
                                t = 0
                                while t < mem[_3832]:
                                    mem[t + _3832 + 196] = mem[t + _3832 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3832] % 32:
                                    require ext_code.size(address(_3380))
                                    call address(_3380).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3599), 128, mem[_3832 + 164 len mem[_3832] + 32]
                                else:
                                    mem[floor32(mem[_3832]) + _3832 + 196] = mem[floor32(mem[_3832]) + _3832 + -(mem[_3832] % 32) + 228 len mem[_3832] % 32]
                                    require ext_code.size(address(_3380))
                                    call address(_3380).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3599), 128, mem[_3832], mem[_3832 + 196 len floor32(mem[_3832]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3597 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3831 = mem[(32 * idx + 1) + 128]
                            _4039 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4039 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4039 + 36] = 0
                            mem[_4039 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_4039 + 100] = address(_3831)
                            mem[_4039 + 132] = 128
                            mem[_4039 + 164] = mem[_4039]
                            t = 0
                            while t < mem[_4039]:
                                mem[t + _4039 + 196] = mem[t + _4039 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4039] % 32:
                                require ext_code.size(address(_3597))
                                call address(_3597).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3831), 128, mem[_4039 + 164 len mem[_4039] + 32]
                            else:
                                mem[floor32(mem[_4039]) + _4039 + 196] = mem[floor32(mem[_4039]) + _4039 + -(mem[_4039] % 32) + 228 len mem[_4039] % 32]
                                require ext_code.size(address(_3597))
                                call address(_3597).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3831), 128, mem[_4039], mem[_4039 + 196 len floor32(mem[_4039]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4039]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3383 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3602 = mem[(32 * idx + 1) + 128]
                            _3834 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3834 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3834 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3834 + 68] = 0
                            mem[_3834 + 100] = address(_3602)
                            mem[_3834 + 132] = 128
                            mem[_3834 + 164] = mem[_3834]
                            t = 0
                            while t < mem[_3834]:
                                mem[t + _3834 + 196] = mem[t + _3834 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3834] % 32:
                                require ext_code.size(address(_3383))
                                call address(_3383).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3602), 128, mem[_3834 + 164 len mem[_3834] + 32]
                            else:
                                mem[floor32(mem[_3834]) + _3834 + 196] = mem[floor32(mem[_3834]) + _3834 + -(mem[_3834] % 32) + 228 len mem[_3834] % 32]
                                require ext_code.size(address(_3383))
                                call address(_3383).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3602), 128, mem[_3834], mem[_3834 + 196 len floor32(mem[_3834]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3600 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3833 = mem[(32 * idx + 1) + 128]
                        _4043 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4043 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4043 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_4043 + 68] = 0
                        mem[_4043 + 100] = address(_3833)
                        mem[_4043 + 132] = 128
                        mem[_4043 + 164] = mem[_4043]
                        t = 0
                        while t < mem[_4043]:
                            mem[t + _4043 + 196] = mem[t + _4043 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4043] % 32:
                            require ext_code.size(address(_3600))
                            call address(_3600).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3833), 128, mem[_4043 + 164 len mem[_4043] + 32]
                        else:
                            mem[floor32(mem[_4043]) + _4043 + 196] = mem[floor32(mem[_4043]) + _4043 + -(mem[_4043] % 32) + 228 len mem[_4043] % 32]
                            require ext_code.size(address(_3600))
                            call address(_3600).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3833), 128, mem[_4043], mem[_4043 + 196 len floor32(mem[_4043]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4043]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3826 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4035 = mem[(32 * idx + 1) + 128]
                            _4250 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4250 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4250 + 36] = 0
                            mem[_4250 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4250 + 100] = address(_4035)
                            mem[_4250 + 132] = 128
                            mem[_4250 + 164] = mem[_4250]
                            t = 0
                            while t < mem[_4250]:
                                mem[t + _4250 + 196] = mem[t + _4250 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4250] % 32:
                                require ext_code.size(address(_3826))
                                call address(_3826).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4035), 128, mem[_4250 + 164 len mem[_4250] + 32]
                            else:
                                mem[floor32(mem[_4250]) + _4250 + 196] = mem[floor32(mem[_4250]) + _4250 + -(mem[_4250] % 32) + 228 len mem[_4250] % 32]
                                require ext_code.size(address(_3826))
                                call address(_3826).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4035), 128, mem[_4250], mem[_4250 + 196 len floor32(mem[_4250]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4033 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4249 = mem[(32 * idx + 1) + 128]
                            _4457 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4457 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4457 + 36] = 0
                            mem[_4457 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4457 + 100] = address(_4249)
                            mem[_4457 + 132] = 128
                            mem[_4457 + 164] = mem[_4457]
                            t = 0
                            while t < mem[_4457]:
                                mem[t + _4457 + 196] = mem[t + _4457 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4457] % 32:
                                require ext_code.size(address(_4033))
                                call address(_4033).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4249), 128, mem[_4457 + 164 len mem[_4457] + 32]
                            else:
                                mem[floor32(mem[_4457]) + _4457 + 196] = mem[floor32(mem[_4457]) + _4457 + -(mem[_4457] % 32) + 228 len mem[_4457] % 32]
                                require ext_code.size(address(_4033))
                                call address(_4033).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4249), 128, mem[_4457], mem[_4457 + 196 len floor32(mem[_4457]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3829 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4038 = mem[(32 * idx + 1) + 128]
                            _4252 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4252 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4252 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4252 + 68] = 0
                            mem[_4252 + 100] = address(_4038)
                            mem[_4252 + 132] = 128
                            mem[_4252 + 164] = mem[_4252]
                            t = 0
                            while t < mem[_4252]:
                                mem[t + _4252 + 196] = mem[t + _4252 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4252] % 32:
                                require ext_code.size(address(_3829))
                                call address(_3829).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4038), 128, mem[_4252 + 164 len mem[_4252] + 32]
                            else:
                                mem[floor32(mem[_4252]) + _4252 + 196] = mem[floor32(mem[_4252]) + _4252 + -(mem[_4252] % 32) + 228 len mem[_4252] % 32]
                                require ext_code.size(address(_3829))
                                call address(_3829).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4038), 128, mem[_4252], mem[_4252 + 196 len floor32(mem[_4252]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4036 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4251 = mem[(32 * idx + 1) + 128]
                            _4461 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4461 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4461 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4461 + 68] = 0
                            mem[_4461 + 100] = address(_4251)
                            mem[_4461 + 132] = 128
                            mem[_4461 + 164] = mem[_4461]
                            t = 0
                            while t < mem[_4461]:
                                mem[t + _4461 + 196] = mem[t + _4461 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4461] % 32:
                                require ext_code.size(address(_4036))
                                call address(_4036).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4251), 128, mem[_4461 + 164 len mem[_4461] + 32]
                            else:
                                mem[floor32(mem[_4461]) + _4461 + 196] = mem[floor32(mem[_4461]) + _4461 + -(mem[_4461] % 32) + 228 len mem[_4461] % 32]
                                require ext_code.size(address(_4036))
                                call address(_4036).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4251), 128, mem[_4461], mem[_4461 + 196 len floor32(mem[_4461]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3076 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3241 = mem[(32 * idx + 1) + 128]
                            _3418 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3418 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3418 + 36] = 0
                            mem[_3418 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3418 + 100] = address(_3241)
                            mem[_3418 + 132] = 128
                            mem[_3418 + 164] = mem[_3418]
                            s = 0
                            while s < mem[_3418]:
                                mem[s + _3418 + 196] = mem[s + _3418 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3418] % 32:
                                require ext_code.size(address(_3076))
                                call address(_3076).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3241), 128, mem[_3418 + 164 len mem[_3418] + 32]
                            else:
                                mem[floor32(mem[_3418]) + _3418 + 196] = mem[floor32(mem[_3418]) + _3418 + -(mem[_3418] % 32) + 228 len mem[_3418] % 32]
                                require ext_code.size(address(_3076))
                                call address(_3076).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3241), 128, mem[_3418], mem[_3418 + 196 len floor32(mem[_3418]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3239 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3417 = mem[(32 * idx + 1) + 128]
                            _3649 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3649 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3649 + 36] = 0
                            mem[_3649 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3649 + 100] = address(_3417)
                            mem[_3649 + 132] = 128
                            mem[_3649 + 164] = mem[_3649]
                            s = 0
                            while s < mem[_3649]:
                                mem[s + _3649 + 196] = mem[s + _3649 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3649] % 32:
                                require ext_code.size(address(_3239))
                                call address(_3239).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3417), 128, mem[_3649 + 164 len mem[_3649] + 32]
                            else:
                                mem[floor32(mem[_3649]) + _3649 + 196] = mem[floor32(mem[_3649]) + _3649 + -(mem[_3649] % 32) + 228 len mem[_3649] % 32]
                                require ext_code.size(address(_3239))
                                call address(_3239).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3417), 128, mem[_3649], mem[_3649 + 196 len floor32(mem[_3649]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3079 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3244 = mem[(32 * idx + 1) + 128]
                            _3420 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3420 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3420 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3420 + 68] = 0
                            mem[_3420 + 100] = address(_3244)
                            mem[_3420 + 132] = 128
                            mem[_3420 + 164] = mem[_3420]
                            s = 0
                            while s < mem[_3420]:
                                mem[s + _3420 + 196] = mem[s + _3420 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3420] % 32:
                                require ext_code.size(address(_3079))
                                call address(_3079).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3244), 128, mem[_3420 + 164 len mem[_3420] + 32]
                            else:
                                mem[floor32(mem[_3420]) + _3420 + 196] = mem[floor32(mem[_3420]) + _3420 + -(mem[_3420] % 32) + 228 len mem[_3420] % 32]
                                require ext_code.size(address(_3079))
                                call address(_3079).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3244), 128, mem[_3420], mem[_3420 + 196 len floor32(mem[_3420]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3242 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3419 = mem[(32 * idx + 1) + 128]
                            _3653 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3653 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3653 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3653 + 68] = 0
                            mem[_3653 + 100] = address(_3419)
                            mem[_3653 + 132] = 128
                            mem[_3653 + 164] = mem[_3653]
                            s = 0
                            while s < mem[_3653]:
                                mem[s + _3653 + 196] = mem[s + _3653 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3653] % 32:
                                require ext_code.size(address(_3242))
                                call address(_3242).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3419), 128, mem[_3653 + 164 len mem[_3653] + 32]
                            else:
                                mem[floor32(mem[_3653]) + _3653 + 196] = mem[floor32(mem[_3653]) + _3653 + -(mem[_3653] % 32) + 228 len mem[_3653] % 32]
                                require ext_code.size(address(_3242))
                                call address(_3242).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3419), 128, mem[_3653], mem[_3653 + 196 len floor32(mem[_3653]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3070 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3235 = mem[(32 * idx + 1) + 128]
                                _3414 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3414 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3414 + 36] = 0
                                mem[_3414 + 68] = 0 / 997 * s
                                mem[_3414 + 100] = address(_3235)
                                mem[_3414 + 132] = 128
                                mem[_3414 + 164] = mem[_3414]
                                t = 0
                                while t < mem[_3414]:
                                    mem[t + _3414 + 196] = mem[t + _3414 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3414] % 32:
                                    require ext_code.size(address(_3070))
                                    call address(_3070).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3235), 128, mem[_3414 + 164 len mem[_3414] + 32]
                                else:
                                    mem[floor32(mem[_3414]) + _3414 + 196] = mem[floor32(mem[_3414]) + _3414 + -(mem[_3414] % 32) + 228 len mem[_3414] % 32]
                                    require ext_code.size(address(_3070))
                                    call address(_3070).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3235), 128, mem[_3414], mem[_3414 + 196 len floor32(mem[_3414]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3233 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3413 = mem[(32 * idx + 1) + 128]
                                _3641 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3641 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3641 + 36] = 0
                                mem[_3641 + 68] = 0 / 997 * s
                                mem[_3641 + 100] = address(_3413)
                                mem[_3641 + 132] = 128
                                mem[_3641 + 164] = mem[_3641]
                                t = 0
                                while t < mem[_3641]:
                                    mem[t + _3641 + 196] = mem[t + _3641 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3641] % 32:
                                    require ext_code.size(address(_3233))
                                    call address(_3233).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3413), 128, mem[_3641 + 164 len mem[_3641] + 32]
                                else:
                                    mem[floor32(mem[_3641]) + _3641 + 196] = mem[floor32(mem[_3641]) + _3641 + -(mem[_3641] % 32) + 228 len mem[_3641] % 32]
                                    require ext_code.size(address(_3233))
                                    call address(_3233).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3413), 128, mem[_3641], mem[_3641 + 196 len floor32(mem[_3641]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3073 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3238 = mem[(32 * idx + 1) + 128]
                                _3416 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3416 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3416 + 36] = 0 / 997 * s
                                mem[_3416 + 68] = 0
                                mem[_3416 + 100] = address(_3238)
                                mem[_3416 + 132] = 128
                                mem[_3416 + 164] = mem[_3416]
                                t = 0
                                while t < mem[_3416]:
                                    mem[t + _3416 + 196] = mem[t + _3416 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3416] % 32:
                                    require ext_code.size(address(_3073))
                                    call address(_3073).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3238), 128, mem[_3416 + 164 len mem[_3416] + 32]
                                else:
                                    mem[floor32(mem[_3416]) + _3416 + 196] = mem[floor32(mem[_3416]) + _3416 + -(mem[_3416] % 32) + 228 len mem[_3416] % 32]
                                    require ext_code.size(address(_3073))
                                    call address(_3073).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3238), 128, mem[_3416], mem[_3416 + 196 len floor32(mem[_3416]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3236 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3415 = mem[(32 * idx + 1) + 128]
                                _3645 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3645 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3645 + 36] = 0 / 997 * s
                                mem[_3645 + 68] = 0
                                mem[_3645 + 100] = address(_3415)
                                mem[_3645 + 132] = 128
                                mem[_3645 + 164] = mem[_3645]
                                t = 0
                                while t < mem[_3645]:
                                    mem[t + _3645 + 196] = mem[t + _3645 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3645] % 32:
                                    require ext_code.size(address(_3236))
                                    call address(_3236).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3415), 128, mem[_3645 + 164 len mem[_3645] + 32]
                                else:
                                    mem[floor32(mem[_3645]) + _3645 + 196] = mem[floor32(mem[_3645]) + _3645 + -(mem[_3645] % 32) + 228 len mem[_3645] % 32]
                                    require ext_code.size(address(_3236))
                                    call address(_3236).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3415), 128, mem[_3645], mem[_3645 + 196 len floor32(mem[_3645]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3408 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3637 = mem[(32 * idx + 1) + 128]
                            _3862 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3862 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3862 + 36] = 0
                            mem[_3862 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3862 + 100] = address(_3637)
                            mem[_3862 + 132] = 128
                            mem[_3862 + 164] = mem[_3862]
                            t = 0
                            while t < mem[_3862]:
                                mem[t + _3862 + 196] = mem[t + _3862 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3862] % 32:
                                require ext_code.size(address(_3408))
                                call address(_3408).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3637), 128, mem[_3862 + 164 len mem[_3862] + 32]
                            else:
                                mem[floor32(mem[_3862]) + _3862 + 196] = mem[floor32(mem[_3862]) + _3862 + -(mem[_3862] % 32) + 228 len mem[_3862] % 32]
                                require ext_code.size(address(_3408))
                                call address(_3408).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3637), 128, mem[_3862], mem[_3862 + 196 len floor32(mem[_3862]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3635 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3861 = mem[(32 * idx + 1) + 128]
                        _4073 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4073 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4073 + 36] = 0
                        mem[_4073 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4073 + 100] = address(_3861)
                        mem[_4073 + 132] = 128
                        mem[_4073 + 164] = mem[_4073]
                        t = 0
                        while t < mem[_4073]:
                            mem[t + _4073 + 196] = mem[t + _4073 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4073] % 32:
                            require ext_code.size(address(_3635))
                            call address(_3635).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3861), 128, mem[_4073 + 164 len mem[_4073] + 32]
                        else:
                            mem[floor32(mem[_4073]) + _4073 + 196] = mem[floor32(mem[_4073]) + _4073 + -(mem[_4073] % 32) + 228 len mem[_4073] % 32]
                            require ext_code.size(address(_3635))
                            call address(_3635).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3861), 128, mem[_4073], mem[_4073 + 196 len floor32(mem[_4073]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4073]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3411 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3640 = mem[(32 * idx + 1) + 128]
                        _3864 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3864 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3864 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3864 + 68] = 0
                        mem[_3864 + 100] = address(_3640)
                        mem[_3864 + 132] = 128
                        mem[_3864 + 164] = mem[_3864]
                        t = 0
                        while t < mem[_3864]:
                            mem[t + _3864 + 196] = mem[t + _3864 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3864] % 32:
                            require ext_code.size(address(_3411))
                            call address(_3411).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3640), 128, mem[_3864 + 164 len mem[_3864] + 32]
                        else:
                            mem[floor32(mem[_3864]) + _3864 + 196] = mem[floor32(mem[_3864]) + _3864 + -(mem[_3864] % 32) + 228 len mem[_3864] % 32]
                            require ext_code.size(address(_3411))
                            call address(_3411).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3640), 128, mem[_3864], mem[_3864 + 196 len floor32(mem[_3864]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3638 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3863 = mem[(32 * idx + 1) + 128]
                    _4077 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4077 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4077 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4077 + 68] = 0
                    mem[_4077 + 100] = address(_3863)
                    mem[_4077 + 132] = 128
                    mem[_4077 + 164] = mem[_4077]
                    t = 0
                    while t < mem[_4077]:
                        mem[t + _4077 + 196] = mem[t + _4077 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4077] % 32:
                        require ext_code.size(address(_3638))
                        call address(_3638).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3863), 128, mem[_4077 + 164 len mem[_4077] + 32]
                    else:
                        mem[floor32(mem[_4077]) + _4077 + 196] = mem[floor32(mem[_4077]) + _4077 + -(mem[_4077] % 32) + 228 len mem[_4077] % 32]
                        require ext_code.size(address(_3638))
                        call address(_3638).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3863), 128, mem[_4077], mem[_4077 + 196 len floor32(mem[_4077]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4077]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3402 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3631 = mem[(32 * idx + 1) + 128]
                            _3858 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3858 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3858 + 36] = 0
                            mem[_3858 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3858 + 100] = address(_3631)
                            mem[_3858 + 132] = 128
                            mem[_3858 + 164] = mem[_3858]
                            t = 0
                            while t < mem[_3858]:
                                mem[t + _3858 + 196] = mem[t + _3858 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3858] % 32:
                                require ext_code.size(address(_3402))
                                call address(_3402).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3631), 128, mem[_3858 + 164 len mem[_3858] + 32]
                            else:
                                mem[floor32(mem[_3858]) + _3858 + 196] = mem[floor32(mem[_3858]) + _3858 + -(mem[_3858] % 32) + 228 len mem[_3858] % 32]
                                require ext_code.size(address(_3402))
                                call address(_3402).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3631), 128, mem[_3858], mem[_3858 + 196 len floor32(mem[_3858]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3629 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3857 = mem[(32 * idx + 1) + 128]
                        _4065 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4065 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4065 + 36] = 0
                        mem[_4065 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4065 + 100] = address(_3857)
                        mem[_4065 + 132] = 128
                        mem[_4065 + 164] = mem[_4065]
                        t = 0
                        while t < mem[_4065]:
                            mem[t + _4065 + 196] = mem[t + _4065 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4065] % 32:
                            require ext_code.size(address(_3629))
                            call address(_3629).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3857), 128, mem[_4065 + 164 len mem[_4065] + 32]
                        else:
                            mem[floor32(mem[_4065]) + _4065 + 196] = mem[floor32(mem[_4065]) + _4065 + -(mem[_4065] % 32) + 228 len mem[_4065] % 32]
                            require ext_code.size(address(_3629))
                            call address(_3629).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3857), 128, mem[_4065], mem[_4065 + 196 len floor32(mem[_4065]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4065]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3405 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3634 = mem[(32 * idx + 1) + 128]
                        _3860 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3860 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3860 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3860 + 68] = 0
                        mem[_3860 + 100] = address(_3634)
                        mem[_3860 + 132] = 128
                        mem[_3860 + 164] = mem[_3860]
                        t = 0
                        while t < mem[_3860]:
                            mem[t + _3860 + 196] = mem[t + _3860 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3860] % 32:
                            require ext_code.size(address(_3405))
                            call address(_3405).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3634), 128, mem[_3860 + 164 len mem[_3860] + 32]
                        else:
                            mem[floor32(mem[_3860]) + _3860 + 196] = mem[floor32(mem[_3860]) + _3860 + -(mem[_3860] % 32) + 228 len mem[_3860] % 32]
                            require ext_code.size(address(_3405))
                            call address(_3405).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3634), 128, mem[_3860], mem[_3860 + 196 len floor32(mem[_3860]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3632 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3859 = mem[(32 * idx + 1) + 128]
                    _4069 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4069 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4069 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4069 + 68] = 0
                    mem[_4069 + 100] = address(_3859)
                    mem[_4069 + 132] = 128
                    mem[_4069 + 164] = mem[_4069]
                    t = 0
                    while t < mem[_4069]:
                        mem[t + _4069 + 196] = mem[t + _4069 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4069] % 32:
                        require ext_code.size(address(_3632))
                        call address(_3632).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3859), 128, mem[_4069 + 164 len mem[_4069] + 32]
                    else:
                        mem[floor32(mem[_4069]) + _4069 + 196] = mem[floor32(mem[_4069]) + _4069 + -(mem[_4069] % 32) + 228 len mem[_4069] % 32]
                        require ext_code.size(address(_3632))
                        call address(_3632).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3859), 128, mem[_4069], mem[_4069 + 196 len floor32(mem[_4069]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4069]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3852 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4061 = mem[(32 * idx + 1) + 128]
                        _4278 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4278 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4278 + 36] = 0
                        mem[_4278 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4278 + 100] = address(_4061)
                        mem[_4278 + 132] = 128
                        mem[_4278 + 164] = mem[_4278]
                        t = 0
                        while t < mem[_4278]:
                            mem[t + _4278 + 196] = mem[t + _4278 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4278] % 32:
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4061), 128, mem[_4278 + 164 len mem[_4278] + 32]
                        else:
                            mem[floor32(mem[_4278]) + _4278 + 196] = mem[floor32(mem[_4278]) + _4278 + -(mem[_4278] % 32) + 228 len mem[_4278] % 32]
                            require ext_code.size(address(_3852))
                            call address(_3852).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4061), 128, mem[_4278], mem[_4278 + 196 len floor32(mem[_4278]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4059 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4277 = mem[(32 * idx + 1) + 128]
                        _4481 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4481 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4481 + 36] = 0
                        mem[_4481 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4481 + 100] = address(_4277)
                        mem[_4481 + 132] = 128
                        mem[_4481 + 164] = mem[_4481]
                        t = 0
                        while t < mem[_4481]:
                            mem[t + _4481 + 196] = mem[t + _4481 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4481] % 32:
                            require ext_code.size(address(_4059))
                            call address(_4059).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4277), 128, mem[_4481 + 164 len mem[_4481] + 32]
                        else:
                            mem[floor32(mem[_4481]) + _4481 + 196] = mem[floor32(mem[_4481]) + _4481 + -(mem[_4481] % 32) + 228 len mem[_4481] % 32]
                            require ext_code.size(address(_4059))
                            call address(_4059).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4277), 128, mem[_4481], mem[_4481 + 196 len floor32(mem[_4481]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3855 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4064 = mem[(32 * idx + 1) + 128]
                        _4280 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4280 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4280 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4280 + 68] = 0
                        mem[_4280 + 100] = address(_4064)
                        mem[_4280 + 132] = 128
                        mem[_4280 + 164] = mem[_4280]
                        t = 0
                        while t < mem[_4280]:
                            mem[t + _4280 + 196] = mem[t + _4280 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4280] % 32:
                            require ext_code.size(address(_3855))
                            call address(_3855).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4064), 128, mem[_4280 + 164 len mem[_4280] + 32]
                        else:
                            mem[floor32(mem[_4280]) + _4280 + 196] = mem[floor32(mem[_4280]) + _4280 + -(mem[_4280] % 32) + 228 len mem[_4280] % 32]
                            require ext_code.size(address(_3855))
                            call address(_3855).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4064), 128, mem[_4280], mem[_4280 + 196 len floor32(mem[_4280]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4062 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4279 = mem[(32 * idx + 1) + 128]
                        _4485 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4485 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4485 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4485 + 68] = 0
                        mem[_4485 + 100] = address(_4279)
                        mem[_4485 + 132] = 128
                        mem[_4485 + 164] = mem[_4485]
                        t = 0
                        while t < mem[_4485]:
                            mem[t + _4485 + 196] = mem[t + _4485 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4485] % 32:
                            require ext_code.size(address(_4062))
                            call address(_4062).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4279), 128, mem[_4485 + 164 len mem[_4485] + 32]
                        else:
                            mem[floor32(mem[_4485]) + _4485 + 196] = mem[floor32(mem[_4485]) + _4485 + -(mem[_4485] % 32) + 228 len mem[_4485] % 32]
                            require ext_code.size(address(_4062))
                            call address(_4062).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4279), 128, mem[_4485], mem[_4485 + 196 len floor32(mem[_4485]) + 32]
            else:
                if address(_2529) == address(_2525):
                    if Mask(112, 0, ext_call.return_data[0]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if Mask(112, 0, ext_call.return_data[32]) <= 0:
                        revert with 0, 
                                    32,
                                    53,
                                    0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                    mem[mem[64] + 121 len 11]
                    if not s:
                        require Mask(112, 0, ext_call.return_data[0])
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require 1000 * Mask(112, 0, ext_call.return_data[0])
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3092 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3263 = mem[(32 * idx + 1) + 128]
                                _3440 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3440 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3440 + 36] = 0
                                mem[_3440 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3440 + 100] = address(_3263)
                                mem[_3440 + 132] = 128
                                mem[_3440 + 164] = mem[_3440]
                                s = 0
                                while s < mem[_3440]:
                                    mem[s + _3440 + 196] = mem[s + _3440 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3440] % 32:
                                    require ext_code.size(address(_3092))
                                    call address(_3092).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3263), 128, mem[_3440 + 164 len mem[_3440] + 32]
                                else:
                                    mem[floor32(mem[_3440]) + _3440 + 196] = mem[floor32(mem[_3440]) + _3440 + -(mem[_3440] % 32) + 228 len mem[_3440] % 32]
                                    require ext_code.size(address(_3092))
                                    call address(_3092).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3263), 128, mem[_3440], mem[_3440 + 196 len floor32(mem[_3440]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3261 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3439 = mem[(32 * idx + 1) + 128]
                                _3681 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3681 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3681 + 36] = 0
                                mem[_3681 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3681 + 100] = address(_3439)
                                mem[_3681 + 132] = 128
                                mem[_3681 + 164] = mem[_3681]
                                s = 0
                                while s < mem[_3681]:
                                    mem[s + _3681 + 196] = mem[s + _3681 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3681] % 32:
                                    require ext_code.size(address(_3261))
                                    call address(_3261).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3439), 128, mem[_3681 + 164 len mem[_3681] + 32]
                                else:
                                    mem[floor32(mem[_3681]) + _3681 + 196] = mem[floor32(mem[_3681]) + _3681 + -(mem[_3681] % 32) + 228 len mem[_3681] % 32]
                                    require ext_code.size(address(_3261))
                                    call address(_3261).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), address(_3439), 128, mem[_3681], mem[_3681 + 196 len floor32(mem[_3681]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3095 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3266 = mem[(32 * idx + 1) + 128]
                                _3442 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3442 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3442 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3442 + 68] = 0
                                mem[_3442 + 100] = address(_3266)
                                mem[_3442 + 132] = 128
                                mem[_3442 + 164] = mem[_3442]
                                s = 0
                                while s < mem[_3442]:
                                    mem[s + _3442 + 196] = mem[s + _3442 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3442] % 32:
                                    require ext_code.size(address(_3095))
                                    call address(_3095).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3266), 128, mem[_3442 + 164 len mem[_3442] + 32]
                                else:
                                    mem[floor32(mem[_3442]) + _3442 + 196] = mem[floor32(mem[_3442]) + _3442 + -(mem[_3442] % 32) + 228 len mem[_3442] % 32]
                                    require ext_code.size(address(_3095))
                                    call address(_3095).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3266), 128, mem[_3442], mem[_3442 + 196 len floor32(mem[_3442]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3264 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3441 = mem[(32 * idx + 1) + 128]
                                _3685 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3685 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3685 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                                mem[_3685 + 68] = 0
                                mem[_3685 + 100] = address(_3441)
                                mem[_3685 + 132] = 128
                                mem[_3685 + 164] = mem[_3685]
                                s = 0
                                while s < mem[_3685]:
                                    mem[s + _3685 + 196] = mem[s + _3685 + 32]
                                    s = s + 32
                                    continue 
                                if not mem[_3685] % 32:
                                    require ext_code.size(address(_3264))
                                    call address(_3264).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3441), 128, mem[_3685 + 164 len mem[_3685] + 32]
                                else:
                                    mem[floor32(mem[_3685]) + _3685 + 196] = mem[floor32(mem[_3685]) + _3685 + -(mem[_3685] % 32) + 228 len mem[_3685] % 32]
                                    require ext_code.size(address(_3264))
                                    call address(_3264).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 1000 * Mask(112, 0, ext_call.return_data[0]), 0, address(_3441), 128, mem[_3685], mem[_3685 + 196 len floor32(mem[_3685]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 1000 * Mask(112, 0, ext_call.return_data[0])
                        continue 
                    if 997 * s / s != 997:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not 997 * s:
                        if not Mask(112, 0, ext_call.return_data[0]):
                            if 997 * s < 0:
                                revert with 0, 'SafeMath: addition overflow'
                            require 997 * s
                            require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                            if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3086 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3257 = mem[(32 * idx + 1) + 128]
                                    _3436 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3436 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3436 + 36] = 0
                                    mem[_3436 + 68] = 0 / 997 * s
                                    mem[_3436 + 100] = address(_3257)
                                    mem[_3436 + 132] = 128
                                    mem[_3436 + 164] = mem[_3436]
                                    t = 0
                                    while t < mem[_3436]:
                                        mem[t + _3436 + 196] = mem[t + _3436 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3436] % 32:
                                        require ext_code.size(address(_3086))
                                        call address(_3086).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3257), 128, mem[_3436 + 164 len mem[_3436] + 32]
                                    else:
                                        mem[floor32(mem[_3436]) + _3436 + 196] = mem[floor32(mem[_3436]) + _3436 + -(mem[_3436] % 32) + 228 len mem[_3436] % 32]
                                        require ext_code.size(address(_3086))
                                        call address(_3086).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3257), 128, mem[_3436], mem[_3436 + 196 len floor32(mem[_3436]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3255 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3435 = mem[(32 * idx + 1) + 128]
                                    _3673 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3673 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3673 + 36] = 0
                                    mem[_3673 + 68] = 0 / 997 * s
                                    mem[_3673 + 100] = address(_3435)
                                    mem[_3673 + 132] = 128
                                    mem[_3673 + 164] = mem[_3673]
                                    t = 0
                                    while t < mem[_3673]:
                                        mem[t + _3673 + 196] = mem[t + _3673 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3673] % 32:
                                        require ext_code.size(address(_3255))
                                        call address(_3255).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3435), 128, mem[_3673 + 164 len mem[_3673] + 32]
                                    else:
                                        mem[floor32(mem[_3673]) + _3673 + 196] = mem[floor32(mem[_3673]) + _3673 + -(mem[_3673] % 32) + 228 len mem[_3673] % 32]
                                        require ext_code.size(address(_3255))
                                        call address(_3255).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0, 0 / 997 * s, address(_3435), 128, mem[_3673], mem[_3673 + 196 len floor32(mem[_3673]) + 32]
                            else:
                                if idx >= mem[96] - 1:
                                    require idx < mem[96]
                                    _3089 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3260 = mem[(32 * idx + 1) + 128]
                                    _3438 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3438 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3438 + 36] = 0 / 997 * s
                                    mem[_3438 + 68] = 0
                                    mem[_3438 + 100] = address(_3260)
                                    mem[_3438 + 132] = 128
                                    mem[_3438 + 164] = mem[_3438]
                                    t = 0
                                    while t < mem[_3438]:
                                        mem[t + _3438 + 196] = mem[t + _3438 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3438] % 32:
                                        require ext_code.size(address(_3089))
                                        call address(_3089).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3260), 128, mem[_3438 + 164 len mem[_3438] + 32]
                                    else:
                                        mem[floor32(mem[_3438]) + _3438 + 196] = mem[floor32(mem[_3438]) + _3438 + -(mem[_3438] % 32) + 228 len mem[_3438] % 32]
                                        require ext_code.size(address(_3089))
                                        call address(_3089).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3260), 128, mem[_3438], mem[_3438 + 196 len floor32(mem[_3438]) + 32]
                                else:
                                    require idx + 1 < mem[96]
                                    require idx < mem[96]
                                    _3258 = mem[(32 * idx) + 128]
                                    require idx + 1 < mem[96]
                                    _3437 = mem[(32 * idx + 1) + 128]
                                    _3677 = mem[64]
                                    mem[64] = mem[64] + 32
                                    mem[_3677 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                    mem[_3677 + 36] = 0 / 997 * s
                                    mem[_3677 + 68] = 0
                                    mem[_3677 + 100] = address(_3437)
                                    mem[_3677 + 132] = 128
                                    mem[_3677 + 164] = mem[_3677]
                                    t = 0
                                    while t < mem[_3677]:
                                        mem[t + _3677 + 196] = mem[t + _3677 + 32]
                                        t = t + 32
                                        continue 
                                    if not mem[_3677] % 32:
                                        require ext_code.size(address(_3258))
                                        call address(_3258).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3437), 128, mem[_3677 + 164 len mem[_3677] + 32]
                                    else:
                                        mem[floor32(mem[_3677]) + _3677 + 196] = mem[floor32(mem[_3677]) + _3677 + -(mem[_3677] % 32) + 228 len mem[_3677] % 32]
                                        require ext_code.size(address(_3258))
                                        call address(_3258).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                             gas gas_remaining wei
                                            args 0 / 997 * s, 0, address(_3437), 128, mem[_3677], mem[_3677 + 196 len floor32(mem[_3677]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / 997 * s
                            continue 
                        if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                            revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                        if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                            revert with 0, 'SafeMath: addition overflow'
                        require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3430 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3669 = mem[(32 * idx + 1) + 128]
                                _3888 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3888 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3888 + 36] = 0
                                mem[_3888 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                mem[_3888 + 100] = address(_3669)
                                mem[_3888 + 132] = 128
                                mem[_3888 + 164] = mem[_3888]
                                t = 0
                                while t < mem[_3888]:
                                    mem[t + _3888 + 196] = mem[t + _3888 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3888] % 32:
                                    require ext_code.size(address(_3430))
                                    call address(_3430).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3669), 128, mem[_3888 + 164 len mem[_3888] + 32]
                                else:
                                    mem[floor32(mem[_3888]) + _3888 + 196] = mem[floor32(mem[_3888]) + _3888 + -(mem[_3888] % 32) + 228 len mem[_3888] % 32]
                                    require ext_code.size(address(_3430))
                                    call address(_3430).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3669), 128, mem[_3888], mem[_3888 + 196 len floor32(mem[_3888]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3667 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3887 = mem[(32 * idx + 1) + 128]
                            _4099 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4099 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4099 + 36] = 0
                            mem[_4099 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4099 + 100] = address(_3887)
                            mem[_4099 + 132] = 128
                            mem[_4099 + 164] = mem[_4099]
                            t = 0
                            while t < mem[_4099]:
                                mem[t + _4099 + 196] = mem[t + _4099 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4099] % 32:
                                require ext_code.size(address(_3667))
                                call address(_3667).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3887), 128, mem[_4099 + 164 len mem[_4099] + 32]
                            else:
                                mem[floor32(mem[_4099]) + _4099 + 196] = mem[floor32(mem[_4099]) + _4099 + -(mem[_4099] % 32) + 228 len mem[_4099] % 32]
                                require ext_code.size(address(_3667))
                                call address(_3667).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_3887), 128, mem[_4099], mem[_4099 + 196 len floor32(mem[_4099]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4099]) + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3433 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3672 = mem[(32 * idx + 1) + 128]
                            _3890 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3890 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3890 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_3890 + 68] = 0
                            mem[_3890 + 100] = address(_3672)
                            mem[_3890 + 132] = 128
                            mem[_3890 + 164] = mem[_3890]
                            t = 0
                            while t < mem[_3890]:
                                mem[t + _3890 + 196] = mem[t + _3890 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3890] % 32:
                                require ext_code.size(address(_3433))
                                call address(_3433).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3672), 128, mem[_3890 + 164 len mem[_3890] + 32]
                            else:
                                mem[floor32(mem[_3890]) + _3890 + 196] = mem[floor32(mem[_3890]) + _3890 + -(mem[_3890] % 32) + 228 len mem[_3890] % 32]
                                require ext_code.size(address(_3433))
                                call address(_3433).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3672), 128, mem[_3890], mem[_3890 + 196 len floor32(mem[_3890]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3670 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3889 = mem[(32 * idx + 1) + 128]
                        _4103 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4103 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4103 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        mem[_4103 + 68] = 0
                        mem[_4103 + 100] = address(_3889)
                        mem[_4103 + 132] = 128
                        mem[_4103 + 164] = mem[_4103]
                        t = 0
                        while t < mem[_4103]:
                            mem[t + _4103 + 196] = mem[t + _4103 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4103] % 32:
                            require ext_code.size(address(_3670))
                            call address(_3670).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3889), 128, mem[_4103 + 164 len mem[_4103] + 32]
                        else:
                            mem[floor32(mem[_4103]) + _4103 + 196] = mem[floor32(mem[_4103]) + _4103 + -(mem[_4103] % 32) + 228 len mem[_4103] % 32]
                            require ext_code.size(address(_3670))
                            call address(_3670).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_3889), 128, mem[_4103], mem[_4103 + 196 len floor32(mem[_4103]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4103]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                        continue 
                    if 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s != Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if not Mask(112, 0, ext_call.return_data[0]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3424 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3663 = mem[(32 * idx + 1) + 128]
                                _3884 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3884 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3884 + 36] = 0
                                mem[_3884 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                mem[_3884 + 100] = address(_3663)
                                mem[_3884 + 132] = 128
                                mem[_3884 + 164] = mem[_3884]
                                t = 0
                                while t < mem[_3884]:
                                    mem[t + _3884 + 196] = mem[t + _3884 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3884] % 32:
                                    require ext_code.size(address(_3424))
                                    call address(_3424).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3663), 128, mem[_3884 + 164 len mem[_3884] + 32]
                                else:
                                    mem[floor32(mem[_3884]) + _3884 + 196] = mem[floor32(mem[_3884]) + _3884 + -(mem[_3884] % 32) + 228 len mem[_3884] % 32]
                                    require ext_code.size(address(_3424))
                                    call address(_3424).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3663), 128, mem[_3884], mem[_3884 + 196 len floor32(mem[_3884]) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                idx = idx + 1
                                s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                                continue 
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3661 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3883 = mem[(32 * idx + 1) + 128]
                            _4091 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4091 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4091 + 36] = 0
                            mem[_4091 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_4091 + 100] = address(_3883)
                            mem[_4091 + 132] = 128
                            mem[_4091 + 164] = mem[_4091]
                            t = 0
                            while t < mem[_4091]:
                                mem[t + _4091 + 196] = mem[t + _4091 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4091] % 32:
                                require ext_code.size(address(_3661))
                                call address(_3661).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3883), 128, mem[_4091 + 164 len mem[_4091] + 32]
                            else:
                                mem[floor32(mem[_4091]) + _4091 + 196] = mem[floor32(mem[_4091]) + _4091 + -(mem[_4091] % 32) + 228 len mem[_4091] % 32]
                                require ext_code.size(address(_3661))
                                call address(_3661).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, address(_3883), 128, mem[_4091], mem[_4091 + 196 len floor32(mem[_4091]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            t = ceil32(mem[_4091]) + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3427 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3666 = mem[(32 * idx + 1) + 128]
                            _3886 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3886 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3886 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            mem[_3886 + 68] = 0
                            mem[_3886 + 100] = address(_3666)
                            mem[_3886 + 132] = 128
                            mem[_3886 + 164] = mem[_3886]
                            t = 0
                            while t < mem[_3886]:
                                mem[t + _3886 + 196] = mem[t + _3886 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3886] % 32:
                                require ext_code.size(address(_3427))
                                call address(_3427).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3666), 128, mem[_3886 + 164 len mem[_3886] + 32]
                            else:
                                mem[floor32(mem[_3886]) + _3886 + 196] = mem[floor32(mem[_3886]) + _3886 + -(mem[_3886] % 32) + 228 len mem[_3886] % 32]
                                require ext_code.size(address(_3427))
                                call address(_3427).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3666), 128, mem[_3886], mem[_3886 + 196 len floor32(mem[_3886]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3664 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3885 = mem[(32 * idx + 1) + 128]
                        _4095 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4095 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4095 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        mem[_4095 + 68] = 0
                        mem[_4095 + 100] = address(_3885)
                        mem[_4095 + 132] = 128
                        mem[_4095 + 164] = mem[_4095]
                        t = 0
                        while t < mem[_4095]:
                            mem[t + _4095 + 196] = mem[t + _4095 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4095] % 32:
                            require ext_code.size(address(_3664))
                            call address(_3664).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3885), 128, mem[_4095 + 164 len mem[_4095] + 32]
                        else:
                            mem[floor32(mem[_4095]) + _4095 + 196] = mem[floor32(mem[_4095]) + _4095 + -(mem[_4095] % 32) + 228 len mem[_4095] % 32]
                            require ext_code.size(address(_3664))
                            call address(_3664).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s, 0, address(_3885), 128, mem[_4095], mem[_4095 + 196 len floor32(mem[_4095]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4095]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[0]) / Mask(112, 0, ext_call.return_data[0]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])) < 1000 * Mask(112, 0, ext_call.return_data[0]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3878 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4087 = mem[(32 * idx + 1) + 128]
                            _4306 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4306 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4306 + 36] = 0
                            mem[_4306 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4306 + 100] = address(_4087)
                            mem[_4306 + 132] = 128
                            mem[_4306 + 164] = mem[_4306]
                            t = 0
                            while t < mem[_4306]:
                                mem[t + _4306 + 196] = mem[t + _4306 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4306] % 32:
                                require ext_code.size(address(_3878))
                                call address(_3878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4087), 128, mem[_4306 + 164 len mem[_4306] + 32]
                            else:
                                mem[floor32(mem[_4306]) + _4306 + 196] = mem[floor32(mem[_4306]) + _4306 + -(mem[_4306] % 32) + 228 len mem[_4306] % 32]
                                require ext_code.size(address(_3878))
                                call address(_3878).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4087), 128, mem[_4306], mem[_4306 + 196 len floor32(mem[_4306]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4085 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4305 = mem[(32 * idx + 1) + 128]
                            _4505 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4505 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4505 + 36] = 0
                            mem[_4505 + 68] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4505 + 100] = address(_4305)
                            mem[_4505 + 132] = 128
                            mem[_4505 + 164] = mem[_4505]
                            t = 0
                            while t < mem[_4505]:
                                mem[t + _4505 + 196] = mem[t + _4505 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4505] % 32:
                                require ext_code.size(address(_4085))
                                call address(_4085).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4305), 128, mem[_4505 + 164 len mem[_4505] + 32]
                            else:
                                mem[floor32(mem[_4505]) + _4505 + 196] = mem[floor32(mem[_4505]) + _4505 + -(mem[_4505] % 32) + 228 len mem[_4505] % 32]
                                require ext_code.size(address(_4085))
                                call address(_4085).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), address(_4305), 128, mem[_4505], mem[_4505 + 196 len floor32(mem[_4505]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3881 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4090 = mem[(32 * idx + 1) + 128]
                            _4308 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4308 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4308 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4308 + 68] = 0
                            mem[_4308 + 100] = address(_4090)
                            mem[_4308 + 132] = 128
                            mem[_4308 + 164] = mem[_4308]
                            t = 0
                            while t < mem[_4308]:
                                mem[t + _4308 + 196] = mem[t + _4308 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4308] % 32:
                                require ext_code.size(address(_3881))
                                call address(_3881).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4090), 128, mem[_4308 + 164 len mem[_4308] + 32]
                            else:
                                mem[floor32(mem[_4308]) + _4308 + 196] = mem[floor32(mem[_4308]) + _4308 + -(mem[_4308] % 32) + 228 len mem[_4308] % 32]
                                require ext_code.size(address(_3881))
                                call address(_3881).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4090), 128, mem[_4308], mem[_4308 + 196 len floor32(mem[_4308]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _4088 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _4307 = mem[(32 * idx + 1) + 128]
                            _4509 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_4509 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_4509 + 36] = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                            mem[_4509 + 68] = 0
                            mem[_4509 + 100] = address(_4307)
                            mem[_4509 + 132] = 128
                            mem[_4509 + 164] = mem[_4509]
                            t = 0
                            while t < mem[_4509]:
                                mem[t + _4509 + 196] = mem[t + _4509 + 32]
                                t = t + 32
                                continue 
                            if not mem[_4509] % 32:
                                require ext_code.size(address(_4088))
                                call address(_4088).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4307), 128, mem[_4509 + 164 len mem[_4509] + 32]
                            else:
                                mem[floor32(mem[_4509]) + _4509 + 196] = mem[floor32(mem[_4509]) + _4509 + -(mem[_4509] % 32) + 228 len mem[_4509] % 32]
                                require ext_code.size(address(_4088))
                                call address(_4088).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0])), 0, address(_4307), 128, mem[_4509], mem[_4509 + 196 len floor32(mem[_4509]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[32]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[0]))
                    continue 
                if Mask(112, 0, ext_call.return_data[32]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if Mask(112, 0, ext_call.return_data[0]) <= 0:
                    revert with 0, 
                                32,
                                53,
                                0xfe466c617368417262426f745632556e697377617056324c6962726172793a20494e53554646494349454e545f4c49515549444954,
                                mem[mem[64] + 121 len 11]
                if not s:
                    require Mask(112, 0, ext_call.return_data[32])
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require 1000 * Mask(112, 0, ext_call.return_data[32])
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3108 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3285 = mem[(32 * idx + 1) + 128]
                            _3462 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3462 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3462 + 36] = 0
                            mem[_3462 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3462 + 100] = address(_3285)
                            mem[_3462 + 132] = 128
                            mem[_3462 + 164] = mem[_3462]
                            s = 0
                            while s < mem[_3462]:
                                mem[s + _3462 + 196] = mem[s + _3462 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3462] % 32:
                                require ext_code.size(address(_3108))
                                call address(_3108).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3285), 128, mem[_3462 + 164 len mem[_3462] + 32]
                            else:
                                mem[floor32(mem[_3462]) + _3462 + 196] = mem[floor32(mem[_3462]) + _3462 + -(mem[_3462] % 32) + 228 len mem[_3462] % 32]
                                require ext_code.size(address(_3108))
                                call address(_3108).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3285), 128, mem[_3462], mem[_3462 + 196 len floor32(mem[_3462]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3283 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3461 = mem[(32 * idx + 1) + 128]
                            _3713 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3713 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3713 + 36] = 0
                            mem[_3713 + 68] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3713 + 100] = address(_3461)
                            mem[_3713 + 132] = 128
                            mem[_3713 + 164] = mem[_3713]
                            s = 0
                            while s < mem[_3713]:
                                mem[s + _3713 + 196] = mem[s + _3713 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3713] % 32:
                                require ext_code.size(address(_3283))
                                call address(_3283).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3461), 128, mem[_3713 + 164 len mem[_3713] + 32]
                            else:
                                mem[floor32(mem[_3713]) + _3713 + 196] = mem[floor32(mem[_3713]) + _3713 + -(mem[_3713] % 32) + 228 len mem[_3713] % 32]
                                require ext_code.size(address(_3283))
                                call address(_3283).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), address(_3461), 128, mem[_3713], mem[_3713 + 196 len floor32(mem[_3713]) + 32]
                    else:
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3111 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3288 = mem[(32 * idx + 1) + 128]
                            _3464 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3464 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3464 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3464 + 68] = 0
                            mem[_3464 + 100] = address(_3288)
                            mem[_3464 + 132] = 128
                            mem[_3464 + 164] = mem[_3464]
                            s = 0
                            while s < mem[_3464]:
                                mem[s + _3464 + 196] = mem[s + _3464 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3464] % 32:
                                require ext_code.size(address(_3111))
                                call address(_3111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3288), 128, mem[_3464 + 164 len mem[_3464] + 32]
                            else:
                                mem[floor32(mem[_3464]) + _3464 + 196] = mem[floor32(mem[_3464]) + _3464 + -(mem[_3464] % 32) + 228 len mem[_3464] % 32]
                                require ext_code.size(address(_3111))
                                call address(_3111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3288), 128, mem[_3464], mem[_3464 + 196 len floor32(mem[_3464]) + 32]
                        else:
                            require idx + 1 < mem[96]
                            require idx < mem[96]
                            _3286 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3463 = mem[(32 * idx + 1) + 128]
                            _3717 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3717 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3717 + 36] = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                            mem[_3717 + 68] = 0
                            mem[_3717 + 100] = address(_3463)
                            mem[_3717 + 132] = 128
                            mem[_3717 + 164] = mem[_3717]
                            s = 0
                            while s < mem[_3717]:
                                mem[s + _3717 + 196] = mem[s + _3717 + 32]
                                s = s + 32
                                continue 
                            if not mem[_3717] % 32:
                                require ext_code.size(address(_3286))
                                call address(_3286).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3463), 128, mem[_3717 + 164 len mem[_3717] + 32]
                            else:
                                mem[floor32(mem[_3717]) + _3717 + 196] = mem[floor32(mem[_3717]) + _3717 + -(mem[_3717] % 32) + 228 len mem[_3717] % 32]
                                require ext_code.size(address(_3286))
                                call address(_3286).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0 / 1000 * Mask(112, 0, ext_call.return_data[32]), 0, address(_3463), 128, mem[_3717], mem[_3717 + 196 len floor32(mem[_3717]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    idx = idx + 1
                    s = 0 / 1000 * Mask(112, 0, ext_call.return_data[32])
                    continue 
                if 997 * s / s != 997:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not 997 * s:
                    if not Mask(112, 0, ext_call.return_data[32]):
                        if 997 * s < 0:
                            revert with 0, 'SafeMath: addition overflow'
                        require 997 * s
                        require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                        if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3102 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3279 = mem[(32 * idx + 1) + 128]
                                _3458 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3458 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3458 + 36] = 0
                                mem[_3458 + 68] = 0 / 997 * s
                                mem[_3458 + 100] = address(_3279)
                                mem[_3458 + 132] = 128
                                mem[_3458 + 164] = mem[_3458]
                                t = 0
                                while t < mem[_3458]:
                                    mem[t + _3458 + 196] = mem[t + _3458 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3458] % 32:
                                    require ext_code.size(address(_3102))
                                    call address(_3102).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3279), 128, mem[_3458 + 164 len mem[_3458] + 32]
                                else:
                                    mem[floor32(mem[_3458]) + _3458 + 196] = mem[floor32(mem[_3458]) + _3458 + -(mem[_3458] % 32) + 228 len mem[_3458] % 32]
                                    require ext_code.size(address(_3102))
                                    call address(_3102).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3279), 128, mem[_3458], mem[_3458 + 196 len floor32(mem[_3458]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3277 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3457 = mem[(32 * idx + 1) + 128]
                                _3705 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3705 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3705 + 36] = 0
                                mem[_3705 + 68] = 0 / 997 * s
                                mem[_3705 + 100] = address(_3457)
                                mem[_3705 + 132] = 128
                                mem[_3705 + 164] = mem[_3705]
                                t = 0
                                while t < mem[_3705]:
                                    mem[t + _3705 + 196] = mem[t + _3705 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3705] % 32:
                                    require ext_code.size(address(_3277))
                                    call address(_3277).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3457), 128, mem[_3705 + 164 len mem[_3705] + 32]
                                else:
                                    mem[floor32(mem[_3705]) + _3705 + 196] = mem[floor32(mem[_3705]) + _3705 + -(mem[_3705] % 32) + 228 len mem[_3705] % 32]
                                    require ext_code.size(address(_3277))
                                    call address(_3277).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0, 0 / 997 * s, address(_3457), 128, mem[_3705], mem[_3705 + 196 len floor32(mem[_3705]) + 32]
                        else:
                            if idx >= mem[96] - 1:
                                require idx < mem[96]
                                _3105 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3282 = mem[(32 * idx + 1) + 128]
                                _3460 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3460 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3460 + 36] = 0 / 997 * s
                                mem[_3460 + 68] = 0
                                mem[_3460 + 100] = address(_3282)
                                mem[_3460 + 132] = 128
                                mem[_3460 + 164] = mem[_3460]
                                t = 0
                                while t < mem[_3460]:
                                    mem[t + _3460 + 196] = mem[t + _3460 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3460] % 32:
                                    require ext_code.size(address(_3105))
                                    call address(_3105).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3282), 128, mem[_3460 + 164 len mem[_3460] + 32]
                                else:
                                    mem[floor32(mem[_3460]) + _3460 + 196] = mem[floor32(mem[_3460]) + _3460 + -(mem[_3460] % 32) + 228 len mem[_3460] % 32]
                                    require ext_code.size(address(_3105))
                                    call address(_3105).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3282), 128, mem[_3460], mem[_3460 + 196 len floor32(mem[_3460]) + 32]
                            else:
                                require idx + 1 < mem[96]
                                require idx < mem[96]
                                _3280 = mem[(32 * idx) + 128]
                                require idx + 1 < mem[96]
                                _3459 = mem[(32 * idx + 1) + 128]
                                _3709 = mem[64]
                                mem[64] = mem[64] + 32
                                mem[_3709 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                                mem[_3709 + 36] = 0 / 997 * s
                                mem[_3709 + 68] = 0
                                mem[_3709 + 100] = address(_3459)
                                mem[_3709 + 132] = 128
                                mem[_3709 + 164] = mem[_3709]
                                t = 0
                                while t < mem[_3709]:
                                    mem[t + _3709 + 196] = mem[t + _3709 + 32]
                                    t = t + 32
                                    continue 
                                if not mem[_3709] % 32:
                                    require ext_code.size(address(_3280))
                                    call address(_3280).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3459), 128, mem[_3709 + 164 len mem[_3709] + 32]
                                else:
                                    mem[floor32(mem[_3709]) + _3709 + 196] = mem[floor32(mem[_3709]) + _3709 + -(mem[_3709] % 32) + 228 len mem[_3709] % 32]
                                    require ext_code.size(address(_3280))
                                    call address(_3280).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                         gas gas_remaining wei
                                        args 0 / 997 * s, 0, address(_3459), 128, mem[_3709], mem[_3709 + 196 len floor32(mem[_3709]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / 997 * s
                        continue 
                    if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                        revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                    if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                        revert with 0, 'SafeMath: addition overflow'
                    require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3452 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3701 = mem[(32 * idx + 1) + 128]
                            _3914 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3914 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3914 + 36] = 0
                            mem[_3914 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            mem[_3914 + 100] = address(_3701)
                            mem[_3914 + 132] = 128
                            mem[_3914 + 164] = mem[_3914]
                            t = 0
                            while t < mem[_3914]:
                                mem[t + _3914 + 196] = mem[t + _3914 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3914] % 32:
                                require ext_code.size(address(_3452))
                                call address(_3452).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3701), 128, mem[_3914 + 164 len mem[_3914] + 32]
                            else:
                                mem[floor32(mem[_3914]) + _3914 + 196] = mem[floor32(mem[_3914]) + _3914 + -(mem[_3914] % 32) + 228 len mem[_3914] % 32]
                                require ext_code.size(address(_3452))
                                call address(_3452).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3701), 128, mem[_3914], mem[_3914 + 196 len floor32(mem[_3914]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3699 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3913 = mem[(32 * idx + 1) + 128]
                        _4125 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4125 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4125 + 36] = 0
                        mem[_4125 + 68] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4125 + 100] = address(_3913)
                        mem[_4125 + 132] = 128
                        mem[_4125 + 164] = mem[_4125]
                        t = 0
                        while t < mem[_4125]:
                            mem[t + _4125 + 196] = mem[t + _4125 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4125] % 32:
                            require ext_code.size(address(_3699))
                            call address(_3699).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3913), 128, mem[_4125 + 164 len mem[_4125] + 32]
                        else:
                            mem[floor32(mem[_4125]) + _4125 + 196] = mem[floor32(mem[_4125]) + _4125 + -(mem[_4125] % 32) + 228 len mem[_4125] % 32]
                            require ext_code.size(address(_3699))
                            call address(_3699).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_3913), 128, mem[_4125], mem[_4125 + 196 len floor32(mem[_4125]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4125]) + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3455 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3704 = mem[(32 * idx + 1) + 128]
                        _3916 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3916 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3916 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_3916 + 68] = 0
                        mem[_3916 + 100] = address(_3704)
                        mem[_3916 + 132] = 128
                        mem[_3916 + 164] = mem[_3916]
                        t = 0
                        while t < mem[_3916]:
                            mem[t + _3916 + 196] = mem[t + _3916 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3916] % 32:
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3704), 128, mem[_3916 + 164 len mem[_3916] + 32]
                        else:
                            mem[floor32(mem[_3916]) + _3916 + 196] = mem[floor32(mem[_3916]) + _3916 + -(mem[_3916] % 32) + 228 len mem[_3916] % 32]
                            require ext_code.size(address(_3455))
                            call address(_3455).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3704), 128, mem[_3916], mem[_3916 + 196 len floor32(mem[_3916]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3702 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3915 = mem[(32 * idx + 1) + 128]
                    _4129 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4129 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4129 + 36] = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    mem[_4129 + 68] = 0
                    mem[_4129 + 100] = address(_3915)
                    mem[_4129 + 132] = 128
                    mem[_4129 + 164] = mem[_4129]
                    t = 0
                    while t < mem[_4129]:
                        mem[t + _4129 + 196] = mem[t + _4129 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4129] % 32:
                        require ext_code.size(address(_3702))
                        call address(_3702).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3915), 128, mem[_4129 + 164 len mem[_4129] + 32]
                    else:
                        mem[floor32(mem[_4129]) + _4129 + 196] = mem[floor32(mem[_4129]) + _4129 + -(mem[_4129] % 32) + 228 len mem[_4129] % 32]
                        require ext_code.size(address(_3702))
                        call address(_3702).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_3915), 128, mem[_4129], mem[_4129 + 196 len floor32(mem[_4129]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4129]) + 1
                    s = 0 / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                    continue 
                if 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s != Mask(112, 0, ext_call.return_data[0]):
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if not Mask(112, 0, ext_call.return_data[32]):
                    if 997 * s < 0:
                        revert with 0, 'SafeMath: addition overflow'
                    require 997 * s
                    require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                    if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                        if idx >= mem[96] - 1:
                            require idx < mem[96]
                            _3446 = mem[(32 * idx) + 128]
                            require idx + 1 < mem[96]
                            _3695 = mem[(32 * idx + 1) + 128]
                            _3910 = mem[64]
                            mem[64] = mem[64] + 32
                            mem[_3910 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                            mem[_3910 + 36] = 0
                            mem[_3910 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            mem[_3910 + 100] = address(_3695)
                            mem[_3910 + 132] = 128
                            mem[_3910 + 164] = mem[_3910]
                            t = 0
                            while t < mem[_3910]:
                                mem[t + _3910 + 196] = mem[t + _3910 + 32]
                                t = t + 32
                                continue 
                            if not mem[_3910] % 32:
                                require ext_code.size(address(_3446))
                                call address(_3446).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3695), 128, mem[_3910 + 164 len mem[_3910] + 32]
                            else:
                                mem[floor32(mem[_3910]) + _3910 + 196] = mem[floor32(mem[_3910]) + _3910 + -(mem[_3910] % 32) + 228 len mem[_3910] % 32]
                                require ext_code.size(address(_3446))
                                call address(_3446).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                     gas gas_remaining wei
                                    args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3695), 128, mem[_3910], mem[_3910 + 196 len floor32(mem[_3910]) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            idx = idx + 1
                            s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                            continue 
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _3693 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3909 = mem[(32 * idx + 1) + 128]
                        _4117 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4117 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4117 + 36] = 0
                        mem[_4117 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_4117 + 100] = address(_3909)
                        mem[_4117 + 132] = 128
                        mem[_4117 + 164] = mem[_4117]
                        t = 0
                        while t < mem[_4117]:
                            mem[t + _4117 + 196] = mem[t + _4117 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4117] % 32:
                            require ext_code.size(address(_3693))
                            call address(_3693).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3909), 128, mem[_4117 + 164 len mem[_4117] + 32]
                        else:
                            mem[floor32(mem[_4117]) + _4117 + 196] = mem[floor32(mem[_4117]) + _4117 + -(mem[_4117] % 32) + 228 len mem[_4117] % 32]
                            require ext_code.size(address(_3693))
                            call address(_3693).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, address(_3909), 128, mem[_4117], mem[_4117 + 196 len floor32(mem[_4117]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        t = ceil32(mem[_4117]) + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3449 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _3698 = mem[(32 * idx + 1) + 128]
                        _3912 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_3912 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_3912 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        mem[_3912 + 68] = 0
                        mem[_3912 + 100] = address(_3698)
                        mem[_3912 + 132] = 128
                        mem[_3912 + 164] = mem[_3912]
                        t = 0
                        while t < mem[_3912]:
                            mem[t + _3912 + 196] = mem[t + _3912 + 32]
                            t = t + 32
                            continue 
                        if not mem[_3912] % 32:
                            require ext_code.size(address(_3449))
                            call address(_3449).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3698), 128, mem[_3912 + 164 len mem[_3912] + 32]
                        else:
                            mem[floor32(mem[_3912]) + _3912 + 196] = mem[floor32(mem[_3912]) + _3912 + -(mem[_3912] % 32) + 228 len mem[_3912] % 32]
                            require ext_code.size(address(_3449))
                            call address(_3449).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3698), 128, mem[_3912], mem[_3912 + 196 len floor32(mem[_3912]) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        idx = idx + 1
                        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                        continue 
                    require idx + 1 < mem[96]
                    require idx < mem[96]
                    _3696 = mem[(32 * idx) + 128]
                    require idx + 1 < mem[96]
                    _3911 = mem[(32 * idx + 1) + 128]
                    _4121 = mem[64]
                    mem[64] = mem[64] + 32
                    mem[_4121 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                    mem[_4121 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    mem[_4121 + 68] = 0
                    mem[_4121 + 100] = address(_3911)
                    mem[_4121 + 132] = 128
                    mem[_4121 + 164] = mem[_4121]
                    t = 0
                    while t < mem[_4121]:
                        mem[t + _4121 + 196] = mem[t + _4121 + 32]
                        t = t + 32
                        continue 
                    if not mem[_4121] % 32:
                        require ext_code.size(address(_3696))
                        call address(_3696).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3911), 128, mem[_4121 + 164 len mem[_4121] + 32]
                    else:
                        mem[floor32(mem[_4121]) + _4121 + 196] = mem[floor32(mem[_4121]) + _4121 + -(mem[_4121] % 32) + 228 len mem[_4121] % 32]
                        require ext_code.size(address(_3696))
                        call address(_3696).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                             gas gas_remaining wei
                            args 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s, 0, address(_3911), 128, mem[_4121], mem[_4121 + 196 len floor32(mem[_4121]) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    t = ceil32(mem[_4121]) + 1
                    s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / 997 * s
                    continue 
                if 1000 * Mask(112, 0, ext_call.return_data[32]) / Mask(112, 0, ext_call.return_data[32]) != 1000:
                    revert with 0, 32, 33, 0x59536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f, mem[mem[64] + 101 len 31]
                if (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])) < 1000 * Mask(112, 0, ext_call.return_data[32]):
                    revert with 0, 'SafeMath: addition overflow'
                require (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                require idx < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
                if mem[(32 * idx) + (32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20] == address(_2507):
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3904 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4113 = mem[(32 * idx + 1) + 128]
                        _4334 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4334 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4334 + 36] = 0
                        mem[_4334 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4334 + 100] = address(_4113)
                        mem[_4334 + 132] = 128
                        mem[_4334 + 164] = mem[_4334]
                        t = 0
                        while t < mem[_4334]:
                            mem[t + _4334 + 196] = mem[t + _4334 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4334] % 32:
                            require ext_code.size(address(_3904))
                            call address(_3904).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4113), 128, mem[_4334 + 164 len mem[_4334] + 32]
                        else:
                            mem[floor32(mem[_4334]) + _4334 + 196] = mem[floor32(mem[_4334]) + _4334 + -(mem[_4334] % 32) + 228 len mem[_4334] % 32]
                            require ext_code.size(address(_3904))
                            call address(_3904).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4113), 128, mem[_4334], mem[_4334 + 196 len floor32(mem[_4334]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4111 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4333 = mem[(32 * idx + 1) + 128]
                        _4529 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4529 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4529 + 36] = 0
                        mem[_4529 + 68] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4529 + 100] = address(_4333)
                        mem[_4529 + 132] = 128
                        mem[_4529 + 164] = mem[_4529]
                        t = 0
                        while t < mem[_4529]:
                            mem[t + _4529 + 196] = mem[t + _4529 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4529] % 32:
                            require ext_code.size(address(_4111))
                            call address(_4111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4333), 128, mem[_4529 + 164 len mem[_4529] + 32]
                        else:
                            mem[floor32(mem[_4529]) + _4529 + 196] = mem[floor32(mem[_4529]) + _4529 + -(mem[_4529] % 32) + 228 len mem[_4529] % 32]
                            require ext_code.size(address(_4111))
                            call address(_4111).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 0, 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), address(_4333), 128, mem[_4529], mem[_4529 + 196 len floor32(mem[_4529]) + 32]
                else:
                    if idx >= mem[96] - 1:
                        require idx < mem[96]
                        _3907 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4116 = mem[(32 * idx + 1) + 128]
                        _4336 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4336 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4336 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4336 + 68] = 0
                        mem[_4336 + 100] = address(_4116)
                        mem[_4336 + 132] = 128
                        mem[_4336 + 164] = mem[_4336]
                        t = 0
                        while t < mem[_4336]:
                            mem[t + _4336 + 196] = mem[t + _4336 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4336] % 32:
                            require ext_code.size(address(_3907))
                            call address(_3907).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4116), 128, mem[_4336 + 164 len mem[_4336] + 32]
                        else:
                            mem[floor32(mem[_4336]) + _4336 + 196] = mem[floor32(mem[_4336]) + _4336 + -(mem[_4336] % 32) + 228 len mem[_4336] % 32]
                            require ext_code.size(address(_3907))
                            call address(_3907).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4116), 128, mem[_4336], mem[_4336 + 196 len floor32(mem[_4336]) + 32]
                    else:
                        require idx + 1 < mem[96]
                        require idx < mem[96]
                        _4114 = mem[(32 * idx) + 128]
                        require idx + 1 < mem[96]
                        _4335 = mem[(32 * idx + 1) + 128]
                        _4533 = mem[64]
                        mem[64] = mem[64] + 32
                        mem[_4533 + 32] = 0x22c0d9f00000000000000000000000000000000000000000000000000000000
                        mem[_4533 + 36] = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
                        mem[_4533 + 68] = 0
                        mem[_4533 + 100] = address(_4335)
                        mem[_4533 + 132] = 128
                        mem[_4533 + 164] = mem[_4533]
                        t = 0
                        while t < mem[_4533]:
                            mem[t + _4533 + 196] = mem[t + _4533 + 32]
                            t = t + 32
                            continue 
                        if not mem[_4533] % 32:
                            require ext_code.size(address(_4114))
                            call address(_4114).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4335), 128, mem[_4533 + 164 len mem[_4533] + 32]
                        else:
                            mem[floor32(mem[_4533]) + _4533 + 196] = mem[floor32(mem[_4533]) + _4533 + -(mem[_4533] % 32) + 228 len mem[_4533] % 32]
                            require ext_code.size(address(_4114))
                            call address(_4114).swap(uint256 arg1, uint256 arg2, address arg3, bytes arg4) with:
                                 gas gas_remaining wei
                                args 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32])), 0, address(_4335), 128, mem[_4533], mem[_4533 + 196 len floor32(mem[_4533]) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        s = 997 * Mask(112, 0, ext_call.return_data[0]) * s / (997 * s) + (1000 * Mask(112, 0, ext_call.return_data[32]))
        continue 
    require 0 < mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
    _2508 = mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 160]
    mem[mem[64] + 4] = this.address
    require ext_code.size(address(_2508))
    staticcall address(_2508).0x70a08231 with:
            gas gas_remaining wei
           args address(this.address)
    mem[mem[64]] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 128]
    require ext_code.size(mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20])
    call mem[(32 * cd[(arg4 + cd[(arg4 + 36)] + 36)]) + 172 len 20].0xa9059cbb with:
         gas gas_remaining wei
        args 0xac8569140dd1681fe072990f40ed6f1e68d2552a, ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    if not ext_call.return_data[0]:
        revert with 0, 32, 33, 0x315472616e7366657248656c7065723a205452414e534645525f4641494c45445f, mem[mem[64] + 101 len 31]
}



}
