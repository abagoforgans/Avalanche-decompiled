contract main {




// =====================  Runtime code  =====================


#
#  - bestTrade(address[] arg1, address[] arg2, address arg3, address arg4, uint256 arg5)
#
uint8 stor0; offset 160
uint128 stor0; offset 160
address owner;
uint256 stor1;
uint256 feePercent_x_100000;
mapping of struct addresses;

function blockStatus() payable {
    if owner != msg.sender:
        revert with 0, 'You is not owner'
    return bool(uint8(stor0.field_160))
}

function addresses(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return addresses[arg1].field_0, bool(addresses[arg1].field_160)
}

function owner() payable {
    return owner
}

function feePercent_x_100000() payable {
    return feePercent_x_100000
}

function _fallback() payable {
    revert
}

function getBalanceEth(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    return eth.balance(arg1)
}

function toggleBlock() payable {
    if owner != msg.sender:
        revert with 0, 'You is not owner'
    Mask(96, 0, stor0.field_160) = Mask(96, 0, not bool(uint8(stor0.field_160)))
}

function attachAddress(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    addresses[address(arg1)].field_0 = msg.sender
    addresses[address(arg1)].field_160 = 1
}

function changeFeeX100000(uint256 arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'You is not owner'
    feePercent_x_100000 = arg1
}

function transferOwnership(address arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 == arg1
    if owner != msg.sender:
        revert with 0, 'You is not owner'
    require arg1
    owner = arg1
}

function exchangeV2(address[] arg1, uint256 arg2, uint256 arg3, address arg4, bool arg5, bool arg6) payable {
    require calldata.size - 4 >= 192
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    require arg5 == arg5
    require arg6 == arg6
    return 0
}

function getMassBalancesEth(address[] arg1) payable {
    require calldata.size - 4 >= 32
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[(32 * arg1.length) + 128 len 6400] = call.data[calldata.size len 6400]
    mem[(32 * arg1.length) + 6528 len 6400] = call.data[calldata.size len 6400]
    idx = 0
    while idx < arg1.length:
        require idx < arg1.length
        require idx < 200
        mem[(32 * idx) + (32 * arg1.length) + 6528] = eth.balance(mem[(32 * idx) + 128])
        idx = idx + 1
        continue 
    return memory
      from (32 * arg1.length) + 6528
       len 6400
}

function getMassBalancesErc20(address[] arg1, address[] arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    mem[96] = arg1.length
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require (32 * arg1.length) + (32 * arg2.length) + 160 <= test266151307() and (32 * arg2.length) + 160 >= 128
    mem[(32 * arg1.length) + 128] = arg2.length
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    idx = 0
    s = arg2 + 36
    t = (32 * arg1.length) + 160
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[(32 * arg1.length) + (32 * arg2.length) + 160 len 6400] = call.data[calldata.size len 6400]
    mem[64] = (32 * arg1.length) + (32 * arg2.length) + 12960
    mem[(32 * arg1.length) + (32 * arg2.length) + 6560 len 6400] = call.data[calldata.size len 6400]
    idx = 0
    while idx < arg1.length:
        require idx < mem[(32 * arg1.length) + 128]
        _45 = mem[(32 * idx) + (32 * arg1.length) + 160]
        require idx < mem[96]
        _47 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = mem[(32 * idx) + 140 len 20]
        require ext_code.size(address(_45))
        staticcall address(_45).0x70a08231 with:
                gas gas_remaining wei
               args address(_47)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _51 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_51] == mem[_51]
        require idx < 200
        mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 6560] = mem[_51]
        idx = idx + 1
        continue 
    mem[mem[64] len 6400] = mem[(32 * arg1.length) + (32 * arg2.length) + 6560 len 6400]
    return memory
      from mem[64]
       len 6400
}

function bestPriceBetween2Tokens(address[] arg1, address arg2, address arg3, uint256 arg4) payable {
    require calldata.size - 4 >= 128
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    mem[96] = arg1.length
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    mem[(32 * arg1.length) + 128] = 0
    mem[(32 * arg1.length) + 160] = 0
    if arg2 != arg3:
        mem[(32 * arg1.length) + 192] = 2
        mem[64] = (32 * arg1.length) + 288
        mem[(32 * arg1.length) + 224] = arg2
        mem[(32 * arg1.length) + 256] = arg3
        idx = 0
        while idx < arg1.length:
            require idx < mem[96]
            _66 = mem[(32 * idx) + 128]
            _67 = mem[64]
            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = arg4
            mem[mem[64] + 36] = 64
            _70 = mem[(32 * arg1.length) + 192]
            mem[mem[64] + 68] = mem[(32 * arg1.length) + 192]
            s = 0
            t = (32 * arg1.length) + 224
            u = mem[64] + 100
            while s < _70:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            require ext_code.size(address(_66))
            staticcall address(_66).mem[mem[64] len 4] with:
                    gas gas_remaining wei
                   args mem[mem[64] + 4 len _67 + (32 * _70) + -mem[64] + 96]
            if not ext_call.success:
                idx = idx + 1
                continue 
            _87 = mem[64]
            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
            mem[64] = mem[64] + ceil32(return_data.size)
            require return_data.size >= 32
            _88 = mem[_87]
            require mem[_87] <= test266151307()
            require _87 + mem[_87] + 31 < _87 + return_data.size
            _89 = mem[_87 + mem[_87]]
            require mem[_87 + mem[_87]] <= test266151307()
            require _87 + ceil32(return_data.size) + (32 * mem[_87 + mem[_87]]) + 32 <= test266151307() and (32 * mem[_87 + mem[_87]]) + 32 >= 0
            mem[64] = _87 + ceil32(return_data.size) + (32 * mem[_87 + mem[_87]]) + 32
            mem[_87 + ceil32(return_data.size)] = _89
            require _88 + (32 * _89) + 32 <= return_data.size
            s = 0
            t = _87 + _88 + 32
            u = _87 + ceil32(return_data.size) + 32
            while s < _89:
                require mem[t] == mem[t]
                mem[u] = mem[t]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            if _89 < 2:
                idx = idx + 1
                continue 
            if 1 < _89:
                if mem[_87 + ceil32(return_data.size) + 64] <= 0:
                    idx = idx + 1
                    continue 
                if idx < mem[96]:
                    idx = idx + 1
                    continue 
            revert
    return 0
}

function returnErc20(address[] arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    mem[64] = (32 * arg1.length) + 128
    mem[96] = arg1.length
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'You is not owner'
    idx = 0
    while idx < arg1.length:
        require idx < mem[96]
        _101 = mem[(32 * idx) + 128]
        require idx < mem[96]
        _103 = mem[(32 * idx) + 128]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_103))
        staticcall address(_103).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _106 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _107 = mem[_106]
        require mem[_106] == mem[_106]
        _108 = mem[64]
        mem[mem[64] + 36] = arg2
        mem[mem[64] + 68] = _107
        _109 = mem[64]
        mem[mem[64]] = 68
        mem[64] = mem[64] + 100
        mem[_109 + 32] = mem[_109 + 36 len 28] or 0xa9059cbb00000000000000000000000000000000000000000000000000000000
        _112 = mem[_109]
        s = 0
        while s < _112:
            mem[_108 + s + 100] = mem[_109 + s + 32]
            s = s + 32
            continue 
        if ceil32(_112) <= _112:
            call address(_101).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _108 + _112 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
                if mem[96]:
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
            else:
                _148 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_148] = return_data.size
                mem[_148 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
                if return_data.size:
                    require return_data.size >= 32
                    require mem[_148 + 32] == bool(mem[_148 + 32])
                    if not mem[_148 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
        else:
            mem[_108 + _112 + 100] = 0
            call address(_101).mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _108 + _112 + -mem[64] + 96]
            if not return_data.size:
                if not ext_call.success:
                    revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
                if mem[96]:
                    require mem[96] >= 32
                    require mem[128] == bool(mem[128])
                    if not mem[128]:
                        revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
            else:
                _150 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size) + 1
                mem[_150] = return_data.size
                mem[_150 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                if not ext_call.success:
                    revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
                if return_data.size:
                    require return_data.size >= 32
                    require mem[_150 + 32] == bool(mem[_150 + 32])
                    if not mem[_150 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeTransfer: transfer failed'
        idx = idx + 1
        continue 
}

function exchangeV3(bytes arg1, address arg2, uint256 arg3, uint256 arg4, address arg5, bool arg6) payable {
    require calldata.size - 4 >= 192
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require ceil32(arg1.length) + 128 <= test266151307() and ceil32(arg1.length) + 128 >= 96
    require arg1 + arg1.length + 36 <= calldata.size
    mem[128 len arg1.length] = arg1[all]
    mem[arg1.length + 128] = 0
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    require arg5 == arg5
    require arg6 == arg6
    if not addresses[address(msg.sender)].field_160:
        revert with 0, 'Not attached feeAddress'
    if uint8(stor0.field_160):
        revert with 0, 'Contract is blocked'
    require stor1
    mem[ceil32(arg1.length) + 164] = addresses[address(msg.sender)].field_0
    mem[ceil32(arg1.length) + 196] = this.address
    mem[ceil32(arg1.length) + 228] = arg3
    mem[ceil32(arg1.length) + 128] = 100
    mem[ceil32(arg1.length) + 164 len 28] = addresses[address(msg.sender)].field_0
    mem[ceil32(arg1.length) + 160 len 4] = unknown_0x23b872dd(?????)
    mem[ceil32(arg1.length) + 260 len ceil32(Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)])] = mem[ceil32(arg1.length) + 160 len ceil32(Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)])]
    if ceil32(Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)]) > Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)]:
        mem[ceil32(arg1.length) + Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)] + 260] = 0
    call arg2.mem[ceil32(arg1.length) + 260 len 4] with:
         gas gas_remaining wei
        args mem[ceil32(arg1.length) + 264 len Mask(8 * -ceil32(arg1.length) + arg1.length + 32, 0, 0), mem[arg1.length + 160 len -arg1.length + ceil32(arg1.length)] - 4]
    if arg6:
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if arg1.length:
                require arg1.length >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            require ext_code.size(arg2)
            call arg2.0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg5
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] < arg3 - (arg3 * feePercent_x_100000 / stor1 / 2):
                mem[ceil32(arg1.length) + ceil32(return_data.size) + 360 len 96] = 0, address(arg5), (100 * arg3) - (100 * arg3 * feePercent_x_100000 / stor1 / 2), mem[ceil32(arg1.length) + ceil32(return_data.size) + 360 len 28]
                call arg2.mem[ceil32(arg1.length) + ceil32(return_data.size) + 360 len 4] with:
                     gas gas_remaining wei
                    args mem[ceil32(arg1.length) + ceil32(return_data.size) + 364 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                else:
                    mem[ceil32(arg1.length) + ceil32(return_data.size) + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[ceil32(arg1.length) + ceil32(return_data.size) + 392] == bool(mem[ceil32(arg1.length) + ceil32(return_data.size) + 392])
                        if not mem[ceil32(arg1.length) + ceil32(return_data.size) + 392]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
        else:
            mem[ceil32(arg1.length) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if return_data.size:
                require return_data.size >= 32
                require mem[ceil32(arg1.length) + 292] == bool(mem[ceil32(arg1.length) + 292])
                if not mem[ceil32(arg1.length) + 292]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            require ext_code.size(arg2)
            call arg2.0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg5
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] < arg3 - (arg3 * feePercent_x_100000 / stor1 / 2):
                mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 361 len 96] = 0, address(arg5), (100 * arg3) - (100 * arg3 * feePercent_x_100000 / stor1 / 2), mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 361 len 28]
                call arg2.mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 361 len 4] with:
                     gas gas_remaining wei
                    args mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 365 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                else:
                    mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393] == bool(mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393])
                        if not mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
        require ext_code.size(arg5)
        call arg5.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
             gas gas_remaining wei
            args 32, 160, addresses[address(msg.sender)].field_0, block.timestamp + 120, arg3 - (arg3 * feePercent_x_100000 / stor1 / 2), arg4, arg1.length, arg1[all], mem[arg1.length + 128 len ceil32(arg1.length) - arg1.length]
    else:
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if arg1.length:
                require arg1.length >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            require ext_code.size(arg2)
            call arg2.0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg5
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] < arg3 - (arg3 * feePercent_x_100000 / stor1):
                mem[ceil32(arg1.length) + ceil32(return_data.size) + 360 len 96] = 0, address(arg5), (100 * arg3) - (100 * arg3 * feePercent_x_100000 / stor1), mem[ceil32(arg1.length) + ceil32(return_data.size) + 360 len 28]
                call arg2.mem[ceil32(arg1.length) + ceil32(return_data.size) + 360 len 4] with:
                     gas gas_remaining wei
                    args mem[ceil32(arg1.length) + ceil32(return_data.size) + 364 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                else:
                    mem[ceil32(arg1.length) + ceil32(return_data.size) + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[ceil32(arg1.length) + ceil32(return_data.size) + 392] == bool(mem[ceil32(arg1.length) + ceil32(return_data.size) + 392])
                        if not mem[ceil32(arg1.length) + ceil32(return_data.size) + 392]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
        else:
            mem[ceil32(arg1.length) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if return_data.size:
                require return_data.size >= 32
                require mem[ceil32(arg1.length) + 292] == bool(mem[ceil32(arg1.length) + 292])
                if not mem[ceil32(arg1.length) + 292]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            require ext_code.size(arg2)
            call arg2.0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg5
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] < arg3 - (arg3 * feePercent_x_100000 / stor1):
                mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 361 len 96] = 0, address(arg5), (100 * arg3) - (100 * arg3 * feePercent_x_100000 / stor1), mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 361 len 28]
                call arg2.mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 361 len 4] with:
                     gas gas_remaining wei
                    args mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 365 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                else:
                    mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393] == bool(mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393])
                        if not mem[ceil32(arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
        require ext_code.size(arg5)
        call arg5.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
             gas gas_remaining wei
            args 32, 160, addresses[address(msg.sender)].field_0, block.timestamp + 120, arg3 - (arg3 * feePercent_x_100000 / stor1), arg4, arg1.length, arg1[all], mem[arg1.length + 128 len ceil32(arg1.length) - arg1.length]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
}

function swapV2Erc20(address[][] arg1, address arg2) payable {
    require calldata.size - 4 >= 64
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    mem[64] = (32 * arg1.length) + 128
    mem[96] = arg1.length
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require arg1 + cd[s] + 67 < calldata.size
        require cd[(arg1 + cd[s] + 36)] <= test266151307()
        _114 = mem[64]
        require mem[64] + (32 * cd[(arg1 + cd[s] + 36)]) + 32 <= test266151307() and mem[64] + (32 * cd[(arg1 + cd[s] + 36)]) + 32 >= mem[64]
        mem[64] = mem[64] + (32 * cd[(arg1 + cd[s] + 36)]) + 32
        mem[_114] = cd[(arg1 + cd[s] + 36)]
        require arg1 + cd[s] + (32 * cd[(arg1 + cd[s] + 36)]) + 68 <= calldata.size
        u = 0
        v = arg1 + cd[s] + 68
        w = _114 + 32
        while u < cd[(arg1 + cd[s] + 36)]:
            require cd[v] == address(cd[v])
            mem[w] = cd[v]
            u = u + 1
            v = v + 32
            w = w + 32
            continue 
        mem[t] = _114
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 == arg2
    if owner != msg.sender:
        revert with 0, 'You is not owner'
    _115 = mem[96]
    idx = 0
    while idx < _115:
        require idx < mem[96]
        require 0 < mem[mem[(32 * idx) + 128]]
        _229 = mem[mem[(32 * idx) + 128] + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_229))
        staticcall address(_229).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _232 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _233 = mem[_232]
        require mem[_232] == mem[_232]
        mem[mem[64] + 4] = this.address
        mem[mem[64] + 36] = arg2
        require ext_code.size(address(_229))
        call address(_229).0xdd62ed3e with:
             gas gas_remaining wei
            args address(this.address), arg2
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _236 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_236] == mem[_236]
        require idx < mem[96]
        if mem[_236] >= _233:
            _240 = mem[(32 * idx) + 128]
            _241 = mem[64]
            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = _233
            mem[mem[64] + 36] = 0
            mem[mem[64] + 68] = 160
            _246 = mem[_240]
            mem[mem[64] + 164] = mem[_240]
            s = 0
            t = _240 + 32
            u = mem[64] + 196
            while s < _246:
                mem[u] = mem[t + 12 len 20]
                s = s + 1
                t = t + 32
                u = u + 32
                continue 
            mem[_241 + 100] = msg.sender
            mem[_241 + 132] = block.timestamp + 1
            require ext_code.size(arg2)
            call arg2.mem[mem[64] len 4] with:
                 gas gas_remaining wei
                args mem[mem[64] + 4 len _241 + (32 * _246) + -mem[64] + 192]
        else:
            require 0 < mem[mem[(32 * idx) + 128]]
            _244 = mem[mem[(32 * idx) + 128] + 32]
            _245 = mem[64]
            mem[mem[64] + 36] = arg2
            mem[mem[64] + 68] = 100 * _233
            _247 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_247 + 32] = mem[_247 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _250 = mem[_247]
            s = 0
            while s < _250:
                mem[_245 + s + 100] = mem[_247 + s + 32]
                s = s + 32
                continue 
            if ceil32(_250) <= _250:
                call address(_244).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _245 + _250 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not mem[96]:
                        require idx < mem[96]
                        _358 = mem[(32 * idx) + 128]
                        _359 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _389 = mem[_358]
                        mem[mem[64] + 164] = mem[_358]
                        s = 0
                        t = _358 + 32
                        u = mem[64] + 196
                        while s < _389:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_359 + 100] = msg.sender
                        mem[_359 + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _359 + (32 * _389) + -mem[64] + 192]
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx < mem[96]
                        _379 = mem[(32 * idx) + 128]
                        _380 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _401 = mem[_379]
                        mem[mem[64] + 164] = mem[_379]
                        s = 0
                        t = _379 + 32
                        u = mem[64] + 196
                        while s < _401:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_380 + 100] = msg.sender
                        mem[_380 + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _380 + (32 * _401) + -mem[64] + 192]
                else:
                    _337 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_337] = return_data.size
                    mem[_337 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx < mem[96]
                        _360 = mem[(32 * idx) + 128]
                        _361 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _390 = mem[_360]
                        mem[mem[64] + 164] = mem[_360]
                        s = 0
                        t = _360 + 32
                        u = mem[64] + 196
                        while s < _390:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_361 + 100] = msg.sender
                        mem[_361 + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _361 + (32 * _390) + -mem[64] + 192]
                    else:
                        require return_data.size >= 32
                        require mem[_337 + 32] == bool(mem[_337 + 32])
                        if not mem[_337 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx < mem[96]
                        _381 = mem[(32 * idx) + 128]
                        _382 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _402 = mem[_381]
                        mem[mem[64] + 164] = mem[_381]
                        s = 0
                        t = _381 + 32
                        u = mem[64] + 196
                        while s < _402:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_382 + 100] = msg.sender
                        mem[_382 + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _382 + (32 * _402) + -mem[64] + 192]
            else:
                mem[_245 + _250 + 100] = 0
                call address(_244).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _245 + _250 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not mem[96]:
                        require idx < mem[96]
                        _366 = mem[(32 * idx) + 128]
                        _367 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _393 = mem[_366]
                        mem[mem[64] + 164] = mem[_366]
                        s = 0
                        t = _366 + 32
                        u = mem[64] + 196
                        while s < _393:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_367 + 100] = msg.sender
                        mem[_367 + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _367 + (32 * _393) + -mem[64] + 192]
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx < mem[96]
                        _385 = mem[(32 * idx) + 128]
                        _386 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _403 = mem[_385]
                        mem[mem[64] + 164] = mem[_385]
                        s = 0
                        t = _385 + 32
                        u = mem[64] + 196
                        while s < _403:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_386 + 100] = msg.sender
                        mem[_386 + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _386 + (32 * _403) + -mem[64] + 192]
                else:
                    _339 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_339] = return_data.size
                    mem[_339 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx < mem[96]
                        _368 = mem[(32 * idx) + 128]
                        _369 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _394 = mem[_368]
                        mem[mem[64] + 164] = mem[_368]
                        s = 0
                        t = _368 + 32
                        u = mem[64] + 196
                        while s < _394:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_369 + 100] = msg.sender
                        mem[_369 + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _369 + (32 * _394) + -mem[64] + 192]
                    else:
                        require return_data.size >= 32
                        require mem[_339 + 32] == bool(mem[_339 + 32])
                        if not mem[_339 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx < mem[96]
                        _387 = mem[(32 * idx) + 128]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = _233
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _404 = mem[_387]
                        mem[mem[64] + 164] = mem[_387]
                        s = 0
                        t = _387 + 32
                        u = mem[64] + 196
                        while s < _404:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[mem[64] + 100] = msg.sender
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(arg2)
                        call arg2.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args _233, 0, 160, msg.sender, block.timestamp + 1, mem[mem[64] + 164 len (32 * _404) + 32]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        idx = idx + 1
        continue 
}

function swapV3Erc20(bytes[] arg1, address[] arg2, address arg3) payable {
    require calldata.size - 4 >= 96
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    mem[64] = (32 * arg1.length) + 128
    mem[96] = arg1.length
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require arg1 + cd[s] + 67 < calldata.size
        require cd[(arg1 + cd[s] + 36)] <= test266151307()
        _246 = mem[64]
        require mem[64] + ceil32(cd[(arg1 + cd[s] + 36)]) + 32 <= test266151307() and mem[64] + ceil32(cd[(arg1 + cd[s] + 36)]) + 32 >= mem[64]
        mem[64] = mem[64] + ceil32(cd[(arg1 + cd[s] + 36)]) + 32
        mem[_246] = cd[(arg1 + cd[s] + 36)]
        require arg1 + cd[s] + cd[(arg1 + cd[s] + 36)] + 68 <= calldata.size
        mem[_246 + 32 len cd[(arg1 + cd[s] + 36)]] = call.data[arg1 + cd[s] + 68 len cd[(arg1 + cd[s] + 36)]]
        mem[_246 + cd[(arg1 + cd[s] + 36)] + 32] = 0
        mem[t] = _246
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    _247 = mem[64]
    require mem[64] + (32 * arg2.length) + 32 <= test266151307() and mem[64] + (32 * arg2.length) + 32 >= mem[64]
    mem[64] = mem[64] + (32 * arg2.length) + 32
    mem[_247] = arg2.length
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    idx = 0
    s = arg2 + 36
    t = _247 + 32
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg3 == arg3
    if owner != msg.sender:
        revert with 0, 'You is not owner'
    _490 = mem[96]
    idx = 0
    while idx < _490:
        require idx < mem[_247]
        _733 = mem[(32 * idx) + _247 + 32]
        mem[mem[64] + 4] = this.address
        require ext_code.size(address(_733))
        staticcall address(_733).0x70a08231 with:
                gas gas_remaining wei
               args address(this.address)
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _736 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        _737 = mem[_736]
        require mem[_736] == mem[_736]
        mem[mem[64] + 4] = this.address
        mem[mem[64] + 36] = arg3
        require ext_code.size(address(_733))
        call address(_733).0xdd62ed3e with:
             gas gas_remaining wei
            args address(this.address), arg3
        mem[mem[64]] = ext_call.return_data[0]
        if not ext_call.success:
            revert with ext_call.return_data[0 len return_data.size]
        _740 = mem[64]
        mem[64] = mem[64] + ceil32(return_data.size)
        require return_data.size >= 32
        require mem[_740] == mem[_740]
        if mem[_740] >= _737:
            _742 = mem[64]
            mem[64] = mem[64] + 160
            require idx < mem[96]
            mem[_742] = mem[(32 * idx) + 128]
            mem[_742 + 32] = msg.sender
            mem[_742 + 64] = block.timestamp + 1
            mem[_742 + 96] = _737
            mem[_742 + 128] = 0
            _746 = mem[64]
            mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
            mem[mem[64] + 4] = 32
            _749 = mem[_742]
            mem[mem[64] + 36] = 160
            _750 = mem[_749]
            mem[mem[64] + 196] = mem[_749]
            s = 0
            while s < _750:
                mem[mem[64] + s + 228] = mem[_749 + s + 32]
                s = s + 32
                continue 
            if ceil32(_750) <= _750:
                mem[_746 + 68] = mem[_742 + 44 len 20]
                mem[_746 + 100] = mem[_742 + 64]
                mem[_746 + 132] = mem[_742 + 96]
                mem[_746 + 164] = mem[_742 + 128]
                require ext_code.size(arg3)
                call arg3.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _746 + ceil32(_750) + -mem[64] + 224]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1057 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1057] == mem[_1057]
            else:
                mem[_746 + _750 + 228] = 0
                mem[_746 + 68] = mem[_742 + 44 len 20]
                mem[_746 + 100] = mem[_742 + 64]
                mem[_746 + 132] = mem[_742 + 96]
                mem[_746 + 164] = mem[_742 + 128]
                require ext_code.size(arg3)
                call arg3.mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _746 + ceil32(_750) + -mem[64] + 224]
                mem[mem[64]] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                _1062 = mem[64]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                require mem[_1062] == mem[_1062]
        else:
            require idx < mem[_247]
            _747 = mem[(32 * idx) + _247 + 32]
            _748 = mem[64]
            mem[mem[64] + 36] = arg3
            mem[mem[64] + 68] = 100 * _737
            _752 = mem[64]
            mem[mem[64]] = 68
            mem[64] = mem[64] + 100
            mem[_752 + 32] = mem[_752 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
            _757 = mem[_752]
            s = 0
            while s < _757:
                mem[_748 + s + 100] = mem[_752 + s + 32]
                s = s + 32
                continue 
            if ceil32(_757) <= _757:
                call address(_747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _748 + _757 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not mem[96]:
                        _995 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_995] = mem[(32 * idx) + 128]
                        mem[_995 + 32] = msg.sender
                        mem[_995 + 64] = block.timestamp + 1
                        mem[_995 + 96] = _737
                        mem[_995 + 128] = 0
                        _1002 = mem[64]
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1016 = mem[_995]
                        mem[mem[64] + 36] = 160
                        _1023 = mem[_1016]
                        mem[mem[64] + 196] = mem[_1016]
                        s = 0
                        while s < _1023:
                            mem[mem[64] + s + 228] = mem[_1016 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1023) <= _1023:
                            mem[_1002 + 68] = mem[_995 + 44 len 20]
                            mem[_1002 + 100] = mem[_995 + 64]
                            mem[_1002 + 132] = mem[_995 + 96]
                            mem[_1002 + 164] = mem[_995 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1002 + ceil32(_1023) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1275 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1275] == mem[_1275]
                        else:
                            mem[_1002 + _1023 + 228] = 0
                            mem[_1002 + 68] = mem[_995 + 44 len 20]
                            mem[_1002 + 100] = mem[_995 + 64]
                            mem[_1002 + 132] = mem[_995 + 96]
                            mem[_1002 + 164] = mem[_995 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1002 + ceil32(_1023) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1283 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1283] == mem[_1283]
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        _1034 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_1034] = mem[(32 * idx) + 128]
                        mem[_1034 + 32] = msg.sender
                        mem[_1034 + 64] = block.timestamp + 1
                        mem[_1034 + 96] = _737
                        mem[_1034 + 128] = 0
                        _1040 = mem[64]
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1055 = mem[_1034]
                        mem[mem[64] + 36] = 160
                        _1064 = mem[_1055]
                        mem[mem[64] + 196] = mem[_1055]
                        s = 0
                        while s < _1064:
                            mem[mem[64] + s + 228] = mem[_1055 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1064) <= _1064:
                            mem[_1040 + 68] = mem[_1034 + 44 len 20]
                            mem[_1040 + 100] = mem[_1034 + 64]
                            mem[_1040 + 132] = mem[_1034 + 96]
                            mem[_1040 + 164] = mem[_1034 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1040 + ceil32(_1064) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1276 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1276] == mem[_1276]
                        else:
                            mem[_1040 + _1064 + 228] = 0
                            mem[_1040 + 68] = mem[_1034 + 44 len 20]
                            mem[_1040 + 100] = mem[_1034 + 64]
                            mem[_1040 + 132] = mem[_1034 + 96]
                            mem[_1040 + 164] = mem[_1034 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1040 + ceil32(_1064) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1284 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1284] == mem[_1284]
                else:
                    _975 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_975] = return_data.size
                    mem[_975 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        _997 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_997] = mem[(32 * idx) + 128]
                        mem[_997 + 32] = msg.sender
                        mem[_997 + 64] = block.timestamp + 1
                        mem[_997 + 96] = _737
                        mem[_997 + 128] = 0
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1017 = mem[_997]
                        mem[mem[64] + 36] = 160
                        _1024 = mem[_1017]
                        mem[mem[64] + 196] = mem[_1017]
                        s = 0
                        while s < _1024:
                            mem[mem[64] + s + 228] = mem[_1017 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1024) <= _1024:
                            mem[mem[64] + 68] = mem[_997 + 44 len 20]
                            mem[mem[64] + 100] = mem[_997 + 64]
                            mem[mem[64] + 132] = mem[_997 + 96]
                            mem[mem[64] + 164] = mem[_997 + 128]
                            require ext_code.size(arg3)
                            call arg3.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 32, 160, mem[mem[64] + 68 len ceil32(_1024) + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1277 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1277] == mem[_1277]
                        else:
                            mem[mem[64] + _1024 + 228] = 0
                            mem[mem[64] + 68] = mem[_997 + 44 len 20]
                            mem[mem[64] + 100] = mem[_997 + 64]
                            mem[mem[64] + 132] = mem[_997 + 96]
                            mem[mem[64] + 164] = mem[_997 + 128]
                            require ext_code.size(arg3)
                            call arg3.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 32, 160, mem[mem[64] + 68 len ceil32(_1024) + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1285 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1285] == mem[_1285]
                    else:
                        require return_data.size >= 32
                        require mem[_975 + 32] == bool(mem[_975 + 32])
                        if not mem[_975 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        _1037 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_1037] = mem[(32 * idx) + 128]
                        mem[_1037 + 32] = msg.sender
                        mem[_1037 + 64] = block.timestamp + 1
                        mem[_1037 + 96] = _737
                        mem[_1037 + 128] = 0
                        _1042 = mem[64]
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1056 = mem[_1037]
                        mem[mem[64] + 36] = 160
                        _1066 = mem[_1056]
                        mem[mem[64] + 196] = mem[_1056]
                        s = 0
                        while s < _1066:
                            mem[mem[64] + s + 228] = mem[_1056 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1066) <= _1066:
                            mem[_1042 + 68] = mem[_1037 + 44 len 20]
                            mem[_1042 + 100] = mem[_1037 + 64]
                            mem[_1042 + 132] = mem[_1037 + 96]
                            mem[_1042 + 164] = mem[_1037 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1042 + ceil32(_1066) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1278 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1278] == mem[_1278]
                        else:
                            mem[_1042 + _1066 + 228] = 0
                            mem[_1042 + 68] = mem[_1037 + 44 len 20]
                            mem[_1042 + 100] = mem[_1037 + 64]
                            mem[_1042 + 132] = mem[_1037 + 96]
                            mem[_1042 + 164] = mem[_1037 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1042 + ceil32(_1066) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1286 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1286] == mem[_1286]
            else:
                mem[_748 + _757 + 100] = 0
                call address(_747).mem[mem[64] len 4] with:
                     gas gas_remaining wei
                    args mem[mem[64] + 4 len _748 + _757 + -mem[64] + 96]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not mem[96]:
                        _1005 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_1005] = mem[(32 * idx) + 128]
                        mem[_1005 + 32] = msg.sender
                        mem[_1005 + 64] = block.timestamp + 1
                        mem[_1005 + 96] = _737
                        mem[_1005 + 128] = 0
                        _1012 = mem[64]
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1021 = mem[_1005]
                        mem[mem[64] + 36] = 160
                        _1025 = mem[_1021]
                        mem[mem[64] + 196] = mem[_1021]
                        s = 0
                        while s < _1025:
                            mem[mem[64] + s + 228] = mem[_1021 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1025) <= _1025:
                            mem[_1012 + 68] = mem[_1005 + 44 len 20]
                            mem[_1012 + 100] = mem[_1005 + 64]
                            mem[_1012 + 132] = mem[_1005 + 96]
                            mem[_1012 + 164] = mem[_1005 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1012 + ceil32(_1025) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1279 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1279] == mem[_1279]
                        else:
                            mem[_1012 + _1025 + 228] = 0
                            mem[_1012 + 68] = mem[_1005 + 44 len 20]
                            mem[_1012 + 100] = mem[_1005 + 64]
                            mem[_1012 + 132] = mem[_1005 + 96]
                            mem[_1012 + 164] = mem[_1005 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1012 + ceil32(_1025) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1287 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1287] == mem[_1287]
                    else:
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        _1044 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_1044] = mem[(32 * idx) + 128]
                        mem[_1044 + 32] = msg.sender
                        mem[_1044 + 64] = block.timestamp + 1
                        mem[_1044 + 96] = _737
                        mem[_1044 + 128] = 0
                        _1051 = mem[64]
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1060 = mem[_1044]
                        mem[mem[64] + 36] = 160
                        _1072 = mem[_1060]
                        mem[mem[64] + 196] = mem[_1060]
                        s = 0
                        while s < _1072:
                            mem[mem[64] + s + 228] = mem[_1060 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1072) <= _1072:
                            mem[_1051 + 68] = mem[_1044 + 44 len 20]
                            mem[_1051 + 100] = mem[_1044 + 64]
                            mem[_1051 + 132] = mem[_1044 + 96]
                            mem[_1051 + 164] = mem[_1044 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1051 + ceil32(_1072) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1280 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1280] == mem[_1280]
                        else:
                            mem[_1051 + _1072 + 228] = 0
                            mem[_1051 + 68] = mem[_1044 + 44 len 20]
                            mem[_1051 + 100] = mem[_1044 + 64]
                            mem[_1051 + 132] = mem[_1044 + 96]
                            mem[_1051 + 164] = mem[_1044 + 128]
                            require ext_code.size(arg3)
                            call arg3.mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _1051 + ceil32(_1072) + -mem[64] + 224]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1288 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1288] == mem[_1288]
                else:
                    _978 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_978] = return_data.size
                    mem[_978 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        _1007 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_1007] = mem[(32 * idx) + 128]
                        mem[_1007 + 32] = msg.sender
                        mem[_1007 + 64] = block.timestamp + 1
                        mem[_1007 + 96] = _737
                        mem[_1007 + 128] = 0
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1022 = mem[_1007]
                        mem[mem[64] + 36] = 160
                        _1026 = mem[_1022]
                        mem[mem[64] + 196] = mem[_1022]
                        s = 0
                        while s < _1026:
                            mem[mem[64] + s + 228] = mem[_1022 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1026) <= _1026:
                            mem[mem[64] + 68] = mem[_1007 + 44 len 20]
                            mem[mem[64] + 100] = mem[_1007 + 64]
                            mem[mem[64] + 132] = mem[_1007 + 96]
                            mem[mem[64] + 164] = mem[_1007 + 128]
                            require ext_code.size(arg3)
                            call arg3.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 32, 160, mem[mem[64] + 68 len ceil32(_1026) + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1281 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1281] == mem[_1281]
                        else:
                            mem[mem[64] + _1026 + 228] = 0
                            mem[mem[64] + 68] = mem[_1007 + 44 len 20]
                            mem[mem[64] + 100] = mem[_1007 + 64]
                            mem[mem[64] + 132] = mem[_1007 + 96]
                            mem[mem[64] + 164] = mem[_1007 + 128]
                            require ext_code.size(arg3)
                            call arg3.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 32, 160, mem[mem[64] + 68 len ceil32(_1026) + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1289 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1289] == mem[_1289]
                    else:
                        require return_data.size >= 32
                        require mem[_978 + 32] == bool(mem[_978 + 32])
                        if not mem[_978 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        _1047 = mem[64]
                        mem[64] = mem[64] + 160
                        require idx < mem[96]
                        mem[_1047] = mem[(32 * idx) + 128]
                        mem[_1047 + 32] = msg.sender
                        mem[_1047 + 64] = block.timestamp + 1
                        mem[_1047 + 96] = _737
                        mem[_1047 + 128] = 0
                        mem[mem[64]] = 0xc04b8d5900000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = 32
                        _1061 = mem[_1047]
                        mem[mem[64] + 36] = 160
                        _1074 = mem[_1061]
                        mem[mem[64] + 196] = mem[_1061]
                        s = 0
                        while s < _1074:
                            mem[mem[64] + s + 228] = mem[_1061 + s + 32]
                            s = s + 32
                            continue 
                        if ceil32(_1074) <= _1074:
                            mem[mem[64] + 68] = mem[_1047 + 44 len 20]
                            mem[mem[64] + 100] = mem[_1047 + 64]
                            mem[mem[64] + 132] = mem[_1047 + 96]
                            mem[mem[64] + 164] = mem[_1047 + 128]
                            require ext_code.size(arg3)
                            call arg3.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 32, 160, mem[mem[64] + 68 len ceil32(_1074) + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1282 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1282] == mem[_1282]
                        else:
                            mem[mem[64] + _1074 + 228] = 0
                            mem[mem[64] + 68] = mem[_1047 + 44 len 20]
                            mem[mem[64] + 100] = mem[_1047 + 64]
                            mem[mem[64] + 132] = mem[_1047 + 96]
                            mem[mem[64] + 164] = mem[_1047 + 128]
                            require ext_code.size(arg3)
                            call arg3.exactInput(bytes arg1, address arg2, uint256 arg3, uint256 arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args 32, 160, mem[mem[64] + 68 len ceil32(_1074) + 160]
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _1290 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_1290] == mem[_1290]
        idx = idx + 1
        continue 
}

function exchangeV2(address[] arg1, uint256 arg2, uint256 arg3, address arg4, bool arg5) payable {
    require calldata.size - 4 >= 160
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 == arg2
    require arg3 == arg3
    require arg4 == arg4
    require arg5 == arg5
    if not addresses[address(msg.sender)].field_160:
        revert with 0, 'Not attached feeAddress'
    if uint8(stor0.field_160):
        revert with 0, 'Contract is blocked'
    require 0 < arg1.length
    _1278 = mem[128]
    require stor1
    require ext_code.size(mem[140 len 20])
    staticcall mem[140 len 20].0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[(32 * arg1.length) + 128] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require 0 < arg1.length
    if arg5:
        _1292 = mem[128]
        mem[(32 * arg1.length) + ceil32(return_data.size) + 128] = 100
        mem[(32 * arg1.length) + ceil32(return_data.size) + 260 len 128] = 0, addresses[address(msg.sender)].field_0, address(this.address), arg2, mem[(32 * arg1.length) + ceil32(return_data.size) + 260 len 28]
        mem[(32 * arg1.length) + ceil32(return_data.size) + 360] = 0
        call address(_1292).mem[(32 * arg1.length) + ceil32(return_data.size) + 260 len 4] with:
             gas gas_remaining wei
            args mem[(32 * arg1.length) + ceil32(return_data.size) + 264 len 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if arg1.length:
                require arg1.length >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            mem[(32 * arg1.length) + ceil32(return_data.size) + 264] = this.address
            mem[(32 * arg1.length) + ceil32(return_data.size) + 296] = arg4
            require ext_code.size(address(_1278))
            call address(_1278).0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg4
            mem[(32 * arg1.length) + ceil32(return_data.size) + 260] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] >= arg2 - (arg2 * feePercent_x_100000 / stor1 / 2):
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 264] = this.address
                require ext_code.size(address(_1278))
                staticcall address(_1278).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 264] = -arg2 * feePercent_x_100000 / stor1 / 2
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 296] = arg3
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 328] = 160
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 424] = arg1.length
                idx = 0
                s = 128
                t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + 456
                while idx < arg1.length:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 360] = addresses[address(msg.sender)].field_0
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 392] = block.timestamp + 120
                require ext_code.size(arg4)
                call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 264 len (96 * arg1.length) + 192]
            else:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360 len 96] = 0, address(arg4), (100 * arg2) - (100 * arg2 * feePercent_x_100000 / stor1 / 2), mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360 len 28]
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 428] = 0
                call mem[140 len 20].mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360 len 4] with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 364 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 364] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 364] = -arg2 * feePercent_x_100000 / stor1 / 2
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 396] = arg3
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 428] = 160
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 524] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + 556
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 460] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 492] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 364 len (96 * arg1.length) + 192]
                else:
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392] == bool(mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392])
                        if not mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = -arg2 * feePercent_x_100000 / stor1 / 2
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397] = arg3
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 160
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 557
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365 len (96 * arg1.length) + 192]
        else:
            mem[(32 * arg1.length) + ceil32(return_data.size) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if return_data.size:
                require return_data.size >= 32
                require mem[(32 * arg1.length) + ceil32(return_data.size) + 292] == bool(mem[(32 * arg1.length) + ceil32(return_data.size) + 292])
                if not mem[(32 * arg1.length) + ceil32(return_data.size) + 292]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            mem[(32 * arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 265] = this.address
            mem[(32 * arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 297] = arg4
            require ext_code.size(address(_1278))
            call address(_1278).0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg4
            mem[(32 * arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] >= arg2 - (arg2 * feePercent_x_100000 / stor1 / 2):
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                require ext_code.size(address(_1278))
                staticcall address(_1278).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = -arg2 * feePercent_x_100000 / stor1 / 2
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = arg3
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = 160
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = arg1.length
                idx = 0
                s = 128
                t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                while idx < arg1.length:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = addresses[address(msg.sender)].field_0
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = block.timestamp + 120
                require ext_code.size(arg4)
                call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 265 len (96 * arg1.length) + 192]
            else:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len 96] = 0, address(arg4), (100 * arg2) - (100 * arg2 * feePercent_x_100000 / stor1 / 2), mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len 28]
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 0
                call mem[140 len 20].mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len 4] with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 365 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = -arg2 * feePercent_x_100000 / stor1 / 2
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397] = arg3
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 160
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 557
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365 len (96 * arg1.length) + 192]
                else:
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = return_data.size
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] == bool(mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393])
                        if not mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 366] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 362] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 366] = -arg2 * feePercent_x_100000 / stor1 / 2
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 398] = arg3
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 430] = 160
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 526] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (6 * ceil32(return_data.size)) + 558
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 462] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 494] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 366 len (96 * arg1.length) + 192]
    else:
        _1293 = mem[128]
        mem[(32 * arg1.length) + ceil32(return_data.size) + 128] = 100
        mem[(32 * arg1.length) + ceil32(return_data.size) + 260 len 128] = 0, addresses[address(msg.sender)].field_0, address(this.address), arg2, mem[(32 * arg1.length) + ceil32(return_data.size) + 260 len 28]
        mem[(32 * arg1.length) + ceil32(return_data.size) + 360] = 0
        call address(_1293).mem[(32 * arg1.length) + ceil32(return_data.size) + 260 len 4] with:
             gas gas_remaining wei
            args mem[(32 * arg1.length) + ceil32(return_data.size) + 264 len 96]
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if arg1.length:
                require arg1.length >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            mem[(32 * arg1.length) + ceil32(return_data.size) + 264] = this.address
            mem[(32 * arg1.length) + ceil32(return_data.size) + 296] = arg4
            require ext_code.size(address(_1278))
            call address(_1278).0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg4
            mem[(32 * arg1.length) + ceil32(return_data.size) + 260] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] >= arg2 - (arg2 * feePercent_x_100000 / stor1):
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 264] = this.address
                require ext_code.size(address(_1278))
                staticcall address(_1278).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 260] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 264] = -arg2 * feePercent_x_100000 / stor1
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 296] = arg3
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 328] = 160
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 424] = arg1.length
                idx = 0
                s = 128
                t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + 456
                while idx < arg1.length:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 360] = addresses[address(msg.sender)].field_0
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 392] = block.timestamp + 120
                require ext_code.size(arg4)
                call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 264 len (96 * arg1.length) + 192]
            else:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360 len 96] = 0, address(arg4), (100 * arg2) - (100 * arg2 * feePercent_x_100000 / stor1), mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360 len 28]
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 428] = 0
                call mem[140 len 20].mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360 len 4] with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 364 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 364] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 360] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 364] = -arg2 * feePercent_x_100000 / stor1
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 396] = arg3
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 428] = 160
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 524] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + 556
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 460] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 492] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 364 len (96 * arg1.length) + 192]
                else:
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392] == bool(mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392])
                        if not mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + 392]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = -arg2 * feePercent_x_100000 / stor1
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397] = arg3
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 160
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 557
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365 len (96 * arg1.length) + 192]
        else:
            mem[(32 * arg1.length) + ceil32(return_data.size) + 292 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if return_data.size:
                require return_data.size >= 32
                require mem[(32 * arg1.length) + ceil32(return_data.size) + 292] == bool(mem[(32 * arg1.length) + ceil32(return_data.size) + 292])
                if not mem[(32 * arg1.length) + ceil32(return_data.size) + 292]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            mem[(32 * arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 265] = this.address
            mem[(32 * arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 297] = arg4
            require ext_code.size(address(_1278))
            call address(_1278).0xdd62ed3e with:
                 gas gas_remaining wei
                args address(this.address), arg4
            mem[(32 * arg1.length) + ceil32(return_data.size) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
            if not ext_call.success:
                revert with ext_call.return_data[0 len return_data.size]
            require return_data.size >= 32
            require ext_call.return_data[0] == ext_call.return_data[0]
            if ext_call.return_data[0] >= arg2 - (arg2 * feePercent_x_100000 / stor1):
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = this.address
                require ext_code.size(address(_1278))
                staticcall address(_1278).0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 261] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 265] = -arg2 * feePercent_x_100000 / stor1
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 297] = arg3
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 329] = 160
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 425] = arg1.length
                idx = 0
                s = 128
                t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 457
                while idx < arg1.length:
                    mem[t] = mem[s + 12 len 20]
                    idx = idx + 1
                    s = s + 32
                    t = t + 32
                    continue 
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = addresses[address(msg.sender)].field_0
                mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] = block.timestamp + 120
                require ext_code.size(arg4)
                call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 265 len (96 * arg1.length) + 192]
            else:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len 96] = 0, address(arg4), (100 * arg2) - (100 * arg2 * feePercent_x_100000 / stor1), mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len 28]
                mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 0
                call mem[140 len 20].mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361 len 4] with:
                     gas gas_remaining wei
                    args mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 365 len 64]
                if not return_data.size:
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if arg1.length:
                        require arg1.length >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365] = -arg2 * feePercent_x_100000 / stor1
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 397] = arg3
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 429] = 160
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 525] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 557
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 461] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 493] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + ceil32(return_data.size) + 365 len (96 * arg1.length) + 192]
                else:
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 361] = return_data.size
                    mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if return_data.size:
                        require return_data.size >= 32
                        require mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393] == bool(mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393])
                        if not mem[(32 * arg1.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 393]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 366] = this.address
                    require ext_code.size(address(_1278))
                    staticcall address(_1278).0x70a08231 with:
                            gas gas_remaining wei
                           args this.address
                    mem[(32 * arg1.length) + (4 * ceil32(return_data.size)) + 362] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require return_data.size >= 32
                    require ext_call.return_data[0] == ext_call.return_data[0]
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 366] = -arg2 * feePercent_x_100000 / stor1
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 398] = arg3
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 430] = 160
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 526] = arg1.length
                    idx = 0
                    s = 128
                    t = (32 * arg1.length) + (6 * ceil32(return_data.size)) + 558
                    while idx < arg1.length:
                        mem[t] = mem[s + 12 len 20]
                        idx = idx + 1
                        s = s + 32
                        t = t + 32
                        continue 
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 462] = addresses[address(msg.sender)].field_0
                    mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 494] = block.timestamp + 120
                    require ext_code.size(arg4)
                    call arg4.swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args mem[(32 * arg1.length) + (6 * ceil32(return_data.size)) + 366 len (96 * arg1.length) + 192]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    return 0
}

function swapV2MultyDex(address[] arg1, address[] arg2, uint256 arg3, uint256 arg4, bool arg5) payable {
    require calldata.size - 4 >= 160
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    mem[96] = arg1.length
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require (32 * arg1.length) + (32 * arg2.length) + 160 <= test266151307() and (32 * arg2.length) + 160 >= 128
    mem[(32 * arg1.length) + 128] = arg2.length
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    idx = 0
    s = arg2 + 36
    t = (32 * arg1.length) + 160
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg3 == arg3
    require arg4 == arg4
    require arg5 == arg5
    if not addresses[address(msg.sender)].field_160:
        revert with 0, 'Not attached feeAddress'
    if uint8(stor0.field_160):
        revert with 0, 'Contract is blocked'
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = 2
    mem[(32 * arg1.length) + (32 * arg2.length) + 192 len 64] = call.data[calldata.size len 64]
    require stor1
    require 0 < arg1.length
    mem[(32 * arg1.length) + (32 * arg2.length) + 260] = this.address
    require ext_code.size(mem[140 len 20])
    staticcall mem[140 len 20].0x70a08231 with:
            gas gas_remaining wei
           args this.address
    mem[(32 * arg1.length) + (32 * arg2.length) + 256] = ext_call.return_data[0]
    if not ext_call.success:
        revert with ext_call.return_data[0 len return_data.size]
    require return_data.size >= 32
    require ext_call.return_data[0] == ext_call.return_data[0]
    require 0 < arg1.length
    mem[0] = msg.sender
    mem[32] = 3
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 292] = addresses[address(msg.sender)].field_0
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 324] = this.address
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 356] = arg3
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 256] = 100
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 292 len 28] = addresses[address(msg.sender)].field_0
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 288 len 4] = unknown_0x23b872dd(?????)
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388 len 128] = unknown_0x23b872dd(?????), addresses[address(msg.sender)].field_0, addresses[address(msg.sender)].field_0, address(this.address), arg3, mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388 len 28]
    mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 488] = 0
    call mem[140 len 20] with:
         gas gas_remaining wei
        args mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 392 len 96]
    if arg5:
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if not arg1.length:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 392] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + 388
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1 / 2)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1 / 2)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9459 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9502 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9502)
                    require ext_code.size(address(_9459))
                    call address(_9459).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9502)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9562 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9562] == mem[_9562]
                    if mem[_9562] >= s:
                        require idx + 1 < mem[96]
                        _9638 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9638))
                        staticcall address(_9638).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9738 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9754 = mem[_9738]
                        require mem[_9738] == mem[_9738]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9962 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _10051 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10607 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _10607:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10051 + 100] = this.address
                            mem[_10051 + 132] = block.timestamp + 1
                            require ext_code.size(address(_9962))
                            call address(_9962).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10051 + (32 * _10607) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _15984 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15984))
                            staticcall address(_15984).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16431 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16431] == mem[_16431]
                            idx = idx + 1
                            s = _9754
                            s = mem[_16431] - _9754
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _10050 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10606 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _10606:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10050 + 100] = addresses[address(msg.sender)].field_0
                        mem[_10050 + 132] = block.timestamp + 1
                        require ext_code.size(address(_9962))
                        call address(_9962).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10050 + (32 * _10606) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _15982 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15982))
                        staticcall address(_15982).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16430 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16430] == mem[_16430]
                        idx = idx + 1
                        s = _9754
                        s = mem[_16430] - _9754
                        continue 
                    require idx < mem[96]
                    _9640 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9706 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9778 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9778 + 32] = mem[_9778 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9818 = mem[_9778]
                    t = 0
                    while t < _9818:
                        mem[_9706 + t + 100] = mem[_9778 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9818) <= _9818:
                        call address(_9640).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9706 + _9818 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15758 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15758))
                                staticcall address(_15758).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16208 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16510 = mem[_16208]
                                require mem[_16208] == mem[_16208]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17262 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    _17423 = mem[64]
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18143 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    s = 0
                                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                                    u = mem[64] + 196
                                    while s < _18143:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17423 + 100] = this.address
                                    mem[_17423 + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17262))
                                    call address(_17262).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17423 + (32 * _18143) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21464 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21464))
                                    staticcall address(_21464).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22167 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22167] == mem[_22167]
                                    idx = idx + 1
                                    s = _16510
                                    s = mem[_22167] - _16510
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                _17422 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18142 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18142:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17422 + 100] = addresses[address(msg.sender)].field_0
                                mem[_17422 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17262))
                                call address(_17262).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17422 + (32 * _18142) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21462 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21462))
                                staticcall address(_21462).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22166 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22166] == mem[_22166]
                                idx = idx + 1
                                s = _16510
                                s = mem[_22166] - _16510
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16310 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16310))
                            staticcall address(_16310).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16792 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17143 = mem[_16792]
                            require mem[_16792] == mem[_16792]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17990 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _18145 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18535 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18535:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_18145 + 100] = this.address
                                mem[_18145 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17990))
                                call address(_17990).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _18145 + (32 * _18535) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21468 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21468))
                                staticcall address(_21468).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22169 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22169] == mem[_22169]
                                idx = idx + 1
                                s = _17143
                                s = mem[_22169] - _17143
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18144 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18534 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18534:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18144 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18144 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17990))
                            call address(_17990).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18144 + (32 * _18534) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21466 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21466))
                            staticcall address(_21466).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22168 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22168] == mem[_22168]
                            idx = idx + 1
                            s = _17143
                            s = mem[_22168] - _17143
                            continue 
                        _15374 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15374] = return_data.size
                        mem[_15374 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15760 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15760))
                            staticcall address(_15760).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16210 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16511 = mem[_16210]
                            require mem[_16210] == mem[_16210]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17263 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17425 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18147 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18147:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17425 + 100] = this.address
                                mem[_17425 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17263))
                                call address(_17263).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17425 + (32 * _18147) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21472 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21472))
                                staticcall address(_21472).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22171 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22171] == mem[_22171]
                                idx = idx + 1
                                s = _16511
                                s = mem[_22171] - _16511
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17424 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18146 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18146:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17424 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17424 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17263))
                            call address(_17263).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17424 + (32 * _18146) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21470 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21470))
                            staticcall address(_21470).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22170 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22170] == mem[_22170]
                            idx = idx + 1
                            s = _16511
                            s = mem[_22170] - _16511
                            continue 
                        require return_data.size >= 32
                        require mem[_15374 + 32] == bool(mem[_15374 + 32])
                        if not mem[_15374 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16312 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16312))
                        staticcall address(_16312).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16795 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17145 = mem[_16795]
                        require mem[_16795] == mem[_16795]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17991 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18149 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18537 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18537:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18149 + 100] = this.address
                            mem[_18149 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17991))
                            call address(_17991).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18149 + (32 * _18537) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21476 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21476))
                            staticcall address(_21476).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22173 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22173] == mem[_22173]
                            idx = idx + 1
                            s = _17145
                            s = mem[_22173] - _17145
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18148 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18536 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18536:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18148 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18148 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17991))
                        call address(_17991).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18148 + (32 * _18536) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21474 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21474))
                        staticcall address(_21474).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22172 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22172] == mem[_22172]
                        idx = idx + 1
                        s = _17145
                        s = mem[_22172] - _17145
                        continue 
                    mem[_9706 + _9818 + 100] = 0
                    call address(_9640).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9706 + _9818 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15866 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15866))
                            staticcall address(_15866).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16314 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16552 = mem[_16314]
                            require mem[_16314] == mem[_16314]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17342 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17511 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18295 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18295:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17511 + 100] = this.address
                                mem[_17511 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17342))
                                call address(_17342).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17511 + (32 * _18295) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21480 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21480))
                                staticcall address(_21480).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22175 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22175] == mem[_22175]
                                idx = idx + 1
                                s = _16552
                                s = mem[_22175] - _16552
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17510 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18294 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18294:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17510 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17510 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17342))
                            call address(_17342).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17510 + (32 * _18294) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21478 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21478))
                            staticcall address(_21478).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22174 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22174] == mem[_22174]
                            idx = idx + 1
                            s = _16552
                            s = mem[_22174] - _16552
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16432 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16432))
                        staticcall address(_16432).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16922 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17265 = mem[_16922]
                        require mem[_16922] == mem[_16922]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18046 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18297 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18599 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18599:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18297 + 100] = this.address
                            mem[_18297 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18046))
                            call address(_18046).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18297 + (32 * _18599) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21484 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21484))
                            staticcall address(_21484).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22177 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22177] == mem[_22177]
                            idx = idx + 1
                            s = _17265
                            s = mem[_22177] - _17265
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18598 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18598:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_18046))
                        call address(_18046).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18598) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21482 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21482))
                        staticcall address(_21482).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22176 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22176] == mem[_22176]
                        idx = idx + 1
                        s = _17265
                        s = mem[_22176] - _17265
                        continue 
                    _15402 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15402] = return_data.size
                    mem[_15402 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15868 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15868))
                        staticcall address(_15868).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16316 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16553 = mem[_16316]
                        require mem[_16316] == mem[_16316]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17343 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17513 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18299 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18299:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17513 + 100] = this.address
                            mem[_17513 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17343))
                            call address(_17343).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17513 + (32 * _18299) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21488 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21488))
                            staticcall address(_21488).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22179 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22179] == mem[_22179]
                            idx = idx + 1
                            s = _16553
                            s = mem[_22179] - _16553
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _17512 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18298 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18298:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17512 + 100] = addresses[address(msg.sender)].field_0
                        mem[_17512 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17343))
                        call address(_17343).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17512 + (32 * _18298) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21486 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21486))
                        staticcall address(_21486).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22178 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22178] == mem[_22178]
                        idx = idx + 1
                        s = _16553
                        s = mem[_22178] - _16553
                        continue 
                    require return_data.size >= 32
                    require mem[_15402 + 32] == bool(mem[_15402 + 32])
                    if not mem[_15402 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16434 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16434))
                    staticcall address(_16434).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16925 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17267 = mem[_16925]
                    require mem[_16925] == mem[_16925]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18047 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        _18301 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18601 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18601:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18301 + 100] = this.address
                        mem[_18301 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18047))
                        call address(_18047).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18301 + (32 * _18601) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21492 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21492))
                        staticcall address(_21492).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22181 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22181] == mem[_22181]
                        idx = idx + 1
                        s = _17267
                        s = mem[_22181] - _17267
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    _18300 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18600 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    s = 0
                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                    u = mem[64] + 196
                    while s < _18600:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18300 + 100] = addresses[address(msg.sender)].field_0
                    mem[_18300 + 132] = block.timestamp + 1
                    require ext_code.size(address(_18047))
                    call address(_18047).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18300 + (32 * _18600) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21490 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21490))
                    staticcall address(_21490).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22180 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22180] == mem[_22180]
                    idx = idx + 1
                    s = _17267
                    s = mem[_22180] - _17267
                    continue 
            else:
                require arg1.length >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 392] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + 388
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1 / 2)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1 / 2)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9462 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9504 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9504)
                    require ext_code.size(address(_9462))
                    call address(_9462).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9504)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9563 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9563] == mem[_9563]
                    if mem[_9563] >= s:
                        require idx + 1 < mem[96]
                        _9642 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9642))
                        staticcall address(_9642).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9739 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9755 = mem[_9739]
                        require mem[_9739] == mem[_9739]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9963 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10609 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            t = 0
                            u = (32 * arg1.length) + (32 * arg2.length) + 192
                            v = mem[64] + 196
                            while t < _10609:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 1
                            require ext_code.size(address(_9963))
                            call address(_9963).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _10609) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _15990 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15990))
                            staticcall address(_15990).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16437 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16437] == mem[_16437]
                            idx = idx + 1
                            s = _9755
                            s = mem[_16437] - _9755
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _10053 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10608 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _10608:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10053 + 100] = addresses[address(msg.sender)].field_0
                        mem[_10053 + 132] = block.timestamp + 1
                        require ext_code.size(address(_9963))
                        call address(_9963).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10053 + (32 * _10608) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _15988 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15988))
                        staticcall address(_15988).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16436 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16436] == mem[_16436]
                        idx = idx + 1
                        s = _9755
                        s = mem[_16436] - _9755
                        continue 
                    require idx < mem[96]
                    _9644 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9707 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9781 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9781 + 32] = mem[_9781 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9819 = mem[_9781]
                    t = 0
                    while t < _9819:
                        mem[_9707 + t + 100] = mem[_9781 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9819) <= _9819:
                        call address(_9644).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9707 + _9819 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15764 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15764))
                                staticcall address(_15764).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16214 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16512 = mem[_16214]
                                require mem[_16214] == mem[_16214]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17268 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    _17429 = mem[64]
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18153 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    s = 0
                                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                                    u = mem[64] + 196
                                    while s < _18153:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17429 + 100] = this.address
                                    mem[_17429 + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17268))
                                    call address(_17268).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17429 + (32 * _18153) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21496 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21496))
                                    staticcall address(_21496).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22183 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22183] == mem[_22183]
                                    idx = idx + 1
                                    s = _16512
                                    s = mem[_22183] - _16512
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18152 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                t = 0
                                u = (32 * arg1.length) + (32 * arg2.length) + 192
                                v = mem[64] + 196
                                while t < _18152:
                                    mem[v] = mem[u + 12 len 20]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                                mem[mem[64] + 132] = block.timestamp + 1
                                require ext_code.size(address(_17268))
                                call address(_17268).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18152) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21494 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21494))
                                staticcall address(_21494).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22182 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22182] == mem[_22182]
                                idx = idx + 1
                                s = _16512
                                s = mem[_22182] - _16512
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16318 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16318))
                            staticcall address(_16318).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16800 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17151 = mem[_16800]
                            require mem[_16800] == mem[_16800]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17994 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _18155 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18539 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18539:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_18155 + 100] = this.address
                                mem[_18155 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17994))
                                call address(_17994).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _18155 + (32 * _18539) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21500 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21500))
                                staticcall address(_21500).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22185 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22185] == mem[_22185]
                                idx = idx + 1
                                s = _17151
                                s = mem[_22185] - _17151
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18154 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18538 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18538:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18154 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18154 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17994))
                            call address(_17994).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18154 + (32 * _18538) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21498 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21498))
                            staticcall address(_21498).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22184 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22184] == mem[_22184]
                            idx = idx + 1
                            s = _17151
                            s = mem[_22184] - _17151
                            continue 
                        _15376 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15376] = return_data.size
                        mem[_15376 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15766 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15766))
                            staticcall address(_15766).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16216 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16513 = mem[_16216]
                            require mem[_16216] == mem[_16216]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17269 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17431 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18157 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18157:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17431 + 100] = this.address
                                mem[_17431 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17269))
                                call address(_17269).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17431 + (32 * _18157) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21504 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21504))
                                staticcall address(_21504).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22187 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22187] == mem[_22187]
                                idx = idx + 1
                                s = _16513
                                s = mem[_22187] - _16513
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17430 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18156 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18156:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17430 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17430 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17269))
                            call address(_17269).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17430 + (32 * _18156) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21502 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21502))
                            staticcall address(_21502).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22186 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22186] == mem[_22186]
                            idx = idx + 1
                            s = _16513
                            s = mem[_22186] - _16513
                            continue 
                        require return_data.size >= 32
                        require mem[_15376 + 32] == bool(mem[_15376 + 32])
                        if not mem[_15376 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16320 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16320))
                        staticcall address(_16320).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16803 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17153 = mem[_16803]
                        require mem[_16803] == mem[_16803]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17995 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18159 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18541 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18541:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18159 + 100] = this.address
                            mem[_18159 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17995))
                            call address(_17995).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18159 + (32 * _18541) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21508 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21508))
                            staticcall address(_21508).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22189 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22189] == mem[_22189]
                            idx = idx + 1
                            s = _17153
                            s = mem[_22189] - _17153
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18158 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18540 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18540:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18158 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18158 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17995))
                        call address(_17995).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18158 + (32 * _18540) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21506 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21506))
                        staticcall address(_21506).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22188 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22188] == mem[_22188]
                        idx = idx + 1
                        s = _17153
                        s = mem[_22188] - _17153
                        continue 
                    mem[_9707 + _9819 + 100] = 0
                    call address(_9644).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9707 + _9819 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15874 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15874))
                            staticcall address(_15874).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16322 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16556 = mem[_16322]
                            require mem[_16322] == mem[_16322]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17344 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17515 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18303 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18303:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17515 + 100] = this.address
                                mem[_17515 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17344))
                                call address(_17344).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17515 + (32 * _18303) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21512 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21512))
                                staticcall address(_21512).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22191 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22191] == mem[_22191]
                                idx = idx + 1
                                s = _16556
                                s = mem[_22191] - _16556
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17514 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18302 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18302:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17514 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17514 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17344))
                            call address(_17344).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17514 + (32 * _18302) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21510 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21510))
                            staticcall address(_21510).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22190 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22190] == mem[_22190]
                            idx = idx + 1
                            s = _16556
                            s = mem[_22190] - _16556
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16438 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16438))
                        staticcall address(_16438).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16930 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17271 = mem[_16930]
                        require mem[_16930] == mem[_16930]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18048 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18305 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18603 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18603:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18305 + 100] = this.address
                            mem[_18305 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18048))
                            call address(_18048).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18305 + (32 * _18603) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21516 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21516))
                            staticcall address(_21516).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22193 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22193] == mem[_22193]
                            idx = idx + 1
                            s = _17271
                            s = mem[_22193] - _17271
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18304 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18602 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18602:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18304 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18304 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18048))
                        call address(_18048).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18304 + (32 * _18602) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21514 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21514))
                        staticcall address(_21514).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22192 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22192] == mem[_22192]
                        idx = idx + 1
                        s = _17271
                        s = mem[_22192] - _17271
                        continue 
                    _15403 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15403] = return_data.size
                    mem[_15403 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15876 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15876))
                        staticcall address(_15876).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16324 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16557 = mem[_16324]
                        require mem[_16324] == mem[_16324]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17345 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17517 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18307 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18307:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17517 + 100] = this.address
                            mem[_17517 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17345))
                            call address(_17345).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17517 + (32 * _18307) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21520 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21520))
                            staticcall address(_21520).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22195 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22195] == mem[_22195]
                            idx = idx + 1
                            s = _16557
                            s = mem[_22195] - _16557
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _17516 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18306 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18306:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17516 + 100] = addresses[address(msg.sender)].field_0
                        mem[_17516 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17345))
                        call address(_17345).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17516 + (32 * _18306) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21518 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21518))
                        staticcall address(_21518).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22194 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22194] == mem[_22194]
                        idx = idx + 1
                        s = _16557
                        s = mem[_22194] - _16557
                        continue 
                    require return_data.size >= 32
                    require mem[_15403 + 32] == bool(mem[_15403 + 32])
                    if not mem[_15403 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16440 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16440))
                    staticcall address(_16440).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16933 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17273 = mem[_16933]
                    require mem[_16933] == mem[_16933]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18049 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        _18309 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18605 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18605:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18309 + 100] = this.address
                        mem[_18309 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18049))
                        call address(_18049).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18309 + (32 * _18605) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21524 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21524))
                        staticcall address(_21524).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22197 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22197] == mem[_22197]
                        idx = idx + 1
                        s = _17273
                        s = mem[_22197] - _17273
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    _18308 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18604 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    s = 0
                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                    u = mem[64] + 196
                    while s < _18604:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18308 + 100] = addresses[address(msg.sender)].field_0
                    mem[_18308 + 132] = block.timestamp + 1
                    require ext_code.size(address(_18049))
                    call address(_18049).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18308 + (32 * _18604) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21522 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21522))
                    staticcall address(_21522).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22196 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22196] == mem[_22196]
                    idx = idx + 1
                    s = _17273
                    s = mem[_22196] - _17273
                    continue 
        else:
            mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] = return_data.size
            mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if not return_data.size:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 389
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1 / 2)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1 / 2)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9465 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9506 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9506)
                    require ext_code.size(address(_9465))
                    call address(_9465).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9506)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9564 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9564] == mem[_9564]
                    if mem[_9564] >= s:
                        require idx + 1 < mem[96]
                        _9646 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9646))
                        staticcall address(_9646).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9740 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9756 = mem[_9740]
                        require mem[_9740] == mem[_9740]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9964 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _10057 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10611 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _10611:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10057 + 100] = this.address
                            mem[_10057 + 132] = block.timestamp + 1
                            require ext_code.size(address(_9964))
                            call address(_9964).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10057 + (32 * _10611) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _15996 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15996))
                            staticcall address(_15996).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16443 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16443] == mem[_16443]
                            idx = idx + 1
                            s = _9756
                            s = mem[_16443] - _9756
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10610 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _10610:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_9964))
                        call address(_9964).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _10610) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _15994 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15994))
                        staticcall address(_15994).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16442 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16442] == mem[_16442]
                        idx = idx + 1
                        s = _9756
                        s = mem[_16442] - _9756
                        continue 
                    require idx < mem[96]
                    _9648 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9708 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9784 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9784 + 32] = mem[_9784 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9820 = mem[_9784]
                    t = 0
                    while t < _9820:
                        mem[_9708 + t + 100] = mem[_9784 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9820) <= _9820:
                        call address(_9648).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9708 + _9820 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15770 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15770))
                                staticcall address(_15770).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16220 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16514 = mem[_16220]
                                require mem[_16220] == mem[_16220]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17274 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    _17435 = mem[64]
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18163 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    s = 0
                                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                                    u = mem[64] + 196
                                    while s < _18163:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17435 + 100] = this.address
                                    mem[_17435 + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17274))
                                    call address(_17274).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17435 + (32 * _18163) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21528 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21528))
                                    staticcall address(_21528).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22199 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22199] == mem[_22199]
                                    idx = idx + 1
                                    s = _16514
                                    s = mem[_22199] - _16514
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                _17434 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18162 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18162:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17434 + 100] = addresses[address(msg.sender)].field_0
                                mem[_17434 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17274))
                                call address(_17274).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17434 + (32 * _18162) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21526 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21526))
                                staticcall address(_21526).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22198 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22198] == mem[_22198]
                                idx = idx + 1
                                s = _16514
                                s = mem[_22198] - _16514
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16326 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16326))
                            staticcall address(_16326).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16808 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17159 = mem[_16808]
                            require mem[_16808] == mem[_16808]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17998 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _18165 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18543 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18543:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_18165 + 100] = this.address
                                mem[_18165 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17998))
                                call address(_17998).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _18165 + (32 * _18543) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21532 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21532))
                                staticcall address(_21532).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22201 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22201] == mem[_22201]
                                idx = idx + 1
                                s = _17159
                                s = mem[_22201] - _17159
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18164 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18542 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18542:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18164 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18164 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17998))
                            call address(_17998).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18164 + (32 * _18542) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21530 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21530))
                            staticcall address(_21530).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22200 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22200] == mem[_22200]
                            idx = idx + 1
                            s = _17159
                            s = mem[_22200] - _17159
                            continue 
                        _15378 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15378] = return_data.size
                        mem[_15378 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15772 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15772))
                            staticcall address(_15772).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16222 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16515 = mem[_16222]
                            require mem[_16222] == mem[_16222]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17275 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17437 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18167 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18167:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17437 + 100] = this.address
                                mem[_17437 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17275))
                                call address(_17275).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17437 + (32 * _18167) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21536 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21536))
                                staticcall address(_21536).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22203 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22203] == mem[_22203]
                                idx = idx + 1
                                s = _16515
                                s = mem[_22203] - _16515
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17436 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18166 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18166:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17436 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17436 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17275))
                            call address(_17275).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17436 + (32 * _18166) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21534 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21534))
                            staticcall address(_21534).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22202 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22202] == mem[_22202]
                            idx = idx + 1
                            s = _16515
                            s = mem[_22202] - _16515
                            continue 
                        require return_data.size >= 32
                        require mem[_15378 + 32] == bool(mem[_15378 + 32])
                        if not mem[_15378 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16328 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16328))
                        staticcall address(_16328).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16811 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17161 = mem[_16811]
                        require mem[_16811] == mem[_16811]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17999 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18169 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18545 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18545:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18169 + 100] = this.address
                            mem[_18169 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17999))
                            call address(_17999).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18169 + (32 * _18545) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21540 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21540))
                            staticcall address(_21540).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22205 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22205] == mem[_22205]
                            idx = idx + 1
                            s = _17161
                            s = mem[_22205] - _17161
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18544 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18544:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_17999))
                        call address(_17999).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18544) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21538 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21538))
                        staticcall address(_21538).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22204 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22204] == mem[_22204]
                        idx = idx + 1
                        s = _17161
                        s = mem[_22204] - _17161
                        continue 
                    mem[_9708 + _9820 + 100] = 0
                    call address(_9648).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9708 + _9820 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15882 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15882))
                            staticcall address(_15882).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16330 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16560 = mem[_16330]
                            require mem[_16330] == mem[_16330]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17346 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17519 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18311 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18311:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17519 + 100] = this.address
                                mem[_17519 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17346))
                                call address(_17346).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17519 + (32 * _18311) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21544 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21544))
                                staticcall address(_21544).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22207 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22207] == mem[_22207]
                                idx = idx + 1
                                s = _16560
                                s = mem[_22207] - _16560
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18310 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            t = 0
                            u = (32 * arg1.length) + (32 * arg2.length) + 192
                            v = mem[64] + 196
                            while t < _18310:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                            mem[mem[64] + 132] = block.timestamp + 1
                            require ext_code.size(address(_17346))
                            call address(_17346).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18310) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21542 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21542))
                            staticcall address(_21542).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22206 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22206] == mem[_22206]
                            idx = idx + 1
                            s = _16560
                            s = mem[_22206] - _16560
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16444 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16444))
                        staticcall address(_16444).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16938 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17277 = mem[_16938]
                        require mem[_16938] == mem[_16938]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18050 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18313 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18607 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18607:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18313 + 100] = this.address
                            mem[_18313 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18050))
                            call address(_18050).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18313 + (32 * _18607) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21548 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21548))
                            staticcall address(_21548).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22209 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22209] == mem[_22209]
                            idx = idx + 1
                            s = _17277
                            s = mem[_22209] - _17277
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18312 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18606 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18606:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18312 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18312 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18050))
                        call address(_18050).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18312 + (32 * _18606) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21546 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21546))
                        staticcall address(_21546).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22208 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22208] == mem[_22208]
                        idx = idx + 1
                        s = _17277
                        s = mem[_22208] - _17277
                        continue 
                    _15404 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15404] = return_data.size
                    mem[_15404 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15884 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15884))
                        staticcall address(_15884).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16332 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16561 = mem[_16332]
                        require mem[_16332] == mem[_16332]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17347 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17521 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18315 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18315:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17521 + 100] = this.address
                            mem[_17521 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17347))
                            call address(_17347).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17521 + (32 * _18315) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21552 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21552))
                            staticcall address(_21552).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22211 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22211] == mem[_22211]
                            idx = idx + 1
                            s = _16561
                            s = mem[_22211] - _16561
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _17520 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18314 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18314:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17520 + 100] = addresses[address(msg.sender)].field_0
                        mem[_17520 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17347))
                        call address(_17347).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17520 + (32 * _18314) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21550 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21550))
                        staticcall address(_21550).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22210 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22210] == mem[_22210]
                        idx = idx + 1
                        s = _16561
                        s = mem[_22210] - _16561
                        continue 
                    require return_data.size >= 32
                    require mem[_15404 + 32] == bool(mem[_15404 + 32])
                    if not mem[_15404 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16446 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16446))
                    staticcall address(_16446).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16941 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17279 = mem[_16941]
                    require mem[_16941] == mem[_16941]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18051 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        _18317 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18609 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18609:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18317 + 100] = this.address
                        mem[_18317 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18051))
                        call address(_18051).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18317 + (32 * _18609) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21556 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21556))
                        staticcall address(_21556).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22213 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22213] == mem[_22213]
                        idx = idx + 1
                        s = _17279
                        s = mem[_22213] - _17279
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    _18316 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18608 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    s = 0
                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                    u = mem[64] + 196
                    while s < _18608:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18316 + 100] = addresses[address(msg.sender)].field_0
                    mem[_18316 + 132] = block.timestamp + 1
                    require ext_code.size(address(_18051))
                    call address(_18051).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18316 + (32 * _18608) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21554 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21554))
                    staticcall address(_21554).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22212 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22212] == mem[_22212]
                    idx = idx + 1
                    s = _17279
                    s = mem[_22212] - _17279
                    continue 
            else:
                require return_data.size >= 32
                require mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420] == bool(mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420])
                if not mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 389
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1 / 2)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1 / 2)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9468 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9508 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9508)
                    require ext_code.size(address(_9468))
                    call address(_9468).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9508)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9565 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9565] == mem[_9565]
                    if mem[_9565] >= s:
                        require idx + 1 < mem[96]
                        _9650 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9650))
                        staticcall address(_9650).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9741 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9757 = mem[_9741]
                        require mem[_9741] == mem[_9741]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9965 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _10060 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10613 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _10613:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10060 + 100] = this.address
                            mem[_10060 + 132] = block.timestamp + 1
                            require ext_code.size(address(_9965))
                            call address(_9965).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10060 + (32 * _10613) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _16002 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16002))
                            staticcall address(_16002).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16449 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16449] == mem[_16449]
                            idx = idx + 1
                            s = _9757
                            s = mem[_16449] - _9757
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _10059 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10612 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _10612:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10059 + 100] = addresses[address(msg.sender)].field_0
                        mem[_10059 + 132] = block.timestamp + 1
                        require ext_code.size(address(_9965))
                        call address(_9965).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10059 + (32 * _10612) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _16000 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16000))
                        staticcall address(_16000).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16448 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16448] == mem[_16448]
                        idx = idx + 1
                        s = _9757
                        s = mem[_16448] - _9757
                        continue 
                    require idx < mem[96]
                    _9652 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9709 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9787 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9787 + 32] = mem[_9787 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9821 = mem[_9787]
                    t = 0
                    while t < _9821:
                        mem[_9709 + t + 100] = mem[_9787 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9821) <= _9821:
                        call address(_9652).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9709 + _9821 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15776 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15776))
                                staticcall address(_15776).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16226 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16516 = mem[_16226]
                                require mem[_16226] == mem[_16226]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17280 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    _17441 = mem[64]
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18173 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    s = 0
                                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                                    u = mem[64] + 196
                                    while s < _18173:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17441 + 100] = this.address
                                    mem[_17441 + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17280))
                                    call address(_17280).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17441 + (32 * _18173) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21560 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21560))
                                    staticcall address(_21560).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22215 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22215] == mem[_22215]
                                    idx = idx + 1
                                    s = _16516
                                    s = mem[_22215] - _16516
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                _17440 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18172 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18172:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17440 + 100] = addresses[address(msg.sender)].field_0
                                mem[_17440 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17280))
                                call address(_17280).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17440 + (32 * _18172) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21558 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21558))
                                staticcall address(_21558).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22214 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22214] == mem[_22214]
                                idx = idx + 1
                                s = _16516
                                s = mem[_22214] - _16516
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16334 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16334))
                            staticcall address(_16334).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16816 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17167 = mem[_16816]
                            require mem[_16816] == mem[_16816]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _18002 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _18175 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18547 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18547:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_18175 + 100] = this.address
                                mem[_18175 + 132] = block.timestamp + 1
                                require ext_code.size(address(_18002))
                                call address(_18002).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _18175 + (32 * _18547) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21564 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21564))
                                staticcall address(_21564).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22217 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22217] == mem[_22217]
                                idx = idx + 1
                                s = _17167
                                s = mem[_22217] - _17167
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18174 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18546 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18546:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18174 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18174 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18002))
                            call address(_18002).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18174 + (32 * _18546) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21562 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21562))
                            staticcall address(_21562).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22216 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22216] == mem[_22216]
                            idx = idx + 1
                            s = _17167
                            s = mem[_22216] - _17167
                            continue 
                        _15380 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15380] = return_data.size
                        mem[_15380 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15778 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15778))
                            staticcall address(_15778).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16228 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16517 = mem[_16228]
                            require mem[_16228] == mem[_16228]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17281 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17443 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18177 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18177:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17443 + 100] = this.address
                                mem[_17443 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17281))
                                call address(_17281).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17443 + (32 * _18177) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21568 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21568))
                                staticcall address(_21568).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22219 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22219] == mem[_22219]
                                idx = idx + 1
                                s = _16517
                                s = mem[_22219] - _16517
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17442 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18176 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18176:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17442 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17442 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17281))
                            call address(_17281).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17442 + (32 * _18176) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21566 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21566))
                            staticcall address(_21566).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22218 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22218] == mem[_22218]
                            idx = idx + 1
                            s = _16517
                            s = mem[_22218] - _16517
                            continue 
                        require return_data.size >= 32
                        require mem[_15380 + 32] == bool(mem[_15380 + 32])
                        if not mem[_15380 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16336 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16336))
                        staticcall address(_16336).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16819 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17169 = mem[_16819]
                        require mem[_16819] == mem[_16819]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18003 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18549 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            t = 0
                            u = (32 * arg1.length) + (32 * arg2.length) + 192
                            v = mem[64] + 196
                            while t < _18549:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 1
                            require ext_code.size(address(_18003))
                            call address(_18003).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18549) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21572 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21572))
                            staticcall address(_21572).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22221 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22221] == mem[_22221]
                            idx = idx + 1
                            s = _17169
                            s = mem[_22221] - _17169
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18178 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18548 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18548:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18178 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18178 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18003))
                        call address(_18003).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18178 + (32 * _18548) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21570 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21570))
                        staticcall address(_21570).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22220 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22220] == mem[_22220]
                        idx = idx + 1
                        s = _17169
                        s = mem[_22220] - _17169
                        continue 
                    mem[_9709 + _9821 + 100] = 0
                    call address(_9652).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9709 + _9821 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15890 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15890))
                            staticcall address(_15890).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16338 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16564 = mem[_16338]
                            require mem[_16338] == mem[_16338]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17348 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17523 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18319 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18319:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17523 + 100] = this.address
                                mem[_17523 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17348))
                                call address(_17348).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17523 + (32 * _18319) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21576 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21576))
                                staticcall address(_21576).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22223 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22223] == mem[_22223]
                                idx = idx + 1
                                s = _16564
                                s = mem[_22223] - _16564
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17522 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18318 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18318:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17522 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17522 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17348))
                            call address(_17348).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17522 + (32 * _18318) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21574 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21574))
                            staticcall address(_21574).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22222 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22222] == mem[_22222]
                            idx = idx + 1
                            s = _16564
                            s = mem[_22222] - _16564
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16450 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16450))
                        staticcall address(_16450).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16946 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17283 = mem[_16946]
                        require mem[_16946] == mem[_16946]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18052 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18611 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            t = 0
                            u = (32 * arg1.length) + (32 * arg2.length) + 192
                            v = mem[64] + 196
                            while t < _18611:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 1
                            require ext_code.size(address(_18052))
                            call address(_18052).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18611) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21580 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21580))
                            staticcall address(_21580).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22225 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22225] == mem[_22225]
                            idx = idx + 1
                            s = _17283
                            s = mem[_22225] - _17283
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18610 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18610:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_18052))
                        call address(_18052).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18610) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21578 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21578))
                        staticcall address(_21578).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22224 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22224] == mem[_22224]
                        idx = idx + 1
                        s = _17283
                        s = mem[_22224] - _17283
                        continue 
                    _15405 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15405] = return_data.size
                    mem[_15405 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15892 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15892))
                        staticcall address(_15892).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16340 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16565 = mem[_16340]
                        require mem[_16340] == mem[_16340]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17349 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17525 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18323 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18323:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17525 + 100] = this.address
                            mem[_17525 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17349))
                            call address(_17349).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17525 + (32 * _18323) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21584 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21584))
                            staticcall address(_21584).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22227 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22227] == mem[_22227]
                            idx = idx + 1
                            s = _16565
                            s = mem[_22227] - _16565
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _17524 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18322 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18322:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17524 + 100] = addresses[address(msg.sender)].field_0
                        mem[_17524 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17349))
                        call address(_17349).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17524 + (32 * _18322) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21582 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21582))
                        staticcall address(_21582).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22226 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22226] == mem[_22226]
                        idx = idx + 1
                        s = _16565
                        s = mem[_22226] - _16565
                        continue 
                    require return_data.size >= 32
                    require mem[_15405 + 32] == bool(mem[_15405 + 32])
                    if not mem[_15405 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16452 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16452))
                    staticcall address(_16452).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16949 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17285 = mem[_16949]
                    require mem[_16949] == mem[_16949]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18053 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        _18325 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18613 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18613:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18325 + 100] = this.address
                        mem[_18325 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18053))
                        call address(_18053).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18325 + (32 * _18613) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21588 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21588))
                        staticcall address(_21588).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22229 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22229] == mem[_22229]
                        idx = idx + 1
                        s = _17285
                        s = mem[_22229] - _17285
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    _18324 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18612 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    s = 0
                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                    u = mem[64] + 196
                    while s < _18612:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18324 + 100] = addresses[address(msg.sender)].field_0
                    mem[_18324 + 132] = block.timestamp + 1
                    require ext_code.size(address(_18053))
                    call address(_18053).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18324 + (32 * _18612) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21586 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21586))
                    staticcall address(_21586).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22228 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22228] == mem[_22228]
                    idx = idx + 1
                    s = _17285
                    s = mem[_22228] - _17285
                    continue 
    else:
        if not return_data.size:
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if not arg1.length:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 392] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + 388
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9483 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9518 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9518)
                    require ext_code.size(address(_9483))
                    call address(_9483).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9518)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9570 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9570] == mem[_9570]
                    if mem[_9570] >= s:
                        require idx + 1 < mem[96]
                        _9670 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9670))
                        staticcall address(_9670).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9746 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9762 = mem[_9746]
                        require mem[_9746] == mem[_9746]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9970 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _10075 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10623 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _10623:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10075 + 100] = this.address
                            mem[_10075 + 132] = block.timestamp + 1
                            require ext_code.size(address(_9970))
                            call address(_9970).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10075 + (32 * _10623) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _16032 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16032))
                            staticcall address(_16032).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16479 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16479] == mem[_16479]
                            idx = idx + 1
                            s = _9762
                            s = mem[_16479] - _9762
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _10074 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10622 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _10622:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10074 + 100] = addresses[address(msg.sender)].field_0
                        mem[_10074 + 132] = block.timestamp + 1
                        require ext_code.size(address(_9970))
                        call address(_9970).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10074 + (32 * _10622) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _16030 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16030))
                        staticcall address(_16030).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16478 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16478] == mem[_16478]
                        idx = idx + 1
                        s = _9762
                        s = mem[_16478] - _9762
                        continue 
                    require idx < mem[96]
                    _9672 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9714 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9802 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9802 + 32] = mem[_9802 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9826 = mem[_9802]
                    t = 0
                    while t < _9826:
                        mem[_9714 + t + 100] = mem[_9802 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9826) <= _9826:
                        call address(_9672).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9714 + _9826 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15806 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15806))
                                staticcall address(_15806).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16256 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16526 = mem[_16256]
                                require mem[_16256] == mem[_16256]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17310 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    _17471 = mem[64]
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18223 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    s = 0
                                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                                    u = mem[64] + 196
                                    while s < _18223:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17471 + 100] = this.address
                                    mem[_17471 + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17310))
                                    call address(_17310).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17471 + (32 * _18223) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21720 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21720))
                                    staticcall address(_21720).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22295 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22295] == mem[_22295]
                                    idx = idx + 1
                                    s = _16526
                                    s = mem[_22295] - _16526
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                _17470 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18222 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18222:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17470 + 100] = addresses[address(msg.sender)].field_0
                                mem[_17470 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17310))
                                call address(_17310).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17470 + (32 * _18222) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21718 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21718))
                                staticcall address(_21718).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22294 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22294] == mem[_22294]
                                idx = idx + 1
                                s = _16526
                                s = mem[_22294] - _16526
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16374 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16374))
                            staticcall address(_16374).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16856 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17207 = mem[_16856]
                            require mem[_16856] == mem[_16856]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _18022 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18567 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                t = 0
                                u = (32 * arg1.length) + (32 * arg2.length) + 192
                                v = mem[64] + 196
                                while t < _18567:
                                    mem[v] = mem[u + 12 len 20]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[mem[64] + 100] = this.address
                                mem[mem[64] + 132] = block.timestamp + 1
                                require ext_code.size(address(_18022))
                                call address(_18022).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18567) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21724 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21724))
                                staticcall address(_21724).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22297 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22297] == mem[_22297]
                                idx = idx + 1
                                s = _17207
                                s = mem[_22297] - _17207
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18224 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18566 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18566:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18224 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18224 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18022))
                            call address(_18022).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18224 + (32 * _18566) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21722 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21722))
                            staticcall address(_21722).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22296 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22296] == mem[_22296]
                            idx = idx + 1
                            s = _17207
                            s = mem[_22296] - _17207
                            continue 
                        _15390 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15390] = return_data.size
                        mem[_15390 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15808 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15808))
                            staticcall address(_15808).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16258 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16527 = mem[_16258]
                            require mem[_16258] == mem[_16258]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17311 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17473 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18227 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18227:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17473 + 100] = this.address
                                mem[_17473 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17311))
                                call address(_17311).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17473 + (32 * _18227) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21728 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21728))
                                staticcall address(_21728).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22299 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22299] == mem[_22299]
                                idx = idx + 1
                                s = _16527
                                s = mem[_22299] - _16527
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17472 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18226 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18226:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17472 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17472 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17311))
                            call address(_17311).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17472 + (32 * _18226) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21726 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21726))
                            staticcall address(_21726).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22298 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22298] == mem[_22298]
                            idx = idx + 1
                            s = _16527
                            s = mem[_22298] - _16527
                            continue 
                        require return_data.size >= 32
                        require mem[_15390 + 32] == bool(mem[_15390 + 32])
                        if not mem[_15390 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16376 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16376))
                        staticcall address(_16376).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16859 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17209 = mem[_16859]
                        require mem[_16859] == mem[_16859]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18023 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18229 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18569 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18569:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18229 + 100] = this.address
                            mem[_18229 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18023))
                            call address(_18023).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18229 + (32 * _18569) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21732 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21732))
                            staticcall address(_21732).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22301 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22301] == mem[_22301]
                            idx = idx + 1
                            s = _17209
                            s = mem[_22301] - _17209
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18228 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18568 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18568:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18228 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18228 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18023))
                        call address(_18023).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18228 + (32 * _18568) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21730 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21730))
                        staticcall address(_21730).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22300 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22300] == mem[_22300]
                        idx = idx + 1
                        s = _17209
                        s = mem[_22300] - _17209
                        continue 
                    mem[_9714 + _9826 + 100] = 0
                    call address(_9672).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9714 + _9826 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15930 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15930))
                            staticcall address(_15930).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16378 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16584 = mem[_16378]
                            require mem[_16378] == mem[_16378]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17358 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17543 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18359 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18359:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17543 + 100] = this.address
                                mem[_17543 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17358))
                                call address(_17358).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17543 + (32 * _18359) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21736 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21736))
                                staticcall address(_21736).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22303 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22303] == mem[_22303]
                                idx = idx + 1
                                s = _16584
                                s = mem[_22303] - _16584
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17542 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18358 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18358:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17542 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17542 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17358))
                            call address(_17358).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17542 + (32 * _18358) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21734 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21734))
                            staticcall address(_21734).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22302 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22302] == mem[_22302]
                            idx = idx + 1
                            s = _16584
                            s = mem[_22302] - _16584
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16480 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16480))
                        staticcall address(_16480).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16986 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17313 = mem[_16986]
                        require mem[_16986] == mem[_16986]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18062 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18361 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18631 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18631:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18361 + 100] = this.address
                            mem[_18361 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18062))
                            call address(_18062).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18361 + (32 * _18631) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21740 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21740))
                            staticcall address(_21740).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22305 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22305] == mem[_22305]
                            idx = idx + 1
                            s = _17313
                            s = mem[_22305] - _17313
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18630 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18630:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_18062))
                        call address(_18062).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18630) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21738 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21738))
                        staticcall address(_21738).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22304 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22304] == mem[_22304]
                        idx = idx + 1
                        s = _17313
                        s = mem[_22304] - _17313
                        continue 
                    _15410 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15410] = return_data.size
                    mem[_15410 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15932 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15932))
                        staticcall address(_15932).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16380 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16585 = mem[_16380]
                        require mem[_16380] == mem[_16380]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17359 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17545 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18363 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18363:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17545 + 100] = this.address
                            mem[_17545 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17359))
                            call address(_17359).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17545 + (32 * _18363) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21744 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21744))
                            staticcall address(_21744).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22307 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22307] == mem[_22307]
                            idx = idx + 1
                            s = _16585
                            s = mem[_22307] - _16585
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _17544 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18362 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18362:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17544 + 100] = addresses[address(msg.sender)].field_0
                        mem[_17544 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17359))
                        call address(_17359).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17544 + (32 * _18362) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21742 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21742))
                        staticcall address(_21742).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22306 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22306] == mem[_22306]
                        idx = idx + 1
                        s = _16585
                        s = mem[_22306] - _16585
                        continue 
                    require return_data.size >= 32
                    require mem[_15410 + 32] == bool(mem[_15410 + 32])
                    if not mem[_15410 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16482 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16482))
                    staticcall address(_16482).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16989 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17315 = mem[_16989]
                    require mem[_16989] == mem[_16989]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18063 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        _18365 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18633 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18633:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18365 + 100] = this.address
                        mem[_18365 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18063))
                        call address(_18063).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18365 + (32 * _18633) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21748 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21748))
                        staticcall address(_21748).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22309 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22309] == mem[_22309]
                        idx = idx + 1
                        s = _17315
                        s = mem[_22309] - _17315
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18632 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    t = 0
                    u = (32 * arg1.length) + (32 * arg2.length) + 192
                    v = mem[64] + 196
                    while t < _18632:
                        mem[v] = mem[u + 12 len 20]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                    mem[mem[64] + 132] = block.timestamp + 1
                    require ext_code.size(address(_18063))
                    call address(_18063).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18632) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21746 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21746))
                    staticcall address(_21746).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22308 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22308] == mem[_22308]
                    idx = idx + 1
                    s = _17315
                    s = mem[_22308] - _17315
                    continue 
            else:
                require arg1.length >= 32
                require mem[128] == bool(mem[128])
                if not mem[128]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 392] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + 388
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9486 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9520 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9520)
                    require ext_code.size(address(_9486))
                    call address(_9486).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9520)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9571 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9571] == mem[_9571]
                    if mem[_9571] >= s:
                        require idx + 1 < mem[96]
                        _9674 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9674))
                        staticcall address(_9674).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9747 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9763 = mem[_9747]
                        require mem[_9747] == mem[_9747]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9971 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _10078 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10625 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _10625:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10078 + 100] = this.address
                            mem[_10078 + 132] = block.timestamp + 1
                            require ext_code.size(address(_9971))
                            call address(_9971).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10078 + (32 * _10625) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _16038 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16038))
                            staticcall address(_16038).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16485 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16485] == mem[_16485]
                            idx = idx + 1
                            s = _9763
                            s = mem[_16485] - _9763
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _10077 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10624 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _10624:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10077 + 100] = addresses[address(msg.sender)].field_0
                        mem[_10077 + 132] = block.timestamp + 1
                        require ext_code.size(address(_9971))
                        call address(_9971).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10077 + (32 * _10624) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _16036 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16036))
                        staticcall address(_16036).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16484 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16484] == mem[_16484]
                        idx = idx + 1
                        s = _9763
                        s = mem[_16484] - _9763
                        continue 
                    require idx < mem[96]
                    _9676 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9715 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9805 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9805 + 32] = mem[_9805 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9827 = mem[_9805]
                    t = 0
                    while t < _9827:
                        mem[_9715 + t + 100] = mem[_9805 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9827) <= _9827:
                        call address(_9676).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9715 + _9827 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15812 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15812))
                                staticcall address(_15812).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16262 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16528 = mem[_16262]
                                require mem[_16262] == mem[_16262]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17316 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18233 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    t = 0
                                    u = (32 * arg1.length) + (32 * arg2.length) + 192
                                    v = mem[64] + 196
                                    while t < _18233:
                                        mem[v] = mem[u + 12 len 20]
                                        t = t + 1
                                        u = u + 32
                                        v = v + 32
                                        continue 
                                    mem[mem[64] + 100] = this.address
                                    mem[mem[64] + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17316))
                                    call address(_17316).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                         gas gas_remaining wei
                                        args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18233) + 32]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21752 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21752))
                                    staticcall address(_21752).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22311 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22311] == mem[_22311]
                                    idx = idx + 1
                                    s = _16528
                                    s = mem[_22311] - _16528
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                _17476 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18232 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18232:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17476 + 100] = addresses[address(msg.sender)].field_0
                                mem[_17476 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17316))
                                call address(_17316).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17476 + (32 * _18232) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21750 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21750))
                                staticcall address(_21750).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22310 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22310] == mem[_22310]
                                idx = idx + 1
                                s = _16528
                                s = mem[_22310] - _16528
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16382 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16382))
                            staticcall address(_16382).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16864 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17215 = mem[_16864]
                            require mem[_16864] == mem[_16864]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _18026 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _18235 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18571 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18571:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_18235 + 100] = this.address
                                mem[_18235 + 132] = block.timestamp + 1
                                require ext_code.size(address(_18026))
                                call address(_18026).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _18235 + (32 * _18571) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21756 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21756))
                                staticcall address(_21756).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22313 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22313] == mem[_22313]
                                idx = idx + 1
                                s = _17215
                                s = mem[_22313] - _17215
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18234 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18570 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18570:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18234 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18234 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18026))
                            call address(_18026).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18234 + (32 * _18570) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21754 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21754))
                            staticcall address(_21754).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22312 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22312] == mem[_22312]
                            idx = idx + 1
                            s = _17215
                            s = mem[_22312] - _17215
                            continue 
                        _15392 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15392] = return_data.size
                        mem[_15392 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15814 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15814))
                            staticcall address(_15814).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16264 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16529 = mem[_16264]
                            require mem[_16264] == mem[_16264]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17317 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17479 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18237 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18237:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17479 + 100] = this.address
                                mem[_17479 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17317))
                                call address(_17317).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17479 + (32 * _18237) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21760 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21760))
                                staticcall address(_21760).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22315 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22315] == mem[_22315]
                                idx = idx + 1
                                s = _16529
                                s = mem[_22315] - _16529
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17478 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18236 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18236:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17478 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17478 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17317))
                            call address(_17317).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17478 + (32 * _18236) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21758 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21758))
                            staticcall address(_21758).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22314 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22314] == mem[_22314]
                            idx = idx + 1
                            s = _16529
                            s = mem[_22314] - _16529
                            continue 
                        require return_data.size >= 32
                        require mem[_15392 + 32] == bool(mem[_15392 + 32])
                        if not mem[_15392 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16384 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16384))
                        staticcall address(_16384).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16867 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17217 = mem[_16867]
                        require mem[_16867] == mem[_16867]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18027 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18573 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            t = 0
                            u = (32 * arg1.length) + (32 * arg2.length) + 192
                            v = mem[64] + 196
                            while t < _18573:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 1
                            require ext_code.size(address(_18027))
                            call address(_18027).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18573) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21764 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21764))
                            staticcall address(_21764).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22317 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22317] == mem[_22317]
                            idx = idx + 1
                            s = _17217
                            s = mem[_22317] - _17217
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18572 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18572:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_18027))
                        call address(_18027).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18572) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21762 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21762))
                        staticcall address(_21762).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22316 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22316] == mem[_22316]
                        idx = idx + 1
                        s = _17217
                        s = mem[_22316] - _17217
                        continue 
                    mem[_9715 + _9827 + 100] = 0
                    call address(_9676).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9715 + _9827 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15938 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15938))
                            staticcall address(_15938).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16386 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16588 = mem[_16386]
                            require mem[_16386] == mem[_16386]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17360 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17547 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18367 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18367:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17547 + 100] = this.address
                                mem[_17547 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17360))
                                call address(_17360).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17547 + (32 * _18367) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21768 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21768))
                                staticcall address(_21768).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22319 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22319] == mem[_22319]
                                idx = idx + 1
                                s = _16588
                                s = mem[_22319] - _16588
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17546 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18366 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18366:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17546 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17546 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17360))
                            call address(_17360).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17546 + (32 * _18366) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21766 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21766))
                            staticcall address(_21766).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22318 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22318] == mem[_22318]
                            idx = idx + 1
                            s = _16588
                            s = mem[_22318] - _16588
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16486 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16486))
                        staticcall address(_16486).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16994 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17319 = mem[_16994]
                        require mem[_16994] == mem[_16994]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18064 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18369 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18635 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18635:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18369 + 100] = this.address
                            mem[_18369 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18064))
                            call address(_18064).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18369 + (32 * _18635) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21772 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21772))
                            staticcall address(_21772).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22321 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22321] == mem[_22321]
                            idx = idx + 1
                            s = _17319
                            s = mem[_22321] - _17319
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18368 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18634 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18634:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18368 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18368 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18064))
                        call address(_18064).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18368 + (32 * _18634) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21770 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21770))
                        staticcall address(_21770).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22320 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22320] == mem[_22320]
                        idx = idx + 1
                        s = _17319
                        s = mem[_22320] - _17319
                        continue 
                    _15411 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15411] = return_data.size
                    mem[_15411 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15940 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15940))
                        staticcall address(_15940).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16388 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16589 = mem[_16388]
                        require mem[_16388] == mem[_16388]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17361 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17549 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18371 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18371:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17549 + 100] = this.address
                            mem[_17549 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17361))
                            call address(_17361).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17549 + (32 * _18371) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21776 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21776))
                            staticcall address(_21776).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22323 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22323] == mem[_22323]
                            idx = idx + 1
                            s = _16589
                            s = mem[_22323] - _16589
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _17548 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18370 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18370:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17548 + 100] = addresses[address(msg.sender)].field_0
                        mem[_17548 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17361))
                        call address(_17361).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17548 + (32 * _18370) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21774 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21774))
                        staticcall address(_21774).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22322 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22322] == mem[_22322]
                        idx = idx + 1
                        s = _16589
                        s = mem[_22322] - _16589
                        continue 
                    require return_data.size >= 32
                    require mem[_15411 + 32] == bool(mem[_15411 + 32])
                    if not mem[_15411 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16488 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16488))
                    staticcall address(_16488).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _16997 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17321 = mem[_16997]
                    require mem[_16997] == mem[_16997]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18065 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18637 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18637:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_18065))
                        call address(_18065).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18637) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21780 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21780))
                        staticcall address(_21780).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22325 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22325] == mem[_22325]
                        idx = idx + 1
                        s = _17321
                        s = mem[_22325] - _17321
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    _18372 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18636 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    s = 0
                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                    u = mem[64] + 196
                    while s < _18636:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18372 + 100] = addresses[address(msg.sender)].field_0
                    mem[_18372 + 132] = block.timestamp + 1
                    require ext_code.size(address(_18065))
                    call address(_18065).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18372 + (32 * _18636) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21778 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21778))
                    staticcall address(_21778).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22324 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22324] == mem[_22324]
                    idx = idx + 1
                    s = _17321
                    s = mem[_22324] - _17321
                    continue 
        else:
            mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 388] = return_data.size
            mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420 len return_data.size] = ext_call.return_data[0 len return_data.size]
            if not ext_call.success:
                revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
            if not return_data.size:
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 389
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9489 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9522 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9522)
                    require ext_code.size(address(_9489))
                    call address(_9489).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9522)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9572 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9572] == mem[_9572]
                    if mem[_9572] >= s:
                        require idx + 1 < mem[96]
                        _9678 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9678))
                        staticcall address(_9678).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9748 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9764 = mem[_9748]
                        require mem[_9748] == mem[_9748]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9972 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _10081 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10627 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _10627:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10081 + 100] = this.address
                            mem[_10081 + 132] = block.timestamp + 1
                            require ext_code.size(address(_9972))
                            call address(_9972).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10081 + (32 * _10627) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _16044 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16044))
                            staticcall address(_16044).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16491 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16491] == mem[_16491]
                            idx = idx + 1
                            s = _9764
                            s = mem[_16491] - _9764
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _10080 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10626 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _10626:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10080 + 100] = addresses[address(msg.sender)].field_0
                        mem[_10080 + 132] = block.timestamp + 1
                        require ext_code.size(address(_9972))
                        call address(_9972).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10080 + (32 * _10626) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _16042 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16042))
                        staticcall address(_16042).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16490 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16490] == mem[_16490]
                        idx = idx + 1
                        s = _9764
                        s = mem[_16490] - _9764
                        continue 
                    require idx < mem[96]
                    _9680 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9716 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9808 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9808 + 32] = mem[_9808 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9828 = mem[_9808]
                    t = 0
                    while t < _9828:
                        mem[_9716 + t + 100] = mem[_9808 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9828) <= _9828:
                        call address(_9680).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9716 + _9828 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15818 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15818))
                                staticcall address(_15818).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16268 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16530 = mem[_16268]
                                require mem[_16268] == mem[_16268]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17322 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    _17483 = mem[64]
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18243 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    s = 0
                                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                                    u = mem[64] + 196
                                    while s < _18243:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17483 + 100] = this.address
                                    mem[_17483 + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17322))
                                    call address(_17322).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17483 + (32 * _18243) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21784 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21784))
                                    staticcall address(_21784).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22327 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22327] == mem[_22327]
                                    idx = idx + 1
                                    s = _16530
                                    s = mem[_22327] - _16530
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                _17482 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18242 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18242:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17482 + 100] = addresses[address(msg.sender)].field_0
                                mem[_17482 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17322))
                                call address(_17322).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17482 + (32 * _18242) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21782 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21782))
                                staticcall address(_21782).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22326 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22326] == mem[_22326]
                                idx = idx + 1
                                s = _16530
                                s = mem[_22326] - _16530
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16390 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16390))
                            staticcall address(_16390).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16872 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17223 = mem[_16872]
                            require mem[_16872] == mem[_16872]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _18030 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18575 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                t = 0
                                u = (32 * arg1.length) + (32 * arg2.length) + 192
                                v = mem[64] + 196
                                while t < _18575:
                                    mem[v] = mem[u + 12 len 20]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[mem[64] + 100] = this.address
                                mem[mem[64] + 132] = block.timestamp + 1
                                require ext_code.size(address(_18030))
                                call address(_18030).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18575) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21788 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21788))
                                staticcall address(_21788).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22329 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22329] == mem[_22329]
                                idx = idx + 1
                                s = _17223
                                s = mem[_22329] - _17223
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18244 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18574 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18574:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18244 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18244 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18030))
                            call address(_18030).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18244 + (32 * _18574) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21786 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21786))
                            staticcall address(_21786).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22328 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22328] == mem[_22328]
                            idx = idx + 1
                            s = _17223
                            s = mem[_22328] - _17223
                            continue 
                        _15394 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15394] = return_data.size
                        mem[_15394 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15820 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15820))
                            staticcall address(_15820).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16270 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16531 = mem[_16270]
                            require mem[_16270] == mem[_16270]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17323 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17485 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18247 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18247:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17485 + 100] = this.address
                                mem[_17485 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17323))
                                call address(_17323).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17485 + (32 * _18247) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21792 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21792))
                                staticcall address(_21792).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22331 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22331] == mem[_22331]
                                idx = idx + 1
                                s = _16531
                                s = mem[_22331] - _16531
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17484 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18246 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18246:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17484 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17484 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17323))
                            call address(_17323).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17484 + (32 * _18246) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21790 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21790))
                            staticcall address(_21790).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22330 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22330] == mem[_22330]
                            idx = idx + 1
                            s = _16531
                            s = mem[_22330] - _16531
                            continue 
                        require return_data.size >= 32
                        require mem[_15394 + 32] == bool(mem[_15394 + 32])
                        if not mem[_15394 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16392 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16392))
                        staticcall address(_16392).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16875 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17225 = mem[_16875]
                        require mem[_16875] == mem[_16875]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18031 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18577 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            t = 0
                            u = (32 * arg1.length) + (32 * arg2.length) + 192
                            v = mem[64] + 196
                            while t < _18577:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = this.address
                            mem[mem[64] + 132] = block.timestamp + 1
                            require ext_code.size(address(_18031))
                            call address(_18031).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18577) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21796 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21796))
                            staticcall address(_21796).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22333 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22333] == mem[_22333]
                            idx = idx + 1
                            s = _17225
                            s = mem[_22333] - _17225
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18248 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18576 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18576:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18248 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18248 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18031))
                        call address(_18031).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18248 + (32 * _18576) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21794 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21794))
                        staticcall address(_21794).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22332 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22332] == mem[_22332]
                        idx = idx + 1
                        s = _17225
                        s = mem[_22332] - _17225
                        continue 
                    mem[_9716 + _9828 + 100] = 0
                    call address(_9680).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9716 + _9828 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15946 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15946))
                            staticcall address(_15946).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16394 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16592 = mem[_16394]
                            require mem[_16394] == mem[_16394]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17362 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17551 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18375 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18375:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17551 + 100] = this.address
                                mem[_17551 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17362))
                                call address(_17362).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17551 + (32 * _18375) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21800 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21800))
                                staticcall address(_21800).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22335 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22335] == mem[_22335]
                                idx = idx + 1
                                s = _16592
                                s = mem[_22335] - _16592
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17550 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18374 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18374:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17550 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17550 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17362))
                            call address(_17362).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17550 + (32 * _18374) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21798 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21798))
                            staticcall address(_21798).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22334 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22334] == mem[_22334]
                            idx = idx + 1
                            s = _16592
                            s = mem[_22334] - _16592
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16492 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16492))
                        staticcall address(_16492).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17002 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17325 = mem[_17002]
                        require mem[_17002] == mem[_17002]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18066 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18377 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18639 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18639:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18377 + 100] = this.address
                            mem[_18377 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18066))
                            call address(_18066).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18377 + (32 * _18639) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21804 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21804))
                            staticcall address(_21804).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22337 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22337] == mem[_22337]
                            idx = idx + 1
                            s = _17325
                            s = mem[_22337] - _17325
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18376 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18638 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18638:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18376 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18376 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18066))
                        call address(_18066).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18376 + (32 * _18638) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21802 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21802))
                        staticcall address(_21802).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22336 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22336] == mem[_22336]
                        idx = idx + 1
                        s = _17325
                        s = mem[_22336] - _17325
                        continue 
                    _15412 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15412] = return_data.size
                    mem[_15412 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15948 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15948))
                        staticcall address(_15948).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16396 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16593 = mem[_16396]
                        require mem[_16396] == mem[_16396]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17363 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17553 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18379 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18379:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17553 + 100] = this.address
                            mem[_17553 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17363))
                            call address(_17363).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17553 + (32 * _18379) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21808 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21808))
                            staticcall address(_21808).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22339 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22339] == mem[_22339]
                            idx = idx + 1
                            s = _16593
                            s = mem[_22339] - _16593
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _17552 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18378 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18378:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_17552 + 100] = addresses[address(msg.sender)].field_0
                        mem[_17552 + 132] = block.timestamp + 1
                        require ext_code.size(address(_17363))
                        call address(_17363).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _17552 + (32 * _18378) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21806 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21806))
                        staticcall address(_21806).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22338 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22338] == mem[_22338]
                        idx = idx + 1
                        s = _16593
                        s = mem[_22338] - _16593
                        continue 
                    require return_data.size >= 32
                    require mem[_15412 + 32] == bool(mem[_15412 + 32])
                    if not mem[_15412 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16494 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16494))
                    staticcall address(_16494).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17005 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17327 = mem[_17005]
                    require mem[_17005] == mem[_17005]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18067 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18641 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18641:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = this.address
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_18067))
                        call address(_18067).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, 0, 160, address(this.address), block.timestamp + 1, mem[mem[64] + 164 len (32 * _18641) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21812 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21812))
                        staticcall address(_21812).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22341 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22341] == mem[_22341]
                        idx = idx + 1
                        s = _17327
                        s = mem[_22341] - _17327
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18640 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    t = 0
                    u = (32 * arg1.length) + (32 * arg2.length) + 192
                    v = mem[64] + 196
                    while t < _18640:
                        mem[v] = mem[u + 12 len 20]
                        t = t + 1
                        u = u + 32
                        v = v + 32
                        continue 
                    mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                    mem[mem[64] + 132] = block.timestamp + 1
                    require ext_code.size(address(_18067))
                    call address(_18067).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                         gas gas_remaining wei
                        args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18640) + 32]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21810 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21810))
                    staticcall address(_21810).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22340 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22340] == mem[_22340]
                    idx = idx + 1
                    s = _17327
                    s = mem[_22340] - _17327
                    continue 
            else:
                require return_data.size >= 32
                require mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420] == bool(mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420])
                if not mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + 420]:
                    revert with 0, 'TransferHelperUNDB::transferFrom: transferFrom failed'
                require 0 < arg1.length
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 393] = this.address
                require ext_code.size(mem[140 len 20])
                staticcall mem[140 len 20].0x70a08231 with:
                        gas gas_remaining wei
                       args this.address
                mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] = ext_call.return_data[0]
                if not ext_call.success:
                    revert with ext_call.return_data[0 len return_data.size]
                mem[64] = (32 * arg1.length) + (32 * arg2.length) + (2 * ceil32(return_data.size)) + ceil32(return_data.size) + 389
                require return_data.size >= 32
                require ext_call.return_data[0] == ext_call.return_data[0]
                idx = 0
                s = ext_call.return_data[0] + (arg3 * feePercent_x_100000 / stor1)
                s = mem[(32 * arg1.length) + (32 * arg2.length) + ceil32(return_data.size) + ceil32(return_data.size) + 389] - ext_call.return_data[0] - (arg3 * feePercent_x_100000 / stor1)
                while idx < arg2.length:
                    require idx < mem[96]
                    _9492 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9524 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    mem[mem[64] + 4] = this.address
                    mem[mem[64] + 36] = address(_9524)
                    require ext_code.size(address(_9492))
                    call address(_9492).0xdd62ed3e with:
                         gas gas_remaining wei
                        args address(this.address), address(_9524)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _9573 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_9573] == mem[_9573]
                    if mem[_9573] >= s:
                        require idx + 1 < mem[96]
                        _9682 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_9682))
                        staticcall address(_9682).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _9749 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _9765 = mem[_9749]
                        require mem[_9749] == mem[_9749]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _9973 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _10084 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _10629 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _10629:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_10084 + 100] = this.address
                            mem[_10084 + 132] = block.timestamp + 1
                            require ext_code.size(address(_9973))
                            call address(_9973).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _10084 + (32 * _10629) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _16050 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16050))
                            staticcall address(_16050).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16497 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_16497] == mem[_16497]
                            idx = idx + 1
                            s = _9765
                            s = mem[_16497] - _9765
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _10083 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _10628 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _10628:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_10083 + 100] = addresses[address(msg.sender)].field_0
                        mem[_10083 + 132] = block.timestamp + 1
                        require ext_code.size(address(_9973))
                        call address(_9973).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _10083 + (32 * _10628) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _16048 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16048))
                        staticcall address(_16048).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16496 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_16496] == mem[_16496]
                        idx = idx + 1
                        s = _9765
                        s = mem[_16496] - _9765
                        continue 
                    require idx < mem[96]
                    _9684 = mem[(32 * idx) + 128]
                    require idx < mem[(32 * arg1.length) + 128]
                    _9717 = mem[64]
                    mem[mem[64] + 36] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                    mem[mem[64] + 68] = 10000 * s
                    _9811 = mem[64]
                    mem[mem[64]] = 68
                    mem[64] = mem[64] + 100
                    mem[_9811 + 32] = mem[_9811 + 36 len 28] or 0x95ea7b300000000000000000000000000000000000000000000000000000000
                    _9829 = mem[_9811]
                    t = 0
                    while t < _9829:
                        mem[_9717 + t + 100] = mem[_9811 + t + 32]
                        t = t + 32
                        continue 
                    if ceil32(_9829) <= _9829:
                        call address(_9684).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _9717 + _9829 + -mem[64] + 96]
                        if not return_data.size:
                            if not ext_call.success:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            if not mem[96]:
                                require idx + 1 < mem[96]
                                _15824 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_15824))
                                staticcall address(_15824).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _16274 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16532 = mem[_16274]
                                require mem[_16274] == mem[_16274]
                                require idx < mem[96]
                                require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                                require idx + 1 < mem[96]
                                require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                                require idx < mem[(32 * arg1.length) + 128]
                                _17328 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                if arg2.length != idx + 1:
                                    _17489 = mem[64]
                                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = s
                                    mem[mem[64] + 36] = 0
                                    mem[mem[64] + 68] = 160
                                    _18253 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                    s = 0
                                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                                    u = mem[64] + 196
                                    while s < _18253:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    mem[_17489 + 100] = this.address
                                    mem[_17489 + 132] = block.timestamp + 1
                                    require ext_code.size(address(_17328))
                                    call address(_17328).mem[mem[64] len 4] with:
                                         gas gas_remaining wei
                                        args mem[mem[64] + 4 len _17489 + (32 * _18253) + -mem[64] + 192]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    require idx + 1 < mem[96]
                                    _21816 = mem[(32 * idx + 1) + 128]
                                    mem[mem[64] + 4] = this.address
                                    require ext_code.size(address(_21816))
                                    staticcall address(_21816).0x70a08231 with:
                                            gas gas_remaining wei
                                           args address(this.address)
                                    mem[mem[64]] = ext_call.return_data[0]
                                    if not ext_call.success:
                                        revert with ext_call.return_data[0 len return_data.size]
                                    _22343 = mem[64]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    require mem[_22343] == mem[_22343]
                                    idx = idx + 1
                                    s = _16532
                                    s = mem[_22343] - _16532
                                    continue 
                                mem[0] = msg.sender
                                mem[32] = 3
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = arg4
                                mem[mem[64] + 68] = 160
                                _18252 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                t = 0
                                u = (32 * arg1.length) + (32 * arg2.length) + 192
                                v = mem[64] + 196
                                while t < _18252:
                                    mem[v] = mem[u + 12 len 20]
                                    t = t + 1
                                    u = u + 32
                                    v = v + 32
                                    continue 
                                mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                                mem[mem[64] + 132] = block.timestamp + 1
                                require ext_code.size(address(_17328))
                                call address(_17328).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                     gas gas_remaining wei
                                    args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18252) + 32]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21814 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21814))
                                staticcall address(_21814).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22342 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22342] == mem[_22342]
                                idx = idx + 1
                                s = _16532
                                s = mem[_22342] - _16532
                                continue 
                            require mem[96] >= 32
                            require mem[128] == bool(mem[128])
                            if not mem[128]:
                                revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                            require idx + 1 < mem[96]
                            _16398 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_16398))
                            staticcall address(_16398).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16880 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _17231 = mem[_16880]
                            require mem[_16880] == mem[_16880]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _18034 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _18255 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18579 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18579:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_18255 + 100] = this.address
                                mem[_18255 + 132] = block.timestamp + 1
                                require ext_code.size(address(_18034))
                                call address(_18034).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _18255 + (32 * _18579) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21820 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21820))
                                staticcall address(_21820).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22345 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22345] == mem[_22345]
                                idx = idx + 1
                                s = _17231
                                s = mem[_22345] - _17231
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _18254 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18578 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18578:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18254 + 100] = addresses[address(msg.sender)].field_0
                            mem[_18254 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18034))
                            call address(_18034).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18254 + (32 * _18578) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21818 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21818))
                            staticcall address(_21818).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22344 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22344] == mem[_22344]
                            idx = idx + 1
                            s = _17231
                            s = mem[_22344] - _17231
                            continue 
                        _15396 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size) + 1
                        mem[_15396] = return_data.size
                        mem[_15396 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not return_data.size:
                            require idx + 1 < mem[96]
                            _15826 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15826))
                            staticcall address(_15826).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16276 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16533 = mem[_16276]
                            require mem[_16276] == mem[_16276]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17329 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17491 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18257 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18257:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17491 + 100] = this.address
                                mem[_17491 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17329))
                                call address(_17329).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17491 + (32 * _18257) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21824 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21824))
                                staticcall address(_21824).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22347 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22347] == mem[_22347]
                                idx = idx + 1
                                s = _16533
                                s = mem[_22347] - _16533
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18256 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            t = 0
                            u = (32 * arg1.length) + (32 * arg2.length) + 192
                            v = mem[64] + 196
                            while t < _18256:
                                mem[v] = mem[u + 12 len 20]
                                t = t + 1
                                u = u + 32
                                v = v + 32
                                continue 
                            mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                            mem[mem[64] + 132] = block.timestamp + 1
                            require ext_code.size(address(_17329))
                            call address(_17329).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                                 gas gas_remaining wei
                                args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18256) + 32]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21822 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21822))
                            staticcall address(_21822).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22346 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22346] == mem[_22346]
                            idx = idx + 1
                            s = _16533
                            s = mem[_22346] - _16533
                            continue 
                        require return_data.size >= 32
                        require mem[_15396 + 32] == bool(mem[_15396 + 32])
                        if not mem[_15396 + 32]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16400 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16400))
                        staticcall address(_16400).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16883 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17233 = mem[_16883]
                        require mem[_16883] == mem[_16883]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18035 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18259 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18581 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18581:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18259 + 100] = this.address
                            mem[_18259 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18035))
                            call address(_18035).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18259 + (32 * _18581) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21828 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21828))
                            staticcall address(_21828).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22349 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22349] == mem[_22349]
                            idx = idx + 1
                            s = _17233
                            s = mem[_22349] - _17233
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18580 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18580:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_18035))
                        call address(_18035).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18580) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21826 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21826))
                        staticcall address(_21826).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22348 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22348] == mem[_22348]
                        idx = idx + 1
                        s = _17233
                        s = mem[_22348] - _17233
                        continue 
                    mem[_9717 + _9829 + 100] = 0
                    call address(_9684).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _9717 + _9829 + -mem[64] + 96]
                    if not return_data.size:
                        if not ext_call.success:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        if not mem[96]:
                            require idx + 1 < mem[96]
                            _15954 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_15954))
                            staticcall address(_15954).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _16402 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            _16596 = mem[_16402]
                            require mem[_16402] == mem[_16402]
                            require idx < mem[96]
                            require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                            require idx + 1 < mem[96]
                            require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                            require idx < mem[(32 * arg1.length) + 128]
                            _17364 = mem[(32 * idx) + (32 * arg1.length) + 160]
                            if arg2.length != idx + 1:
                                _17555 = mem[64]
                                mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = s
                                mem[mem[64] + 36] = 0
                                mem[mem[64] + 68] = 160
                                _18383 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                                s = 0
                                t = (32 * arg1.length) + (32 * arg2.length) + 192
                                u = mem[64] + 196
                                while s < _18383:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                mem[_17555 + 100] = this.address
                                mem[_17555 + 132] = block.timestamp + 1
                                require ext_code.size(address(_17364))
                                call address(_17364).mem[mem[64] len 4] with:
                                     gas gas_remaining wei
                                    args mem[mem[64] + 4 len _17555 + (32 * _18383) + -mem[64] + 192]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                require idx + 1 < mem[96]
                                _21832 = mem[(32 * idx + 1) + 128]
                                mem[mem[64] + 4] = this.address
                                require ext_code.size(address(_21832))
                                staticcall address(_21832).0x70a08231 with:
                                        gas gas_remaining wei
                                       args address(this.address)
                                mem[mem[64]] = ext_call.return_data[0]
                                if not ext_call.success:
                                    revert with ext_call.return_data[0 len return_data.size]
                                _22351 = mem[64]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                require mem[_22351] == mem[_22351]
                                idx = idx + 1
                                s = _16596
                                s = mem[_22351] - _16596
                                continue 
                            mem[0] = msg.sender
                            mem[32] = 3
                            _17554 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = arg4
                            mem[mem[64] + 68] = 160
                            _18382 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18382:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17554 + 100] = addresses[address(msg.sender)].field_0
                            mem[_17554 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17364))
                            call address(_17364).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17554 + (32 * _18382) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21830 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21830))
                            staticcall address(_21830).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22350 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22350] == mem[_22350]
                            idx = idx + 1
                            s = _16596
                            s = mem[_22350] - _16596
                            continue 
                        require mem[96] >= 32
                        require mem[128] == bool(mem[128])
                        if not mem[128]:
                            revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                        require idx + 1 < mem[96]
                        _16498 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_16498))
                        staticcall address(_16498).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _17010 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _17331 = mem[_17010]
                        require mem[_17010] == mem[_17010]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _18068 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _18385 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18643 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18643:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_18385 + 100] = this.address
                            mem[_18385 + 132] = block.timestamp + 1
                            require ext_code.size(address(_18068))
                            call address(_18068).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _18385 + (32 * _18643) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21836 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21836))
                            staticcall address(_21836).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22353 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22353] == mem[_22353]
                            idx = idx + 1
                            s = _17331
                            s = mem[_22353] - _17331
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        _18384 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18642 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18642:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18384 + 100] = addresses[address(msg.sender)].field_0
                        mem[_18384 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18068))
                        call address(_18068).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18384 + (32 * _18642) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21834 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21834))
                        staticcall address(_21834).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22352 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22352] == mem[_22352]
                        idx = idx + 1
                        s = _17331
                        s = mem[_22352] - _17331
                        continue 
                    _15413 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size) + 1
                    mem[_15413] = return_data.size
                    mem[_15413 + 32 len return_data.size] = ext_call.return_data[0 len return_data.size]
                    if not ext_call.success:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    if not return_data.size:
                        require idx + 1 < mem[96]
                        _15956 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_15956))
                        staticcall address(_15956).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _16404 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        _16597 = mem[_16404]
                        require mem[_16404] == mem[_16404]
                        require idx < mem[96]
                        require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                        require idx + 1 < mem[96]
                        require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                        require idx < mem[(32 * arg1.length) + 128]
                        _17365 = mem[(32 * idx) + (32 * arg1.length) + 160]
                        if arg2.length != idx + 1:
                            _17557 = mem[64]
                            mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                            mem[mem[64] + 4] = s
                            mem[mem[64] + 36] = 0
                            mem[mem[64] + 68] = 160
                            _18387 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                            s = 0
                            t = (32 * arg1.length) + (32 * arg2.length) + 192
                            u = mem[64] + 196
                            while s < _18387:
                                mem[u] = mem[t + 12 len 20]
                                s = s + 1
                                t = t + 32
                                u = u + 32
                                continue 
                            mem[_17557 + 100] = this.address
                            mem[_17557 + 132] = block.timestamp + 1
                            require ext_code.size(address(_17365))
                            call address(_17365).mem[mem[64] len 4] with:
                                 gas gas_remaining wei
                                args mem[mem[64] + 4 len _17557 + (32 * _18387) + -mem[64] + 192]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            require idx + 1 < mem[96]
                            _21840 = mem[(32 * idx + 1) + 128]
                            mem[mem[64] + 4] = this.address
                            require ext_code.size(address(_21840))
                            staticcall address(_21840).0x70a08231 with:
                                    gas gas_remaining wei
                                   args address(this.address)
                            mem[mem[64]] = ext_call.return_data[0]
                            if not ext_call.success:
                                revert with ext_call.return_data[0 len return_data.size]
                            _22355 = mem[64]
                            mem[64] = mem[64] + ceil32(return_data.size)
                            require return_data.size >= 32
                            require mem[_22355] == mem[_22355]
                            idx = idx + 1
                            s = _16597
                            s = mem[_22355] - _16597
                            continue 
                        mem[0] = msg.sender
                        mem[32] = 3
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = arg4
                        mem[mem[64] + 68] = 160
                        _18386 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        t = 0
                        u = (32 * arg1.length) + (32 * arg2.length) + 192
                        v = mem[64] + 196
                        while t < _18386:
                            mem[v] = mem[u + 12 len 20]
                            t = t + 1
                            u = u + 32
                            v = v + 32
                            continue 
                        mem[mem[64] + 100] = addresses[address(msg.sender)].field_0
                        mem[mem[64] + 132] = block.timestamp + 1
                        require ext_code.size(address(_17365))
                        call address(_17365).swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256 arg1, uint256 arg2, address[] arg3, address arg4, uint256 arg5) with:
                             gas gas_remaining wei
                            args s, arg4, 160, addresses[address(msg.sender)].field_0, block.timestamp + 1, mem[mem[64] + 164 len (32 * _18386) + 32]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21838 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21838))
                        staticcall address(_21838).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22354 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22354] == mem[_22354]
                        idx = idx + 1
                        s = _16597
                        s = mem[_22354] - _16597
                        continue 
                    require return_data.size >= 32
                    require mem[_15413 + 32] == bool(mem[_15413 + 32])
                    if not mem[_15413 + 32]:
                        revert with 0, 'TransferHelperUNDB::safeApprove: approve failed'
                    require idx + 1 < mem[96]
                    _16500 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_16500))
                    staticcall address(_16500).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _17013 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    _17333 = mem[_17013]
                    require mem[_17013] == mem[_17013]
                    require idx < mem[96]
                    require 0 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 192] = mem[(32 * idx) + 140 len 20]
                    require idx + 1 < mem[96]
                    require 1 < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[(32 * arg1.length) + (32 * arg2.length) + 224] = mem[(32 * idx + 1) + 140 len 20]
                    require idx < mem[(32 * arg1.length) + 128]
                    _18069 = mem[(32 * idx) + (32 * arg1.length) + 160]
                    if arg2.length != idx + 1:
                        _18389 = mem[64]
                        mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                        mem[mem[64] + 4] = s
                        mem[mem[64] + 36] = 0
                        mem[mem[64] + 68] = 160
                        _18645 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                        s = 0
                        t = (32 * arg1.length) + (32 * arg2.length) + 192
                        u = mem[64] + 196
                        while s < _18645:
                            mem[u] = mem[t + 12 len 20]
                            s = s + 1
                            t = t + 32
                            u = u + 32
                            continue 
                        mem[_18389 + 100] = this.address
                        mem[_18389 + 132] = block.timestamp + 1
                        require ext_code.size(address(_18069))
                        call address(_18069).mem[mem[64] len 4] with:
                             gas gas_remaining wei
                            args mem[mem[64] + 4 len _18389 + (32 * _18645) + -mem[64] + 192]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        require idx + 1 < mem[96]
                        _21844 = mem[(32 * idx + 1) + 128]
                        mem[mem[64] + 4] = this.address
                        require ext_code.size(address(_21844))
                        staticcall address(_21844).0x70a08231 with:
                                gas gas_remaining wei
                               args address(this.address)
                        mem[mem[64]] = ext_call.return_data[0]
                        if not ext_call.success:
                            revert with ext_call.return_data[0 len return_data.size]
                        _22357 = mem[64]
                        mem[64] = mem[64] + ceil32(return_data.size)
                        require return_data.size >= 32
                        require mem[_22357] == mem[_22357]
                        idx = idx + 1
                        s = _17333
                        s = mem[_22357] - _17333
                        continue 
                    mem[0] = msg.sender
                    mem[32] = 3
                    _18388 = mem[64]
                    mem[mem[64]] = 0x5c11d79500000000000000000000000000000000000000000000000000000000
                    mem[mem[64] + 4] = s
                    mem[mem[64] + 36] = arg4
                    mem[mem[64] + 68] = 160
                    _18644 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    mem[mem[64] + 164] = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
                    s = 0
                    t = (32 * arg1.length) + (32 * arg2.length) + 192
                    u = mem[64] + 196
                    while s < _18644:
                        mem[u] = mem[t + 12 len 20]
                        s = s + 1
                        t = t + 32
                        u = u + 32
                        continue 
                    mem[_18388 + 100] = addresses[address(msg.sender)].field_0
                    mem[_18388 + 132] = block.timestamp + 1
                    require ext_code.size(address(_18069))
                    call address(_18069).mem[mem[64] len 4] with:
                         gas gas_remaining wei
                        args mem[mem[64] + 4 len _18388 + (32 * _18644) + -mem[64] + 192]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    require idx + 1 < mem[96]
                    _21842 = mem[(32 * idx + 1) + 128]
                    mem[mem[64] + 4] = this.address
                    require ext_code.size(address(_21842))
                    staticcall address(_21842).0x70a08231 with:
                            gas gas_remaining wei
                           args address(this.address)
                    mem[mem[64]] = ext_call.return_data[0]
                    if not ext_call.success:
                        revert with ext_call.return_data[0 len return_data.size]
                    _22356 = mem[64]
                    mem[64] = mem[64] + ceil32(return_data.size)
                    require return_data.size >= 32
                    require mem[_22356] == mem[_22356]
                    idx = idx + 1
                    s = _17333
                    s = mem[_22356] - _17333
                    continue 
    return 0
}

function multicalBestRoutes(address[] arg1, address[] arg2, address[] arg3, address[] arg4, uint256[] arg5) payable {
    require calldata.size - 4 >= 160
    require arg1 <= test266151307()
    require arg1 + 35 < calldata.size
    require arg1.length <= test266151307()
    require (32 * arg1.length) + 128 <= test266151307() and (32 * arg1.length) + 128 >= 96
    mem[96] = arg1.length
    require arg1 + (32 * arg1.length) + 36 <= calldata.size
    idx = 0
    s = arg1 + 36
    t = 128
    while idx < arg1.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg2 <= test266151307()
    require arg2 + 35 < calldata.size
    require arg2.length <= test266151307()
    require (32 * arg1.length) + (32 * arg2.length) + 160 <= test266151307() and (32 * arg2.length) + 160 >= 128
    mem[(32 * arg1.length) + 128] = arg2.length
    require arg2 + (32 * arg2.length) + 36 <= calldata.size
    idx = 0
    s = arg2 + 36
    t = (32 * arg1.length) + 160
    while idx < arg2.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg3 <= test266151307()
    require arg3 + 35 < calldata.size
    require arg3.length <= test266151307()
    require (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 192 <= test266151307() and (32 * arg3.length) + 192 >= 160
    mem[(32 * arg1.length) + (32 * arg2.length) + 160] = arg3.length
    require arg3 + (32 * arg3.length) + 36 <= calldata.size
    idx = 0
    s = arg3 + 36
    t = (32 * arg1.length) + (32 * arg2.length) + 192
    while idx < arg3.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg4 <= test266151307()
    require arg4 + 35 < calldata.size
    require arg4.length <= test266151307()
    require (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 224 <= test266151307() and (32 * arg4.length) + 224 >= 192
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 192] = arg4.length
    require arg4 + (32 * arg4.length) + 36 <= calldata.size
    idx = 0
    s = arg4 + 36
    t = (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 224
    while idx < arg4.length:
        require cd[s] == address(cd[s])
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    require arg5 <= test266151307()
    require arg5 + 35 < calldata.size
    require arg5.length <= test266151307()
    require (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 256 <= test266151307() and (32 * arg5.length) + 256 >= 224
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 224] = arg5.length
    require arg5 + (32 * arg5.length) + 36 <= calldata.size
    idx = 0
    s = arg5 + 36
    t = (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 256
    while idx < arg5.length:
        require cd[s] == cd[s]
        mem[t] = cd[s]
        idx = idx + 1
        s = s + 32
        t = t + 32
        continue 
    mem[64] = (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3552
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3456] = 96
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3488] = 96
    mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3520] = 0
    mem[var80001] = (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3456
    s = var80001
    idx = var80002
    while idx - 1:
        mem[64] = mem[64] + 96
        mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3456] = 96
        mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3488] = 96
        mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3520] = 0
        mem[s + 32] = (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + (32 * arg5.length) + 3456
        s = s + 32
        idx = idx - 1
        continue 
    _33 = mem[(32 * arg1.length) + (32 * arg2.length) + 160]
    _34 = mem[64]
    mem[64] = mem[64] + 3200
    _3380 = mem[64]
    mem[64] = mem[64] + 96
    mem[_3380] = 96
    mem[_3380 + 32] = 96
    mem[_3380 + 64] = 0
    mem[var88001] = _3380
    s = var88001
    idx = var88002
    while idx - 1:
        _3380 = mem[64]
        mem[64] = mem[64] + 96
        mem[_3380] = 96
        mem[_3380 + 32] = 96
        mem[_3380 + 64] = 0
        mem[s + 32] = _3380
        s = s + 32
        idx = idx - 1
        continue 
    idx = 0
    while idx < _33:
        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + 160]
        _6726 = mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + 192]
        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 192]
        _6728 = mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + 224]
        require idx < mem[(32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 224]
        _6730 = mem[(32 * idx) + (32 * arg1.length) + (32 * arg2.length) + (32 * arg3.length) + (32 * arg4.length) + 256]
        _6731 = mem[64]
        mem[64] = mem[64] + 96
        mem[_6731] = 96
        mem[_6731 + 32] = 96
        mem[_6731 + 64] = 0
        _6732 = mem[(32 * arg1.length) + 128]
        _6733 = mem[64]
        mem[64] = mem[64] + 64
        mem[_6733] = 0
        mem[_6733 + 32] = 0
        _6734 = mem[64]
        mem[64] = mem[64] + 64
        mem[_6734] = 0
        mem[_6734 + 32] = 0
        if address(_6726) == address(_6728):
            _6737 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6737] = 0
            mem[_6737 + 32] = 0
            _6742 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6742] = 0
            mem[_6742 + 32] = 0
            _6744 = mem[64]
            mem[64] = mem[64] + 64
            mem[_6744] = 0
            mem[_6744 + 32] = 0
            _6747 = mem[64]
            mem[64] = mem[64] + 96
            mem[_6747] = 96
            mem[_6747 + 32] = 96
            mem[_6747 + 64] = 0
            _6750 = mem[64]
            mem[64] = mem[64] + 96
            _6751 = mem[64]
            mem[mem[64] + 32 len 128] = call.data[calldata.size len 128]
            mem[_6750] = mem[64]
            mem[_6751 + 160] = 3
            mem[64] = _6751 + 288
            mem[_6751 + 192 len 96] = call.data[calldata.size len 96]
            mem[_6750 + 32] = _6751 + 160
            mem[_6750 + 64] = 0
            require 0 < mem[_6751]
            mem[_6751 + 32] = address(_6726)
            require 1 < mem[_6751]
            mem[_6751 + 64] = address(_6728)
            mem[_6751 + 192] = 0
            mem[_6750 + 64] = 0
            s = 0
            while s < _6732:
                require s < mem[(32 * arg1.length) + 128]
                if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != address(_6726):
                    require s < mem[(32 * arg1.length) + 128]
                    if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != address(_6728):
                        require s < mem[(32 * arg1.length) + 128]
                        _10082 = mem[(32 * s) + (32 * arg1.length) + 160]
                        _10086 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_10086] = 0
                        mem[_10086 + 32] = 0
                        if address(_6726) == address(_10082):
                            _10089 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_10089] = 0
                            mem[_10089 + 32] = 0
                            require s < mem[(32 * arg1.length) + 128]
                            _10096 = mem[(32 * s) + (32 * arg1.length) + 160]
                            _10105 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_10105] = 0
                            mem[_10105 + 32] = 0
                            if address(_10096) == address(_6728):
                                _10114 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_10114] = 0
                                mem[_10114 + 32] = 0
                                if 0 <= mem[_6750 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _13465 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _13475 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _13476 = mem[_10089 + 32]
                                                    _13493 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13493] = 0
                                                    mem[_13493 + 32] = 0
                                                    if address(_13465) == address(_13475):
                                                        _13517 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_13517] = 0
                                                        mem[_13517 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _13553 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _13583 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_13583] = 0
                                                        mem[_13583 + 32] = 0
                                                        if address(_13553) == address(_6728):
                                                            _13615 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_13615] = 0
                                                            mem[_13615 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _13614 = mem[96]
                                                            _13638 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_13638]
                                                            mem[_13638 + 32] = address(_13553)
                                                            require 1 < mem[_13638]
                                                            mem[_13638 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _13614:
                                                                require t < mem[96]
                                                                _16675 = mem[(32 * t) + 128]
                                                                _16676 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _16812 = mem[_13638]
                                                                mem[mem[64] + 68] = mem[_13638]
                                                                idx = 0
                                                                s = _13638 + 32
                                                                u = mem[64] + 100
                                                                while idx < _16812:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_16675))
                                                                staticcall address(_16675).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _16676 + (32 * _16812) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _19843 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _19906 = mem[_19843]
                                                                require mem[_19843] <= test266151307()
                                                                require _19843 + mem[_19843] + 31 < _19843 + return_data.size
                                                                _20047 = mem[_19843 + mem[_19843]]
                                                                require mem[_19843 + mem[_19843]] <= test266151307()
                                                                require _19843 + ceil32(return_data.size) + (32 * mem[_19843 + mem[_19843]]) + 32 <= test266151307() and (32 * mem[_19843 + mem[_19843]]) + 32 >= 0
                                                                mem[64] = _19843 + ceil32(return_data.size) + (32 * mem[_19843 + mem[_19843]]) + 32
                                                                mem[_19843 + ceil32(return_data.size)] = _20047
                                                                require _19906 + (32 * _20047) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _19843 + _19906 + 32
                                                                u = _19843 + ceil32(return_data.size) + 32
                                                                while idx < _20047:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _20047 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _20047:
                                                                    if mem[_19843 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _16647 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16647] = 0
                                                            mem[_16647 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_13517 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _13516 = mem[96]
                                                        _13529 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_13529]
                                                        mem[_13529 + 32] = address(_13465)
                                                        require 1 < mem[_13529]
                                                        mem[_13529 + 64] = address(_13475)
                                                        t = 0
                                                        while t < _13516:
                                                            require t < mem[96]
                                                            _16673 = mem[(32 * t) + 128]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _13476
                                                            mem[mem[64] + 36] = 64
                                                            _16809 = mem[_13529]
                                                            mem[mem[64] + 68] = mem[_13529]
                                                            idx = 0
                                                            s = _13529 + 32
                                                            u = mem[64] + 100
                                                            while idx < _16809:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_16673))
                                                            staticcall address(_16673).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args _13476, 64, mem[mem[64] + 68 len (32 * _16809) + 32]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _19842 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _19905 = mem[_19842]
                                                            require mem[_19842] <= test266151307()
                                                            require _19842 + mem[_19842] + 31 < _19842 + return_data.size
                                                            _20046 = mem[_19842 + mem[_19842]]
                                                            require mem[_19842 + mem[_19842]] <= test266151307()
                                                            require _19842 + ceil32(return_data.size) + (32 * mem[_19842 + mem[_19842]]) + 32 <= test266151307() and (32 * mem[_19842 + mem[_19842]]) + 32 >= 0
                                                            mem[64] = _19842 + ceil32(return_data.size) + (32 * mem[_19842 + mem[_19842]]) + 32
                                                            mem[_19842 + ceil32(return_data.size)] = _20046
                                                            require _19905 + (32 * _20046) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _19842 + _19905 + 32
                                                            u = _19842 + ceil32(return_data.size) + 32
                                                            while idx < _20046:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _20046 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _20046:
                                                                if mem[_19842 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _16645 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16645] = 0
                                                        mem[_16645 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _16712 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _16743 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16743] = 0
                                                        mem[_16743 + 32] = 0
                                                        if address(_16712) == address(_6728):
                                                            _16786 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16786] = 0
                                                            mem[_16786 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _16785 = mem[96]
                                                            _16808 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_16808]
                                                            mem[_16808 + 32] = address(_16712)
                                                            require 1 < mem[_16808]
                                                            mem[_16808 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _16785:
                                                                require t < mem[96]
                                                                _19746 = mem[(32 * t) + 128]
                                                                _19747 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19996 = mem[_16808]
                                                                mem[mem[64] + 68] = mem[_16808]
                                                                idx = 0
                                                                s = _16808 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19996:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19746))
                                                                staticcall address(_19746).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _19747 + (32 * _19996) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22358 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22443 = mem[_22358]
                                                                require mem[_22358] <= test266151307()
                                                                require _22358 + mem[_22358] + 31 < _22358 + return_data.size
                                                                _22624 = mem[_22358 + mem[_22358]]
                                                                require mem[_22358 + mem[_22358]] <= test266151307()
                                                                require _22358 + ceil32(return_data.size) + (32 * mem[_22358 + mem[_22358]]) + 32 <= test266151307() and (32 * mem[_22358 + mem[_22358]]) + 32 >= 0
                                                                mem[64] = _22358 + ceil32(return_data.size) + (32 * mem[_22358 + mem[_22358]]) + 32
                                                                mem[_22358 + ceil32(return_data.size)] = _22624
                                                                require _22443 + (32 * _22624) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22358 + _22443 + 32
                                                                u = _22358 + ceil32(return_data.size) + 32
                                                                while idx < _22624:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22624 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22624:
                                                                    if mem[_22358 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19698 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19698] = 0
                                                            mem[_19698 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_16645 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_6750]]
                                    mem[mem[_6750] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_6750]]
                                    mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_6750]]
                                    mem[mem[_6750] + 96] = address(_6728)
                                    require 3 < mem[mem[_6750]]
                                    mem[mem[_6750] + 128] = 0
                                    require 0 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 32] = 0
                                    require 1 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 64] = 0
                                    require 2 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 96] = 0
                                    mem[_6750 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _13467 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _13477 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _13478 = mem[_10089 + 32]
                                                    _13494 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_13494] = 0
                                                    mem[_13494 + 32] = 0
                                                    if address(_13467) == address(_13477):
                                                        _13519 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_13519] = 0
                                                        mem[_13519 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _13556 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _13584 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_13584] = 0
                                                        mem[_13584 + 32] = 0
                                                        if address(_13556) == address(_6728):
                                                            _13619 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_13619] = 0
                                                            mem[_13619 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _13618 = mem[96]
                                                            _13641 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_13641]
                                                            mem[_13641 + 32] = address(_13556)
                                                            require 1 < mem[_13641]
                                                            mem[_13641 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _13618:
                                                                require t < mem[96]
                                                                _16679 = mem[(32 * t) + 128]
                                                                _16680 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _16817 = mem[_13641]
                                                                mem[mem[64] + 68] = mem[_13641]
                                                                idx = 0
                                                                s = _13641 + 32
                                                                u = mem[64] + 100
                                                                while idx < _16817:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_16679))
                                                                staticcall address(_16679).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _16680 + (32 * _16817) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _19846 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _19909 = mem[_19846]
                                                                require mem[_19846] <= test266151307()
                                                                require _19846 + mem[_19846] + 31 < _19846 + return_data.size
                                                                _20052 = mem[_19846 + mem[_19846]]
                                                                require mem[_19846 + mem[_19846]] <= test266151307()
                                                                require _19846 + ceil32(return_data.size) + (32 * mem[_19846 + mem[_19846]]) + 32 <= test266151307() and (32 * mem[_19846 + mem[_19846]]) + 32 >= 0
                                                                mem[64] = _19846 + ceil32(return_data.size) + (32 * mem[_19846 + mem[_19846]]) + 32
                                                                mem[_19846 + ceil32(return_data.size)] = _20052
                                                                require _19909 + (32 * _20052) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _19846 + _19909 + 32
                                                                u = _19846 + ceil32(return_data.size) + 32
                                                                while idx < _20052:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _20052 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _20052:
                                                                    if mem[_19846 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _16651 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16651] = 0
                                                            mem[_16651 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_13519 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _13518 = mem[96]
                                                        _13530 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_13530]
                                                        mem[_13530 + 32] = address(_13467)
                                                        require 1 < mem[_13530]
                                                        mem[_13530 + 64] = address(_13477)
                                                        t = 0
                                                        while t < _13518:
                                                            require t < mem[96]
                                                            _16677 = mem[(32 * t) + 128]
                                                            _16678 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _13478
                                                            mem[mem[64] + 36] = 64
                                                            _16814 = mem[_13530]
                                                            mem[mem[64] + 68] = mem[_13530]
                                                            idx = 0
                                                            s = _13530 + 32
                                                            u = mem[64] + 100
                                                            while idx < _16814:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_16677))
                                                            staticcall address(_16677).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _16678 + (32 * _16814) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _19845 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _19908 = mem[_19845]
                                                            require mem[_19845] <= test266151307()
                                                            require _19845 + mem[_19845] + 31 < _19845 + return_data.size
                                                            _20051 = mem[_19845 + mem[_19845]]
                                                            require mem[_19845 + mem[_19845]] <= test266151307()
                                                            require _19845 + ceil32(return_data.size) + (32 * mem[_19845 + mem[_19845]]) + 32 <= test266151307() and (32 * mem[_19845 + mem[_19845]]) + 32 >= 0
                                                            mem[64] = _19845 + ceil32(return_data.size) + (32 * mem[_19845 + mem[_19845]]) + 32
                                                            mem[_19845 + ceil32(return_data.size)] = _20051
                                                            require _19908 + (32 * _20051) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _19845 + _19908 + 32
                                                            u = _19845 + ceil32(return_data.size) + 32
                                                            while idx < _20051:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _20051 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _20051:
                                                                if mem[_19845 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _16649 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16649] = 0
                                                        mem[_16649 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _16716 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _16747 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16747] = 0
                                                        mem[_16747 + 32] = 0
                                                        if address(_16716) == address(_6728):
                                                            _16791 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_16791] = 0
                                                            mem[_16791 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _16790 = mem[96]
                                                            _16813 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_16813]
                                                            mem[_16813 + 32] = address(_16716)
                                                            require 1 < mem[_16813]
                                                            mem[_16813 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _16790:
                                                                require t < mem[96]
                                                                _19748 = mem[(32 * t) + 128]
                                                                _19749 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19999 = mem[_16813]
                                                                mem[mem[64] + 68] = mem[_16813]
                                                                idx = 0
                                                                s = _16813 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19999:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19748))
                                                                staticcall address(_19748).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _19749 + (32 * _19999) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22361 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22446 = mem[_22361]
                                                                require mem[_22361] <= test266151307()
                                                                require _22361 + mem[_22361] + 31 < _22361 + return_data.size
                                                                _22625 = mem[_22361 + mem[_22361]]
                                                                require mem[_22361 + mem[_22361]] <= test266151307()
                                                                require _22361 + ceil32(return_data.size) + (32 * mem[_22361 + mem[_22361]]) + 32 <= test266151307() and (32 * mem[_22361 + mem[_22361]]) + 32 >= 0
                                                                mem[64] = _22361 + ceil32(return_data.size) + (32 * mem[_22361 + mem[_22361]]) + 32
                                                                mem[_22361 + ceil32(return_data.size)] = _22625
                                                                require _22446 + (32 * _22625) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22361 + _22446 + 32
                                                                u = _22361 + ceil32(return_data.size) + 32
                                                                while idx < _22625:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22625 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22625:
                                                                    if mem[_22361 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19702 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19702] = 0
                                                            mem[_19702 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_16649 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                _10113 = mem[96]
                                _10117 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_10117]
                                mem[_10117 + 32] = address(_10096)
                                require 1 < mem[_10117]
                                mem[_10117 + 64] = address(_6728)
                                idx = 0
                                while idx < _10113:
                                    require idx < mem[96]
                                    _13394 = mem[(32 * idx) + 128]
                                    _13395 = mem[64]
                                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = 64
                                    _13447 = mem[_10117]
                                    mem[mem[64] + 68] = mem[_10117]
                                    s = 0
                                    t = _10117 + 32
                                    u = mem[64] + 100
                                    while s < _13447:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    require ext_code.size(address(_13394))
                                    staticcall address(_13394).mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _13395 + (32 * _13447) + -mem[64] + 96]
                                    if not ext_call.success:
                                        idx = idx + 1
                                        continue 
                                    _16730 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _16767 = mem[_16730]
                                    require mem[_16730] <= test266151307()
                                    require _16730 + mem[_16730] + 31 < _16730 + return_data.size
                                    _16835 = mem[_16730 + mem[_16730]]
                                    require mem[_16730 + mem[_16730]] <= test266151307()
                                    require _16730 + ceil32(return_data.size) + (32 * mem[_16730 + mem[_16730]]) + 32 <= test266151307() and (32 * mem[_16730 + mem[_16730]]) + 32 >= 0
                                    mem[64] = _16730 + ceil32(return_data.size) + (32 * mem[_16730 + mem[_16730]]) + 32
                                    mem[_16730 + ceil32(return_data.size)] = _16835
                                    require _16767 + (32 * _16835) + 32 <= return_data.size
                                    s = 0
                                    t = _16730 + _16767 + 32
                                    u = _16730 + ceil32(return_data.size) + 32
                                    while s < _16835:
                                        require mem[t] == mem[t]
                                        mem[u] = mem[t]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    if _16835 < 2:
                                        idx = idx + 1
                                        continue 
                                    if 1 < _16835:
                                        if mem[_16730 + ceil32(return_data.size) + 64] <= 0:
                                            idx = idx + 1
                                            continue 
                                        if idx < mem[96]:
                                            idx = idx + 1
                                            continue 
                                    revert
                                _13386 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_13386] = 0
                                mem[_13386 + 32] = 0
                                if 0 <= mem[_6750 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _16861 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _16891 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _16892 = mem[_10089 + 32]
                                                    _16928 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16928] = 0
                                                    mem[_16928 + 32] = 0
                                                    if address(_16861) == address(_16891):
                                                        _16978 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16978] = 0
                                                        mem[_16978 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _17070 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _17125 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17125] = 0
                                                        mem[_17125 + 32] = 0
                                                        if address(_17070) == address(_6728):
                                                            _17182 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17182] = 0
                                                            mem[_17182 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _17181 = mem[96]
                                                            _17224 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_17224]
                                                            mem[_17224 + 32] = address(_17070)
                                                            require 1 < mem[_17224]
                                                            mem[_17224 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _17181:
                                                                require t < mem[96]
                                                                _19739 = mem[(32 * t) + 128]
                                                                _19740 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19987 = mem[_17224]
                                                                mem[mem[64] + 68] = mem[_17224]
                                                                idx = 0
                                                                s = _17224 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19987:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19739))
                                                                staticcall address(_19739).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _19740 + (32 * _19987) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22354 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22439 = mem[_22354]
                                                                require mem[_22354] <= test266151307()
                                                                require _22354 + mem[_22354] + 31 < _22354 + return_data.size
                                                                _22618 = mem[_22354 + mem[_22354]]
                                                                require mem[_22354 + mem[_22354]] <= test266151307()
                                                                require _22354 + ceil32(return_data.size) + (32 * mem[_22354 + mem[_22354]]) + 32 <= test266151307() and (32 * mem[_22354 + mem[_22354]]) + 32 >= 0
                                                                mem[64] = _22354 + ceil32(return_data.size) + (32 * mem[_22354 + mem[_22354]]) + 32
                                                                mem[_22354 + ceil32(return_data.size)] = _22618
                                                                require _22439 + (32 * _22618) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22354 + _22439 + 32
                                                                u = _22354 + ceil32(return_data.size) + 32
                                                                while idx < _22618:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22618 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22618:
                                                                    if mem[_22354 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19692 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19692] = 0
                                                            mem[_19692 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_16978 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _16977 = mem[96]
                                                        _17009 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_17009]
                                                        mem[_17009 + 32] = address(_16861)
                                                        require 1 < mem[_17009]
                                                        mem[_17009 + 64] = address(_16891)
                                                        t = 0
                                                        while t < _16977:
                                                            require t < mem[96]
                                                            _19737 = mem[(32 * t) + 128]
                                                            _19738 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _16892
                                                            mem[mem[64] + 36] = 64
                                                            _19984 = mem[_17009]
                                                            mem[mem[64] + 68] = mem[_17009]
                                                            idx = 0
                                                            s = _17009 + 32
                                                            u = mem[64] + 100
                                                            while idx < _19984:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_19737))
                                                            staticcall address(_19737).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _19738 + (32 * _19984) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _22353 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _22438 = mem[_22353]
                                                            require mem[_22353] <= test266151307()
                                                            require _22353 + mem[_22353] + 31 < _22353 + return_data.size
                                                            _22617 = mem[_22353 + mem[_22353]]
                                                            require mem[_22353 + mem[_22353]] <= test266151307()
                                                            require _22353 + ceil32(return_data.size) + (32 * mem[_22353 + mem[_22353]]) + 32 <= test266151307() and (32 * mem[_22353 + mem[_22353]]) + 32 >= 0
                                                            mem[64] = _22353 + ceil32(return_data.size) + (32 * mem[_22353 + mem[_22353]]) + 32
                                                            mem[_22353 + ceil32(return_data.size)] = _22617
                                                            require _22438 + (32 * _22617) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _22353 + _22438 + 32
                                                            u = _22353 + ceil32(return_data.size) + 32
                                                            while idx < _22617:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _22617 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _22617:
                                                                if mem[_22353 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _19690 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19690] = 0
                                                        mem[_19690 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _19811 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _19868 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19868] = 0
                                                        mem[_19868 + 32] = 0
                                                        if address(_19811) == address(_6728):
                                                            _19941 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19941] = 0
                                                            mem[_19941 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _19940 = mem[96]
                                                            _19983 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_19983]
                                                            mem[_19983 + 32] = address(_19811)
                                                            require 1 < mem[_19983]
                                                            mem[_19983 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _19940:
                                                                require t < mem[96]
                                                                _22235 = mem[(32 * t) + 128]
                                                                _22236 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22553 = mem[_19983]
                                                                mem[mem[64] + 68] = mem[_19983]
                                                                idx = 0
                                                                s = _19983 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22553:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22235))
                                                                staticcall address(_22235).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22236 + (32 * _22553) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23933 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24015 = mem[_23933]
                                                                require mem[_23933] <= test266151307()
                                                                require _23933 + mem[_23933] + 31 < _23933 + return_data.size
                                                                _24153 = mem[_23933 + mem[_23933]]
                                                                require mem[_23933 + mem[_23933]] <= test266151307()
                                                                require _23933 + ceil32(return_data.size) + (32 * mem[_23933 + mem[_23933]]) + 32 <= test266151307() and (32 * mem[_23933 + mem[_23933]]) + 32 >= 0
                                                                mem[64] = _23933 + ceil32(return_data.size) + (32 * mem[_23933 + mem[_23933]]) + 32
                                                                mem[_23933 + ceil32(return_data.size)] = _24153
                                                                require _24015 + (32 * _24153) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23933 + _24015 + 32
                                                                u = _23933 + ceil32(return_data.size) + 32
                                                                while idx < _24153:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24153 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24153:
                                                                    if mem[_23933 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22186 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22186] = 0
                                                            mem[_22186 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_19690 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_6750]]
                                    mem[mem[_6750] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_6750]]
                                    mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_6750]]
                                    mem[mem[_6750] + 96] = address(_6728)
                                    require 3 < mem[mem[_6750]]
                                    mem[mem[_6750] + 128] = 0
                                    require 0 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                    require 1 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 64] = 0
                                    require 2 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 96] = 0
                                    mem[_6750 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _16863 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _16893 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _16894 = mem[_10089 + 32]
                                                    _16929 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16929] = 0
                                                    mem[_16929 + 32] = 0
                                                    if address(_16863) == address(_16893):
                                                        _16980 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16980] = 0
                                                        mem[_16980 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _17073 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _17126 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17126] = 0
                                                        mem[_17126 + 32] = 0
                                                        if address(_17073) == address(_6728):
                                                            _17186 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17186] = 0
                                                            mem[_17186 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _17185 = mem[96]
                                                            _17227 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_17227]
                                                            mem[_17227 + 32] = address(_17073)
                                                            require 1 < mem[_17227]
                                                            mem[_17227 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _17185:
                                                                require t < mem[96]
                                                                _19743 = mem[(32 * t) + 128]
                                                                _19744 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19992 = mem[_17227]
                                                                mem[mem[64] + 68] = mem[_17227]
                                                                idx = 0
                                                                s = _17227 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19992:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19743))
                                                                staticcall address(_19743).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _19744 + (32 * _19992) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22357 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22442 = mem[_22357]
                                                                require mem[_22357] <= test266151307()
                                                                require _22357 + mem[_22357] + 31 < _22357 + return_data.size
                                                                _22623 = mem[_22357 + mem[_22357]]
                                                                require mem[_22357 + mem[_22357]] <= test266151307()
                                                                require _22357 + ceil32(return_data.size) + (32 * mem[_22357 + mem[_22357]]) + 32 <= test266151307() and (32 * mem[_22357 + mem[_22357]]) + 32 >= 0
                                                                mem[64] = _22357 + ceil32(return_data.size) + (32 * mem[_22357 + mem[_22357]]) + 32
                                                                mem[_22357 + ceil32(return_data.size)] = _22623
                                                                require _22442 + (32 * _22623) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22357 + _22442 + 32
                                                                u = _22357 + ceil32(return_data.size) + 32
                                                                while idx < _22623:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22623 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22623:
                                                                    if mem[_22357 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19696 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19696] = 0
                                                            mem[_19696 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_16980 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _16979 = mem[96]
                                                        _17010 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_17010]
                                                        mem[_17010 + 32] = address(_16863)
                                                        require 1 < mem[_17010]
                                                        mem[_17010 + 64] = address(_16893)
                                                        t = 0
                                                        while t < _16979:
                                                            require t < mem[96]
                                                            _19741 = mem[(32 * t) + 128]
                                                            _19742 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _16894
                                                            mem[mem[64] + 36] = 64
                                                            _19989 = mem[_17010]
                                                            mem[mem[64] + 68] = mem[_17010]
                                                            idx = 0
                                                            s = _17010 + 32
                                                            u = mem[64] + 100
                                                            while idx < _19989:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_19741))
                                                            staticcall address(_19741).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _19742 + (32 * _19989) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _22356 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _22441 = mem[_22356]
                                                            require mem[_22356] <= test266151307()
                                                            require _22356 + mem[_22356] + 31 < _22356 + return_data.size
                                                            _22622 = mem[_22356 + mem[_22356]]
                                                            require mem[_22356 + mem[_22356]] <= test266151307()
                                                            require _22356 + ceil32(return_data.size) + (32 * mem[_22356 + mem[_22356]]) + 32 <= test266151307() and (32 * mem[_22356 + mem[_22356]]) + 32 >= 0
                                                            mem[64] = _22356 + ceil32(return_data.size) + (32 * mem[_22356 + mem[_22356]]) + 32
                                                            mem[_22356 + ceil32(return_data.size)] = _22622
                                                            require _22441 + (32 * _22622) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _22356 + _22441 + 32
                                                            u = _22356 + ceil32(return_data.size) + 32
                                                            while idx < _22622:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _22622 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _22622:
                                                                if mem[_22356 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _19694 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19694] = 0
                                                        mem[_19694 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _19815 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _19872 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19872] = 0
                                                        mem[_19872 + 32] = 0
                                                        if address(_19815) == address(_6728):
                                                            _19946 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19946] = 0
                                                            mem[_19946 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _19945 = mem[96]
                                                            _19988 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_19988]
                                                            mem[_19988 + 32] = address(_19815)
                                                            require 1 < mem[_19988]
                                                            mem[_19988 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _19945:
                                                                require t < mem[96]
                                                                _22237 = mem[(32 * t) + 128]
                                                                _22238 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22556 = mem[_19988]
                                                                mem[mem[64] + 68] = mem[_19988]
                                                                idx = 0
                                                                s = _19988 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22556:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22237))
                                                                staticcall address(_22237).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22238 + (32 * _22556) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23936 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24018 = mem[_23936]
                                                                require mem[_23936] <= test266151307()
                                                                require _23936 + mem[_23936] + 31 < _23936 + return_data.size
                                                                _24154 = mem[_23936 + mem[_23936]]
                                                                require mem[_23936 + mem[_23936]] <= test266151307()
                                                                require _23936 + ceil32(return_data.size) + (32 * mem[_23936 + mem[_23936]]) + 32 <= test266151307() and (32 * mem[_23936 + mem[_23936]]) + 32 >= 0
                                                                mem[64] = _23936 + ceil32(return_data.size) + (32 * mem[_23936 + mem[_23936]]) + 32
                                                                mem[_23936 + ceil32(return_data.size)] = _24154
                                                                require _24018 + (32 * _24154) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23936 + _24018 + 32
                                                                u = _23936 + ceil32(return_data.size) + 32
                                                                while idx < _24154:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24154 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24154:
                                                                    if mem[_23936 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22190 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22190] = 0
                                                            mem[_22190 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_10089 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_19694 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                        else:
                            _10088 = mem[96]
                            _10091 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_10091]
                            mem[_10091 + 32] = address(_6726)
                            require 1 < mem[_10091]
                            mem[_10091 + 64] = address(_10082)
                            idx = 0
                            while idx < _10088:
                                require idx < mem[96]
                                _13392 = mem[(32 * idx) + 128]
                                _13393 = mem[64]
                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _6730
                                mem[mem[64] + 36] = 64
                                _13442 = mem[_10091]
                                mem[mem[64] + 68] = mem[_10091]
                                s = 0
                                t = _10091 + 32
                                u = mem[64] + 100
                                while s < _13442:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                require ext_code.size(address(_13392))
                                staticcall address(_13392).mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _13393 + (32 * _13442) + -mem[64] + 96]
                                if not ext_call.success:
                                    idx = idx + 1
                                    continue 
                                _16727 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _16764 = mem[_16727]
                                require mem[_16727] <= test266151307()
                                require _16727 + mem[_16727] + 31 < _16727 + return_data.size
                                _16832 = mem[_16727 + mem[_16727]]
                                require mem[_16727 + mem[_16727]] <= test266151307()
                                require _16727 + ceil32(return_data.size) + (32 * mem[_16727 + mem[_16727]]) + 32 <= test266151307() and (32 * mem[_16727 + mem[_16727]]) + 32 >= 0
                                mem[64] = _16727 + ceil32(return_data.size) + (32 * mem[_16727 + mem[_16727]]) + 32
                                mem[_16727 + ceil32(return_data.size)] = _16832
                                require _16764 + (32 * _16832) + 32 <= return_data.size
                                s = 0
                                t = _16727 + _16764 + 32
                                u = _16727 + ceil32(return_data.size) + 32
                                while s < _16832:
                                    require mem[t] == mem[t]
                                    mem[u] = mem[t]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                if _16832 < 2:
                                    idx = idx + 1
                                    continue 
                                if 1 < _16832:
                                    if mem[_16727 + ceil32(return_data.size) + 64] <= 0:
                                        idx = idx + 1
                                        continue 
                                    if idx < mem[96]:
                                        idx = idx + 1
                                        continue 
                                revert
                            _13384 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_13384] = 0
                            mem[_13384 + 32] = 0
                            require s < mem[(32 * arg1.length) + 128]
                            _13409 = mem[(32 * s) + (32 * arg1.length) + 160]
                            _13420 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_13420] = 0
                            mem[_13420 + 32] = 0
                            if address(_13409) == address(_6728):
                                _13434 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_13434] = 0
                                mem[_13434 + 32] = 0
                                if 0 <= mem[_6750 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _16857 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _16887 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _16888 = mem[_13384 + 32]
                                                    _16925 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16925] = 0
                                                    mem[_16925 + 32] = 0
                                                    if address(_16857) == address(_16887):
                                                        _16974 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16974] = 0
                                                        mem[_16974 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _17064 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _17123 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17123] = 0
                                                        mem[_17123 + 32] = 0
                                                        if address(_17064) == address(_6728):
                                                            _17173 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17173] = 0
                                                            mem[_17173 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _17172 = mem[96]
                                                            _17217 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_17217]
                                                            mem[_17217 + 32] = address(_17064)
                                                            require 1 < mem[_17217]
                                                            mem[_17217 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _17172:
                                                                require t < mem[96]
                                                                _19730 = mem[(32 * t) + 128]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19976 = mem[_17217]
                                                                mem[mem[64] + 68] = mem[_17217]
                                                                idx = 0
                                                                s = _17217 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19976:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19730))
                                                                staticcall address(_19730).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args 0, 64, mem[mem[64] + 68 len (32 * _19976) + 32]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22348 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22433 = mem[_22348]
                                                                require mem[_22348] <= test266151307()
                                                                require _22348 + mem[_22348] + 31 < _22348 + return_data.size
                                                                _22608 = mem[_22348 + mem[_22348]]
                                                                require mem[_22348 + mem[_22348]] <= test266151307()
                                                                require _22348 + ceil32(return_data.size) + (32 * mem[_22348 + mem[_22348]]) + 32 <= test266151307() and (32 * mem[_22348 + mem[_22348]]) + 32 >= 0
                                                                mem[64] = _22348 + ceil32(return_data.size) + (32 * mem[_22348 + mem[_22348]]) + 32
                                                                mem[_22348 + ceil32(return_data.size)] = _22608
                                                                require _22433 + (32 * _22608) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22348 + _22433 + 32
                                                                u = _22348 + ceil32(return_data.size) + 32
                                                                while idx < _22608:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22608 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22608:
                                                                    if mem[_22348 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19684 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19684] = 0
                                                            mem[_19684 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_16974 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _16973 = mem[96]
                                                        _17007 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_17007]
                                                        mem[_17007 + 32] = address(_16857)
                                                        require 1 < mem[_17007]
                                                        mem[_17007 + 64] = address(_16887)
                                                        t = 0
                                                        while t < _16973:
                                                            require t < mem[96]
                                                            _19728 = mem[(32 * t) + 128]
                                                            _19729 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _16888
                                                            mem[mem[64] + 36] = 64
                                                            _19973 = mem[_17007]
                                                            mem[mem[64] + 68] = mem[_17007]
                                                            idx = 0
                                                            s = _17007 + 32
                                                            u = mem[64] + 100
                                                            while idx < _19973:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_19728))
                                                            staticcall address(_19728).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _19729 + (32 * _19973) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _22347 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _22432 = mem[_22347]
                                                            require mem[_22347] <= test266151307()
                                                            require _22347 + mem[_22347] + 31 < _22347 + return_data.size
                                                            _22607 = mem[_22347 + mem[_22347]]
                                                            require mem[_22347 + mem[_22347]] <= test266151307()
                                                            require _22347 + ceil32(return_data.size) + (32 * mem[_22347 + mem[_22347]]) + 32 <= test266151307() and (32 * mem[_22347 + mem[_22347]]) + 32 >= 0
                                                            mem[64] = _22347 + ceil32(return_data.size) + (32 * mem[_22347 + mem[_22347]]) + 32
                                                            mem[_22347 + ceil32(return_data.size)] = _22607
                                                            require _22432 + (32 * _22607) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _22347 + _22432 + 32
                                                            u = _22347 + ceil32(return_data.size) + 32
                                                            while idx < _22607:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _22607 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _22607:
                                                                if mem[_22347 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _19682 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19682] = 0
                                                        mem[_19682 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _19803 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _19859 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19859] = 0
                                                        mem[_19859 + 32] = 0
                                                        if address(_19803) == address(_6728):
                                                            _19930 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19930] = 0
                                                            mem[_19930 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _19929 = mem[96]
                                                            _19972 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_19972]
                                                            mem[_19972 + 32] = address(_19803)
                                                            require 1 < mem[_19972]
                                                            mem[_19972 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _19929:
                                                                require t < mem[96]
                                                                _22231 = mem[(32 * t) + 128]
                                                                _22232 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22547 = mem[_19972]
                                                                mem[mem[64] + 68] = mem[_19972]
                                                                idx = 0
                                                                s = _19972 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22547:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22231))
                                                                staticcall address(_22231).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22232 + (32 * _22547) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23927 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24009 = mem[_23927]
                                                                require mem[_23927] <= test266151307()
                                                                require _23927 + mem[_23927] + 31 < _23927 + return_data.size
                                                                _24151 = mem[_23927 + mem[_23927]]
                                                                require mem[_23927 + mem[_23927]] <= test266151307()
                                                                require _23927 + ceil32(return_data.size) + (32 * mem[_23927 + mem[_23927]]) + 32 <= test266151307() and (32 * mem[_23927 + mem[_23927]]) + 32 >= 0
                                                                mem[64] = _23927 + ceil32(return_data.size) + (32 * mem[_23927 + mem[_23927]]) + 32
                                                                mem[_23927 + ceil32(return_data.size)] = _24151
                                                                require _24009 + (32 * _24151) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23927 + _24009 + 32
                                                                u = _23927 + ceil32(return_data.size) + 32
                                                                while idx < _24151:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24151 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24151:
                                                                    if mem[_23927 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22178 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22178] = 0
                                                            mem[_22178 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_19682 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_6750]]
                                    mem[mem[_6750] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_6750]]
                                    mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_6750]]
                                    mem[mem[_6750] + 96] = address(_6728)
                                    require 3 < mem[mem[_6750]]
                                    mem[mem[_6750] + 128] = 0
                                    require 0 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 32] = 0
                                    require 1 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 64] = 0
                                    require 2 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 96] = 0
                                    mem[_6750 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _16859 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _16889 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _16890 = mem[_13384 + 32]
                                                    _16926 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16926] = 0
                                                    mem[_16926 + 32] = 0
                                                    if address(_16859) == address(_16889):
                                                        _16976 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16976] = 0
                                                        mem[_16976 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _17067 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _17124 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17124] = 0
                                                        mem[_17124 + 32] = 0
                                                        if address(_17067) == address(_6728):
                                                            _17177 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17177] = 0
                                                            mem[_17177 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _17176 = mem[96]
                                                            _17220 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_17220]
                                                            mem[_17220 + 32] = address(_17067)
                                                            require 1 < mem[_17220]
                                                            mem[_17220 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _17176:
                                                                require t < mem[96]
                                                                _19734 = mem[(32 * t) + 128]
                                                                _19735 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19981 = mem[_17220]
                                                                mem[mem[64] + 68] = mem[_17220]
                                                                idx = 0
                                                                s = _17220 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19981:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19734))
                                                                staticcall address(_19734).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _19735 + (32 * _19981) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22351 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22436 = mem[_22351]
                                                                require mem[_22351] <= test266151307()
                                                                require _22351 + mem[_22351] + 31 < _22351 + return_data.size
                                                                _22613 = mem[_22351 + mem[_22351]]
                                                                require mem[_22351 + mem[_22351]] <= test266151307()
                                                                require _22351 + ceil32(return_data.size) + (32 * mem[_22351 + mem[_22351]]) + 32 <= test266151307() and (32 * mem[_22351 + mem[_22351]]) + 32 >= 0
                                                                mem[64] = _22351 + ceil32(return_data.size) + (32 * mem[_22351 + mem[_22351]]) + 32
                                                                mem[_22351 + ceil32(return_data.size)] = _22613
                                                                require _22436 + (32 * _22613) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22351 + _22436 + 32
                                                                u = _22351 + ceil32(return_data.size) + 32
                                                                while idx < _22613:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22613 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22613:
                                                                    if mem[_22351 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19688 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19688] = 0
                                                            mem[_19688 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_16976 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _16975 = mem[96]
                                                        _17008 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_17008]
                                                        mem[_17008 + 32] = address(_16859)
                                                        require 1 < mem[_17008]
                                                        mem[_17008 + 64] = address(_16889)
                                                        t = 0
                                                        while t < _16975:
                                                            require t < mem[96]
                                                            _19732 = mem[(32 * t) + 128]
                                                            _19733 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _16890
                                                            mem[mem[64] + 36] = 64
                                                            _19978 = mem[_17008]
                                                            mem[mem[64] + 68] = mem[_17008]
                                                            idx = 0
                                                            s = _17008 + 32
                                                            u = mem[64] + 100
                                                            while idx < _19978:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_19732))
                                                            staticcall address(_19732).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _19733 + (32 * _19978) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _22350 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _22435 = mem[_22350]
                                                            require mem[_22350] <= test266151307()
                                                            require _22350 + mem[_22350] + 31 < _22350 + return_data.size
                                                            _22612 = mem[_22350 + mem[_22350]]
                                                            require mem[_22350 + mem[_22350]] <= test266151307()
                                                            require _22350 + ceil32(return_data.size) + (32 * mem[_22350 + mem[_22350]]) + 32 <= test266151307() and (32 * mem[_22350 + mem[_22350]]) + 32 >= 0
                                                            mem[64] = _22350 + ceil32(return_data.size) + (32 * mem[_22350 + mem[_22350]]) + 32
                                                            mem[_22350 + ceil32(return_data.size)] = _22612
                                                            require _22435 + (32 * _22612) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _22350 + _22435 + 32
                                                            u = _22350 + ceil32(return_data.size) + 32
                                                            while idx < _22612:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _22612 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _22612:
                                                                if mem[_22350 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _19686 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19686] = 0
                                                        mem[_19686 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _19807 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _19863 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19863] = 0
                                                        mem[_19863 + 32] = 0
                                                        if address(_19807) == address(_6728):
                                                            _19935 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19935] = 0
                                                            mem[_19935 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _19934 = mem[96]
                                                            _19977 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_19977]
                                                            mem[_19977 + 32] = address(_19807)
                                                            require 1 < mem[_19977]
                                                            mem[_19977 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _19934:
                                                                require t < mem[96]
                                                                _22233 = mem[(32 * t) + 128]
                                                                _22234 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22550 = mem[_19977]
                                                                mem[mem[64] + 68] = mem[_19977]
                                                                idx = 0
                                                                s = _19977 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22550:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22233))
                                                                staticcall address(_22233).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22234 + (32 * _22550) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23930 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24012 = mem[_23930]
                                                                require mem[_23930] <= test266151307()
                                                                require _23930 + mem[_23930] + 31 < _23930 + return_data.size
                                                                _24152 = mem[_23930 + mem[_23930]]
                                                                require mem[_23930 + mem[_23930]] <= test266151307()
                                                                require _23930 + ceil32(return_data.size) + (32 * mem[_23930 + mem[_23930]]) + 32 <= test266151307() and (32 * mem[_23930 + mem[_23930]]) + 32 >= 0
                                                                mem[64] = _23930 + ceil32(return_data.size) + (32 * mem[_23930 + mem[_23930]]) + 32
                                                                mem[_23930 + ceil32(return_data.size)] = _24152
                                                                require _24012 + (32 * _24152) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23930 + _24012 + 32
                                                                u = _23930 + ceil32(return_data.size) + 32
                                                                while idx < _24152:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24152 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24152:
                                                                    if mem[_23930 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22182 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22182] = 0
                                                            mem[_22182 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_19686 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                _13433 = mem[96]
                                _13441 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_13441]
                                mem[_13441 + 32] = address(_13409)
                                require 1 < mem[_13441]
                                mem[_13441 + 64] = address(_6728)
                                idx = 0
                                while idx < _13433:
                                    require idx < mem[96]
                                    _16663 = mem[(32 * idx) + 128]
                                    _16664 = mem[64]
                                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = 64
                                    _16807 = mem[_13441]
                                    mem[mem[64] + 68] = mem[_13441]
                                    s = 0
                                    t = _13441 + 32
                                    u = mem[64] + 100
                                    while s < _16807:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    require ext_code.size(address(_16663))
                                    staticcall address(_16663).mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _16664 + (32 * _16807) + -mem[64] + 96]
                                    if not ext_call.success:
                                        idx = idx + 1
                                        continue 
                                    _19834 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _19897 = mem[_19834]
                                    require mem[_19834] <= test266151307()
                                    require _19834 + mem[_19834] + 31 < _19834 + return_data.size
                                    _20022 = mem[_19834 + mem[_19834]]
                                    require mem[_19834 + mem[_19834]] <= test266151307()
                                    require _19834 + ceil32(return_data.size) + (32 * mem[_19834 + mem[_19834]]) + 32 <= test266151307() and (32 * mem[_19834 + mem[_19834]]) + 32 >= 0
                                    mem[64] = _19834 + ceil32(return_data.size) + (32 * mem[_19834 + mem[_19834]]) + 32
                                    mem[_19834 + ceil32(return_data.size)] = _20022
                                    require _19897 + (32 * _20022) + 32 <= return_data.size
                                    s = 0
                                    t = _19834 + _19897 + 32
                                    u = _19834 + ceil32(return_data.size) + 32
                                    while s < _20022:
                                        require mem[t] == mem[t]
                                        mem[u] = mem[t]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    if _20022 < 2:
                                        idx = idx + 1
                                        continue 
                                    if 1 < _20022:
                                        if mem[_19834 + ceil32(return_data.size) + 64] <= 0:
                                            idx = idx + 1
                                            continue 
                                        if idx < mem[96]:
                                            idx = idx + 1
                                            continue 
                                    revert
                                _16637 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_16637] = 0
                                mem[_16637 + 32] = 0
                                if 0 <= mem[_6750 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _20075 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _20129 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _20130 = mem[_13384 + 32]
                                                    _20194 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_20194] = 0
                                                    mem[_20194 + 32] = 0
                                                    if address(_20075) == address(_20129):
                                                        _20263 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20263] = 0
                                                        mem[_20263 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _20406 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _20488 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20488] = 0
                                                        mem[_20488 + 32] = 0
                                                        if address(_20406) == address(_6728):
                                                            _20557 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20557] = 0
                                                            mem[_20557 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _20556 = mem[96]
                                                            _20605 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_20605]
                                                            mem[_20605 + 32] = address(_20406)
                                                            require 1 < mem[_20605]
                                                            mem[_20605 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _20556:
                                                                require t < mem[96]
                                                                _22224 = mem[(32 * t) + 128]
                                                                _22225 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22538 = mem[_20605]
                                                                mem[mem[64] + 68] = mem[_20605]
                                                                idx = 0
                                                                s = _20605 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22538:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22224))
                                                                staticcall address(_22224).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22225 + (32 * _22538) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23923 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24005 = mem[_23923]
                                                                require mem[_23923] <= test266151307()
                                                                require _23923 + mem[_23923] + 31 < _23923 + return_data.size
                                                                _24145 = mem[_23923 + mem[_23923]]
                                                                require mem[_23923 + mem[_23923]] <= test266151307()
                                                                require _23923 + ceil32(return_data.size) + (32 * mem[_23923 + mem[_23923]]) + 32 <= test266151307() and (32 * mem[_23923 + mem[_23923]]) + 32 >= 0
                                                                mem[64] = _23923 + ceil32(return_data.size) + (32 * mem[_23923 + mem[_23923]]) + 32
                                                                mem[_23923 + ceil32(return_data.size)] = _24145
                                                                require _24005 + (32 * _24145) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23923 + _24005 + 32
                                                                u = _23923 + ceil32(return_data.size) + 32
                                                                while idx < _24145:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24145 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24145:
                                                                    if mem[_23923 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22172 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22172] = 0
                                                            mem[_22172 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_20263 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _20262 = mem[96]
                                                        _20309 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_20309]
                                                        mem[_20309 + 32] = address(_20075)
                                                        require 1 < mem[_20309]
                                                        mem[_20309 + 64] = address(_20129)
                                                        t = 0
                                                        while t < _20262:
                                                            require t < mem[96]
                                                            _22222 = mem[(32 * t) + 128]
                                                            _22223 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _20130
                                                            mem[mem[64] + 36] = 64
                                                            _22535 = mem[_20309]
                                                            mem[mem[64] + 68] = mem[_20309]
                                                            idx = 0
                                                            s = _20309 + 32
                                                            u = mem[64] + 100
                                                            while idx < _22535:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_22222))
                                                            staticcall address(_22222).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _22223 + (32 * _22535) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _23922 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _24004 = mem[_23922]
                                                            require mem[_23922] <= test266151307()
                                                            require _23922 + mem[_23922] + 31 < _23922 + return_data.size
                                                            _24144 = mem[_23922 + mem[_23922]]
                                                            require mem[_23922 + mem[_23922]] <= test266151307()
                                                            require _23922 + ceil32(return_data.size) + (32 * mem[_23922 + mem[_23922]]) + 32 <= test266151307() and (32 * mem[_23922 + mem[_23922]]) + 32 >= 0
                                                            mem[64] = _23922 + ceil32(return_data.size) + (32 * mem[_23922 + mem[_23922]]) + 32
                                                            mem[_23922 + ceil32(return_data.size)] = _24144
                                                            require _24004 + (32 * _24144) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _23922 + _24004 + 32
                                                            u = _23922 + ceil32(return_data.size) + 32
                                                            while idx < _24144:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24144 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24144:
                                                                if mem[_23922 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _22170 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22170] = 0
                                                        mem[_22170 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22312 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _22388 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22388] = 0
                                                        mem[_22388 + 32] = 0
                                                        if address(_22312) == address(_6728):
                                                            _22480 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22480] = 0
                                                            mem[_22480 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _22479 = mem[96]
                                                            _22534 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_22534]
                                                            mem[_22534 + 32] = address(_22312)
                                                            require 1 < mem[_22534]
                                                            mem[_22534 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _22479:
                                                                require t < mem[96]
                                                                _23830 = mem[(32 * t) + 128]
                                                                _23831 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24095 = mem[_22534]
                                                                mem[mem[64] + 68] = mem[_22534]
                                                                idx = 0
                                                                s = _22534 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24095:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23830))
                                                                staticcall address(_23830).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _23831 + (32 * _24095) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24661 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24715 = mem[_24661]
                                                                require mem[_24661] <= test266151307()
                                                                require _24661 + mem[_24661] + 31 < _24661 + return_data.size
                                                                _24787 = mem[_24661 + mem[_24661]]
                                                                require mem[_24661 + mem[_24661]] <= test266151307()
                                                                require _24661 + ceil32(return_data.size) + (32 * mem[_24661 + mem[_24661]]) + 32 <= test266151307() and (32 * mem[_24661 + mem[_24661]]) + 32 >= 0
                                                                mem[64] = _24661 + ceil32(return_data.size) + (32 * mem[_24661 + mem[_24661]]) + 32
                                                                mem[_24661 + ceil32(return_data.size)] = _24787
                                                                require _24715 + (32 * _24787) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24661 + _24715 + 32
                                                                u = _24661 + ceil32(return_data.size) + 32
                                                                while idx < _24787:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24787 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24787:
                                                                    if mem[_24661 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23797 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23797] = 0
                                                            mem[_23797 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_22170 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_6750]]
                                    mem[mem[_6750] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_6750]]
                                    mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_6750]]
                                    mem[mem[_6750] + 96] = address(_6728)
                                    require 3 < mem[mem[_6750]]
                                    mem[mem[_6750] + 128] = 0
                                    require 0 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                    require 1 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 64] = 0
                                    require 2 < mem[mem[_6750 + 32]]
                                    mem[mem[_6750 + 32] + 96] = 0
                                    mem[_6750 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _20077 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _20131 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _20132 = mem[_13384 + 32]
                                                    _20195 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_20195] = 0
                                                    mem[_20195 + 32] = 0
                                                    if address(_20077) == address(_20131):
                                                        _20265 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20265] = 0
                                                        mem[_20265 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _20409 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _20489 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20489] = 0
                                                        mem[_20489 + 32] = 0
                                                        if address(_20409) == address(_6728):
                                                            _20561 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20561] = 0
                                                            mem[_20561 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _20560 = mem[96]
                                                            _20608 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_20608]
                                                            mem[_20608 + 32] = address(_20409)
                                                            require 1 < mem[_20608]
                                                            mem[_20608 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _20560:
                                                                require t < mem[96]
                                                                _22228 = mem[(32 * t) + 128]
                                                                _22229 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22543 = mem[_20608]
                                                                mem[mem[64] + 68] = mem[_20608]
                                                                idx = 0
                                                                s = _20608 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22543:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22228))
                                                                staticcall address(_22228).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22229 + (32 * _22543) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23926 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24008 = mem[_23926]
                                                                require mem[_23926] <= test266151307()
                                                                require _23926 + mem[_23926] + 31 < _23926 + return_data.size
                                                                _24150 = mem[_23926 + mem[_23926]]
                                                                require mem[_23926 + mem[_23926]] <= test266151307()
                                                                require _23926 + ceil32(return_data.size) + (32 * mem[_23926 + mem[_23926]]) + 32 <= test266151307() and (32 * mem[_23926 + mem[_23926]]) + 32 >= 0
                                                                mem[64] = _23926 + ceil32(return_data.size) + (32 * mem[_23926 + mem[_23926]]) + 32
                                                                mem[_23926 + ceil32(return_data.size)] = _24150
                                                                require _24008 + (32 * _24150) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23926 + _24008 + 32
                                                                u = _23926 + ceil32(return_data.size) + 32
                                                                while idx < _24150:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24150 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24150:
                                                                    if mem[_23926 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22176 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22176] = 0
                                                            mem[_22176 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_20265 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                    else:
                                                        _20264 = mem[96]
                                                        _20310 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_20310]
                                                        mem[_20310 + 32] = address(_20077)
                                                        require 1 < mem[_20310]
                                                        mem[_20310 + 64] = address(_20131)
                                                        t = 0
                                                        while t < _20264:
                                                            require t < mem[96]
                                                            _22226 = mem[(32 * t) + 128]
                                                            _22227 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _20132
                                                            mem[mem[64] + 36] = 64
                                                            _22540 = mem[_20310]
                                                            mem[mem[64] + 68] = mem[_20310]
                                                            idx = 0
                                                            s = _20310 + 32
                                                            u = mem[64] + 100
                                                            while idx < _22540:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_22226))
                                                            staticcall address(_22226).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _22227 + (32 * _22540) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _23925 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _24007 = mem[_23925]
                                                            require mem[_23925] <= test266151307()
                                                            require _23925 + mem[_23925] + 31 < _23925 + return_data.size
                                                            _24149 = mem[_23925 + mem[_23925]]
                                                            require mem[_23925 + mem[_23925]] <= test266151307()
                                                            require _23925 + ceil32(return_data.size) + (32 * mem[_23925 + mem[_23925]]) + 32 <= test266151307() and (32 * mem[_23925 + mem[_23925]]) + 32 >= 0
                                                            mem[64] = _23925 + ceil32(return_data.size) + (32 * mem[_23925 + mem[_23925]]) + 32
                                                            mem[_23925 + ceil32(return_data.size)] = _24149
                                                            require _24007 + (32 * _24149) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _23925 + _24007 + 32
                                                            u = _23925 + ceil32(return_data.size) + 32
                                                            while idx < _24149:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24149 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24149:
                                                                if mem[_23925 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _22174 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22174] = 0
                                                        mem[_22174 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22316 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _22392 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22392] = 0
                                                        mem[_22392 + 32] = 0
                                                        if address(_22316) == address(_6728):
                                                            _22485 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22485] = 0
                                                            mem[_22485 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = 0
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                                        else:
                                                            _22484 = mem[96]
                                                            _22539 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_22539]
                                                            mem[_22539 + 32] = address(_22316)
                                                            require 1 < mem[_22539]
                                                            mem[_22539 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _22484:
                                                                require t < mem[96]
                                                                _23832 = mem[(32 * t) + 128]
                                                                _23833 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24098 = mem[_22539]
                                                                mem[mem[64] + 68] = mem[_22539]
                                                                idx = 0
                                                                s = _22539 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24098:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23832))
                                                                staticcall address(_23832).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _23833 + (32 * _24098) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24664 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24718 = mem[_24664]
                                                                require mem[_24664] <= test266151307()
                                                                require _24664 + mem[_24664] + 31 < _24664 + return_data.size
                                                                _24788 = mem[_24664 + mem[_24664]]
                                                                require mem[_24664 + mem[_24664]] <= test266151307()
                                                                require _24664 + ceil32(return_data.size) + (32 * mem[_24664 + mem[_24664]]) + 32 <= test266151307() and (32 * mem[_24664 + mem[_24664]]) + 32 >= 0
                                                                mem[64] = _24664 + ceil32(return_data.size) + (32 * mem[_24664 + mem[_24664]]) + 32
                                                                mem[_24664 + ceil32(return_data.size)] = _24788
                                                                require _24718 + (32 * _24788) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24664 + _24718 + 32
                                                                u = _24664 + ceil32(return_data.size) + 32
                                                                while idx < _24788:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24788 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24788:
                                                                    if mem[_24664 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23801 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23801] = 0
                                                            mem[_23801 + 32] = 0
                                                            if 0 > mem[_6750 + 64]:
                                                                require 0 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_6750]]
                                                                mem[mem[_6750] + 128] = address(_6728)
                                                                require 0 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 32] = mem[_13384 + 12 len 20]
                                                                require 1 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 64] = mem[_22174 + 12 len 20]
                                                                require 2 < mem[mem[_6750 + 32]]
                                                                mem[mem[_6750 + 32] + 96] = 0
                                                                mem[_6750 + 64] = 0
                                        idx = idx + 1
                                        continue 
                s = s + 1
                continue 
            require idx < 100
            mem[(32 * idx) + _34] = _6750
        else:
            _6736 = mem[96]
            _6739 = mem[64]
            mem[mem[64]] = 2
            mem[64] = mem[64] + 96
            require 0 < mem[_6739]
            mem[_6739 + 32] = address(_6726)
            require 1 < mem[_6739]
            mem[_6739 + 64] = address(_6728)
            s = 0
            while s < _6736:
                require s < mem[96]
                _10071 = mem[(32 * s) + 128]
                _10072 = mem[64]
                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                mem[mem[64] + 4] = _6730
                mem[mem[64] + 36] = 64
                _10085 = mem[_6739]
                mem[mem[64] + 68] = mem[_6739]
                idx = 0
                t = _6739 + 32
                u = mem[64] + 100
                while idx < _10085:
                    mem[u] = mem[t + 12 len 20]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                require ext_code.size(address(_10071))
                staticcall address(_10071).mem[mem[64] len 4] with:
                        gas gas_remaining wei
                       args mem[mem[64] + 4 len _10072 + (32 * _10085) + -mem[64] + 96]
                if not ext_call.success:
                    s = s + 1
                    continue 
                _13415 = mem[64]
                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                mem[64] = mem[64] + ceil32(return_data.size)
                require return_data.size >= 32
                _13426 = mem[_13415]
                require mem[_13415] <= test266151307()
                require _13415 + mem[_13415] + 31 < _13415 + return_data.size
                _13448 = mem[_13415 + mem[_13415]]
                require mem[_13415 + mem[_13415]] <= test266151307()
                require _13415 + ceil32(return_data.size) + (32 * mem[_13415 + mem[_13415]]) + 32 <= test266151307() and (32 * mem[_13415 + mem[_13415]]) + 32 >= 0
                mem[64] = _13415 + ceil32(return_data.size) + (32 * mem[_13415 + mem[_13415]]) + 32
                mem[_13415 + ceil32(return_data.size)] = _13448
                require _13426 + (32 * _13448) + 32 <= return_data.size
                idx = 0
                t = _13415 + _13426 + 32
                u = _13415 + ceil32(return_data.size) + 32
                while idx < _13448:
                    require mem[t] == mem[t]
                    mem[u] = mem[t]
                    idx = idx + 1
                    t = t + 32
                    u = u + 32
                    continue 
                if _13448 < 2:
                    s = s + 1
                    continue 
                if 1 < _13448:
                    if mem[_13415 + ceil32(return_data.size) + 64] <= 0:
                        s = s + 1
                        continue 
                    if s < mem[96]:
                        s = s + 1
                        continue 
                revert
            _10068 = mem[64]
            mem[64] = mem[64] + 64
            mem[_10068] = 0
            mem[_10068 + 32] = 0
            _10077 = mem[64]
            mem[64] = mem[64] + 64
            mem[_10077] = 0
            mem[_10077 + 32] = 0
            _10080 = mem[64]
            mem[64] = mem[64] + 64
            mem[_10080] = 0
            mem[_10080 + 32] = 0
            _10083 = mem[64]
            mem[64] = mem[64] + 96
            mem[_10083] = 96
            mem[_10083 + 32] = 96
            mem[_10083 + 64] = 0
            _10084 = mem[64]
            mem[64] = mem[64] + 96
            _10087 = mem[64]
            mem[mem[64] + 32 len 128] = call.data[calldata.size len 128]
            mem[_10084] = mem[64]
            mem[_10087 + 160] = 3
            mem[64] = _10087 + 288
            mem[_10087 + 192 len 96] = call.data[calldata.size len 96]
            mem[_10084 + 32] = _10087 + 160
            mem[_10084 + 64] = 0
            require 0 < mem[_10087]
            mem[_10087 + 32] = address(_6726)
            require 1 < mem[_10087]
            mem[_10087 + 64] = address(_6728)
            mem[_10087 + 192] = 0
            mem[_10084 + 64] = 0
            s = 0
            while s < _6732:
                require s < mem[(32 * arg1.length) + 128]
                if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != address(_6726):
                    require s < mem[(32 * arg1.length) + 128]
                    if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != address(_6728):
                        require s < mem[(32 * arg1.length) + 128]
                        _13425 = mem[(32 * s) + (32 * arg1.length) + 160]
                        _13440 = mem[64]
                        mem[64] = mem[64] + 64
                        mem[_13440] = 0
                        mem[_13440 + 32] = 0
                        if address(_6726) == address(_13425):
                            _13459 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_13459] = 0
                            mem[_13459 + 32] = 0
                            require s < mem[(32 * arg1.length) + 128]
                            _13486 = mem[(32 * s) + (32 * arg1.length) + 160]
                            _13503 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_13503] = 0
                            mem[_13503 + 32] = 0
                            if address(_13486) == address(_6728):
                                _13534 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_13534] = 0
                                mem[_13534 + 32] = 0
                                if 0 <= mem[_10084 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _16851 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _16881 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _16882 = mem[_13459 + 32]
                                                    _16923 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16923] = 0
                                                    mem[_16923 + 32] = 0
                                                    if address(_16851) == address(_16881):
                                                        _16965 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16965] = 0
                                                        mem[_16965 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _17056 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _17118 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17118] = 0
                                                        mem[_17118 + 32] = 0
                                                        if address(_17056) == address(_6728):
                                                            _17164 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17164] = 0
                                                            mem[_17164 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _17163 = mem[96]
                                                            _17207 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_17207]
                                                            mem[_17207 + 32] = address(_17056)
                                                            require 1 < mem[_17207]
                                                            mem[_17207 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _17163:
                                                                require t < mem[96]
                                                                _19718 = mem[(32 * t) + 128]
                                                                _19719 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19966 = mem[_17207]
                                                                mem[mem[64] + 68] = mem[_17207]
                                                                idx = 0
                                                                s = _17207 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19966:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19718))
                                                                staticcall address(_19718).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _19719 + (32 * _19966) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22339 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22424 = mem[_22339]
                                                                require mem[_22339] <= test266151307()
                                                                require _22339 + mem[_22339] + 31 < _22339 + return_data.size
                                                                _22588 = mem[_22339 + mem[_22339]]
                                                                require mem[_22339 + mem[_22339]] <= test266151307()
                                                                require _22339 + ceil32(return_data.size) + (32 * mem[_22339 + mem[_22339]]) + 32 <= test266151307() and (32 * mem[_22339 + mem[_22339]]) + 32 >= 0
                                                                mem[64] = _22339 + ceil32(return_data.size) + (32 * mem[_22339 + mem[_22339]]) + 32
                                                                mem[_22339 + ceil32(return_data.size)] = _22588
                                                                require _22424 + (32 * _22588) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22339 + _22424 + 32
                                                                u = _22339 + ceil32(return_data.size) + 32
                                                                while idx < _22588:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22588 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22588:
                                                                    if mem[_22339 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19673 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19673] = 0
                                                            mem[_19673 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_16965 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _16964 = mem[96]
                                                        _17002 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_17002]
                                                        mem[_17002 + 32] = address(_16851)
                                                        require 1 < mem[_17002]
                                                        mem[_17002 + 64] = address(_16881)
                                                        t = 0
                                                        while t < _16964:
                                                            require t < mem[96]
                                                            _19716 = mem[(32 * t) + 128]
                                                            _19717 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _16882
                                                            mem[mem[64] + 36] = 64
                                                            _19963 = mem[_17002]
                                                            mem[mem[64] + 68] = mem[_17002]
                                                            idx = 0
                                                            s = _17002 + 32
                                                            u = mem[64] + 100
                                                            while idx < _19963:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_19716))
                                                            staticcall address(_19716).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _19717 + (32 * _19963) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _22338 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _22423 = mem[_22338]
                                                            require mem[_22338] <= test266151307()
                                                            require _22338 + mem[_22338] + 31 < _22338 + return_data.size
                                                            _22587 = mem[_22338 + mem[_22338]]
                                                            require mem[_22338 + mem[_22338]] <= test266151307()
                                                            require _22338 + ceil32(return_data.size) + (32 * mem[_22338 + mem[_22338]]) + 32 <= test266151307() and (32 * mem[_22338 + mem[_22338]]) + 32 >= 0
                                                            mem[64] = _22338 + ceil32(return_data.size) + (32 * mem[_22338 + mem[_22338]]) + 32
                                                            mem[_22338 + ceil32(return_data.size)] = _22587
                                                            require _22423 + (32 * _22587) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _22338 + _22423 + 32
                                                            u = _22338 + ceil32(return_data.size) + 32
                                                            while idx < _22587:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _22587 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _22587:
                                                                if mem[_22338 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _19671 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19671] = 0
                                                        mem[_19671 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _19793 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _19851 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19851] = 0
                                                        mem[_19851 + 32] = 0
                                                        if address(_19793) == address(_6728):
                                                            _19918 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19918] = 0
                                                            mem[_19918 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _19917 = mem[96]
                                                            _19962 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_19962]
                                                            mem[_19962 + 32] = address(_19793)
                                                            require 1 < mem[_19962]
                                                            mem[_19962 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _19917:
                                                                require t < mem[96]
                                                                _22218 = mem[(32 * t) + 128]
                                                                _22219 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22530 = mem[_19962]
                                                                mem[mem[64] + 68] = mem[_19962]
                                                                idx = 0
                                                                s = _19962 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22530:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22218))
                                                                staticcall address(_22218).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22219 + (32 * _22530) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23915 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _23997 = mem[_23915]
                                                                require mem[_23915] <= test266151307()
                                                                require _23915 + mem[_23915] + 31 < _23915 + return_data.size
                                                                _24139 = mem[_23915 + mem[_23915]]
                                                                require mem[_23915 + mem[_23915]] <= test266151307()
                                                                require _23915 + ceil32(return_data.size) + (32 * mem[_23915 + mem[_23915]]) + 32 <= test266151307() and (32 * mem[_23915 + mem[_23915]]) + 32 >= 0
                                                                mem[64] = _23915 + ceil32(return_data.size) + (32 * mem[_23915 + mem[_23915]]) + 32
                                                                mem[_23915 + ceil32(return_data.size)] = _24139
                                                                require _23997 + (32 * _24139) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23915 + _23997 + 32
                                                                u = _23915 + ceil32(return_data.size) + 32
                                                                while idx < _24139:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24139 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24139:
                                                                    if mem[_23915 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22162 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22162] = 0
                                                            mem[_22162 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_19671 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_10084]]
                                    mem[mem[_10084] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_10084]]
                                    mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_10084]]
                                    mem[mem[_10084] + 96] = address(_6728)
                                    require 3 < mem[mem[_10084]]
                                    mem[mem[_10084] + 128] = 0
                                    require 0 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 32] = 0
                                    require 1 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 64] = 0
                                    require 2 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 96] = 0
                                    mem[_10084 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _16853 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _16883 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _16884 = mem[_13459 + 32]
                                                    _16924 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_16924] = 0
                                                    mem[_16924 + 32] = 0
                                                    if address(_16853) == address(_16883):
                                                        _16967 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_16967] = 0
                                                        mem[_16967 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _17059 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _17119 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_17119] = 0
                                                        mem[_17119 + 32] = 0
                                                        if address(_17059) == address(_6728):
                                                            _17168 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_17168] = 0
                                                            mem[_17168 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _17167 = mem[96]
                                                            _17210 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_17210]
                                                            mem[_17210 + 32] = address(_17059)
                                                            require 1 < mem[_17210]
                                                            mem[_17210 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _17167:
                                                                require t < mem[96]
                                                                _19722 = mem[(32 * t) + 128]
                                                                _19723 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _19971 = mem[_17210]
                                                                mem[mem[64] + 68] = mem[_17210]
                                                                idx = 0
                                                                s = _17210 + 32
                                                                u = mem[64] + 100
                                                                while idx < _19971:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_19722))
                                                                staticcall address(_19722).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _19723 + (32 * _19971) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _22342 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _22427 = mem[_22342]
                                                                require mem[_22342] <= test266151307()
                                                                require _22342 + mem[_22342] + 31 < _22342 + return_data.size
                                                                _22593 = mem[_22342 + mem[_22342]]
                                                                require mem[_22342 + mem[_22342]] <= test266151307()
                                                                require _22342 + ceil32(return_data.size) + (32 * mem[_22342 + mem[_22342]]) + 32 <= test266151307() and (32 * mem[_22342 + mem[_22342]]) + 32 >= 0
                                                                mem[64] = _22342 + ceil32(return_data.size) + (32 * mem[_22342 + mem[_22342]]) + 32
                                                                mem[_22342 + ceil32(return_data.size)] = _22593
                                                                require _22427 + (32 * _22593) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _22342 + _22427 + 32
                                                                u = _22342 + ceil32(return_data.size) + 32
                                                                while idx < _22593:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _22593 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _22593:
                                                                    if mem[_22342 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _19677 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19677] = 0
                                                            mem[_19677 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_16967 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _16966 = mem[96]
                                                        _17003 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_17003]
                                                        mem[_17003 + 32] = address(_16853)
                                                        require 1 < mem[_17003]
                                                        mem[_17003 + 64] = address(_16883)
                                                        t = 0
                                                        while t < _16966:
                                                            require t < mem[96]
                                                            _19720 = mem[(32 * t) + 128]
                                                            _19721 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _16884
                                                            mem[mem[64] + 36] = 64
                                                            _19968 = mem[_17003]
                                                            mem[mem[64] + 68] = mem[_17003]
                                                            idx = 0
                                                            s = _17003 + 32
                                                            u = mem[64] + 100
                                                            while idx < _19968:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_19720))
                                                            staticcall address(_19720).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _19721 + (32 * _19968) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _22341 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _22426 = mem[_22341]
                                                            require mem[_22341] <= test266151307()
                                                            require _22341 + mem[_22341] + 31 < _22341 + return_data.size
                                                            _22592 = mem[_22341 + mem[_22341]]
                                                            require mem[_22341 + mem[_22341]] <= test266151307()
                                                            require _22341 + ceil32(return_data.size) + (32 * mem[_22341 + mem[_22341]]) + 32 <= test266151307() and (32 * mem[_22341 + mem[_22341]]) + 32 >= 0
                                                            mem[64] = _22341 + ceil32(return_data.size) + (32 * mem[_22341 + mem[_22341]]) + 32
                                                            mem[_22341 + ceil32(return_data.size)] = _22592
                                                            require _22426 + (32 * _22592) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _22341 + _22426 + 32
                                                            u = _22341 + ceil32(return_data.size) + 32
                                                            while idx < _22592:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _22592 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _22592:
                                                                if mem[_22341 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _19675 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19675] = 0
                                                        mem[_19675 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _19797 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _19855 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_19855] = 0
                                                        mem[_19855 + 32] = 0
                                                        if address(_19797) == address(_6728):
                                                            _19923 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_19923] = 0
                                                            mem[_19923 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _19922 = mem[96]
                                                            _19967 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_19967]
                                                            mem[_19967 + 32] = address(_19797)
                                                            require 1 < mem[_19967]
                                                            mem[_19967 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _19922:
                                                                require t < mem[96]
                                                                _22220 = mem[(32 * t) + 128]
                                                                _22221 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22533 = mem[_19967]
                                                                mem[mem[64] + 68] = mem[_19967]
                                                                idx = 0
                                                                s = _19967 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22533:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22220))
                                                                staticcall address(_22220).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22221 + (32 * _22533) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23918 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24000 = mem[_23918]
                                                                require mem[_23918] <= test266151307()
                                                                require _23918 + mem[_23918] + 31 < _23918 + return_data.size
                                                                _24140 = mem[_23918 + mem[_23918]]
                                                                require mem[_23918 + mem[_23918]] <= test266151307()
                                                                require _23918 + ceil32(return_data.size) + (32 * mem[_23918 + mem[_23918]]) + 32 <= test266151307() and (32 * mem[_23918 + mem[_23918]]) + 32 >= 0
                                                                mem[64] = _23918 + ceil32(return_data.size) + (32 * mem[_23918 + mem[_23918]]) + 32
                                                                mem[_23918 + ceil32(return_data.size)] = _24140
                                                                require _24000 + (32 * _24140) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23918 + _24000 + 32
                                                                u = _23918 + ceil32(return_data.size) + 32
                                                                while idx < _24140:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24140 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24140:
                                                                    if mem[_23918 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22166 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22166] = 0
                                                            mem[_22166 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_19675 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                _13533 = mem[96]
                                _13546 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_13546]
                                mem[_13546 + 32] = address(_13486)
                                require 1 < mem[_13546]
                                mem[_13546 + 64] = address(_6728)
                                idx = 0
                                while idx < _13533:
                                    require idx < mem[96]
                                    _16656 = mem[(32 * idx) + 128]
                                    _16657 = mem[64]
                                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = 64
                                    _16801 = mem[_13546]
                                    mem[mem[64] + 68] = mem[_13546]
                                    s = 0
                                    t = _13546 + 32
                                    u = mem[64] + 100
                                    while s < _16801:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    require ext_code.size(address(_16656))
                                    staticcall address(_16656).mem[mem[64] len 4] with:
                                            gas gas_remaining wei
                                           args mem[mem[64] + 4 len _16657 + (32 * _16801) + -mem[64] + 96]
                                    if not ext_call.success:
                                        idx = idx + 1
                                        continue 
                                    _19829 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _19892 = mem[_19829]
                                    require mem[_19829] <= test266151307()
                                    require _19829 + mem[_19829] + 31 < _19829 + return_data.size
                                    _20009 = mem[_19829 + mem[_19829]]
                                    require mem[_19829 + mem[_19829]] <= test266151307()
                                    require _19829 + ceil32(return_data.size) + (32 * mem[_19829 + mem[_19829]]) + 32 <= test266151307() and (32 * mem[_19829 + mem[_19829]]) + 32 >= 0
                                    mem[64] = _19829 + ceil32(return_data.size) + (32 * mem[_19829 + mem[_19829]]) + 32
                                    mem[_19829 + ceil32(return_data.size)] = _20009
                                    require _19892 + (32 * _20009) + 32 <= return_data.size
                                    s = 0
                                    t = _19829 + _19892 + 32
                                    u = _19829 + ceil32(return_data.size) + 32
                                    while s < _20009:
                                        require mem[t] == mem[t]
                                        mem[u] = mem[t]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    if _20009 < 2:
                                        idx = idx + 1
                                        continue 
                                    if 1 < _20009:
                                        if mem[_19829 + ceil32(return_data.size) + 64] <= 0:
                                            idx = idx + 1
                                            continue 
                                        if idx < mem[96]:
                                            idx = idx + 1
                                            continue 
                                    revert
                                _16633 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_16633] = 0
                                mem[_16633 + 32] = 0
                                if 0 <= mem[_10084 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _20059 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _20115 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _20116 = mem[_13459 + 32]
                                                    _20189 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_20189] = 0
                                                    mem[_20189 + 32] = 0
                                                    if address(_20059) == address(_20115):
                                                        _20247 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20247] = 0
                                                        mem[_20247 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _20392 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _20484 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20484] = 0
                                                        mem[_20484 + 32] = 0
                                                        if address(_20392) == address(_6728):
                                                            _20542 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20542] = 0
                                                            mem[_20542 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _20541 = mem[96]
                                                            _20592 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_20592]
                                                            mem[_20592 + 32] = address(_20392)
                                                            require 1 < mem[_20592]
                                                            mem[_20592 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _20541:
                                                                require t < mem[96]
                                                                _22211 = mem[(32 * t) + 128]
                                                                _22212 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22521 = mem[_20592]
                                                                mem[mem[64] + 68] = mem[_20592]
                                                                idx = 0
                                                                s = _20592 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22521:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22211))
                                                                staticcall address(_22211).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22212 + (32 * _22521) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23911 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _23993 = mem[_23911]
                                                                require mem[_23911] <= test266151307()
                                                                require _23911 + mem[_23911] + 31 < _23911 + return_data.size
                                                                _24133 = mem[_23911 + mem[_23911]]
                                                                require mem[_23911 + mem[_23911]] <= test266151307()
                                                                require _23911 + ceil32(return_data.size) + (32 * mem[_23911 + mem[_23911]]) + 32 <= test266151307() and (32 * mem[_23911 + mem[_23911]]) + 32 >= 0
                                                                mem[64] = _23911 + ceil32(return_data.size) + (32 * mem[_23911 + mem[_23911]]) + 32
                                                                mem[_23911 + ceil32(return_data.size)] = _24133
                                                                require _23993 + (32 * _24133) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23911 + _23993 + 32
                                                                u = _23911 + ceil32(return_data.size) + 32
                                                                while idx < _24133:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24133 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24133:
                                                                    if mem[_23911 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22156 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22156] = 0
                                                            mem[_22156 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_20247 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _20246 = mem[96]
                                                        _20297 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_20297]
                                                        mem[_20297 + 32] = address(_20059)
                                                        require 1 < mem[_20297]
                                                        mem[_20297 + 64] = address(_20115)
                                                        t = 0
                                                        while t < _20246:
                                                            require t < mem[96]
                                                            _22209 = mem[(32 * t) + 128]
                                                            _22210 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _20116
                                                            mem[mem[64] + 36] = 64
                                                            _22518 = mem[_20297]
                                                            mem[mem[64] + 68] = mem[_20297]
                                                            idx = 0
                                                            s = _20297 + 32
                                                            u = mem[64] + 100
                                                            while idx < _22518:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_22209))
                                                            staticcall address(_22209).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _22210 + (32 * _22518) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _23910 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _23992 = mem[_23910]
                                                            require mem[_23910] <= test266151307()
                                                            require _23910 + mem[_23910] + 31 < _23910 + return_data.size
                                                            _24132 = mem[_23910 + mem[_23910]]
                                                            require mem[_23910 + mem[_23910]] <= test266151307()
                                                            require _23910 + ceil32(return_data.size) + (32 * mem[_23910 + mem[_23910]]) + 32 <= test266151307() and (32 * mem[_23910 + mem[_23910]]) + 32 >= 0
                                                            mem[64] = _23910 + ceil32(return_data.size) + (32 * mem[_23910 + mem[_23910]]) + 32
                                                            mem[_23910 + ceil32(return_data.size)] = _24132
                                                            require _23992 + (32 * _24132) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _23910 + _23992 + 32
                                                            u = _23910 + ceil32(return_data.size) + 32
                                                            while idx < _24132:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24132 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24132:
                                                                if mem[_23910 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _22154 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22154] = 0
                                                        mem[_22154 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22300 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _22373 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22373] = 0
                                                        mem[_22373 + 32] = 0
                                                        if address(_22300) == address(_6728):
                                                            _22463 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22463] = 0
                                                            mem[_22463 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _22462 = mem[96]
                                                            _22517 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_22517]
                                                            mem[_22517 + 32] = address(_22300)
                                                            require 1 < mem[_22517]
                                                            mem[_22517 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _22462:
                                                                require t < mem[96]
                                                                _23822 = mem[(32 * t) + 128]
                                                                _23823 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24085 = mem[_22517]
                                                                mem[mem[64] + 68] = mem[_22517]
                                                                idx = 0
                                                                s = _22517 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24085:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23822))
                                                                staticcall address(_23822).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _23823 + (32 * _24085) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24653 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24707 = mem[_24653]
                                                                require mem[_24653] <= test266151307()
                                                                require _24653 + mem[_24653] + 31 < _24653 + return_data.size
                                                                _24785 = mem[_24653 + mem[_24653]]
                                                                require mem[_24653 + mem[_24653]] <= test266151307()
                                                                require _24653 + ceil32(return_data.size) + (32 * mem[_24653 + mem[_24653]]) + 32 <= test266151307() and (32 * mem[_24653 + mem[_24653]]) + 32 >= 0
                                                                mem[64] = _24653 + ceil32(return_data.size) + (32 * mem[_24653 + mem[_24653]]) + 32
                                                                mem[_24653 + ceil32(return_data.size)] = _24785
                                                                require _24707 + (32 * _24785) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24653 + _24707 + 32
                                                                u = _24653 + ceil32(return_data.size) + 32
                                                                while idx < _24785:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24785 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24785:
                                                                    if mem[_24653 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23787 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23787] = 0
                                                            mem[_23787 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_22154 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_10084]]
                                    mem[mem[_10084] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_10084]]
                                    mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_10084]]
                                    mem[mem[_10084] + 96] = address(_6728)
                                    require 3 < mem[mem[_10084]]
                                    mem[mem[_10084] + 128] = 0
                                    require 0 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                    require 1 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 64] = 0
                                    require 2 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 96] = 0
                                    mem[_10084 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _20061 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _20117 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _20118 = mem[_13459 + 32]
                                                    _20190 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_20190] = 0
                                                    mem[_20190 + 32] = 0
                                                    if address(_20061) == address(_20117):
                                                        _20249 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20249] = 0
                                                        mem[_20249 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _20395 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _20485 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20485] = 0
                                                        mem[_20485 + 32] = 0
                                                        if address(_20395) == address(_6728):
                                                            _20546 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20546] = 0
                                                            mem[_20546 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _20545 = mem[96]
                                                            _20595 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_20595]
                                                            mem[_20595 + 32] = address(_20395)
                                                            require 1 < mem[_20595]
                                                            mem[_20595 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _20545:
                                                                require t < mem[96]
                                                                _22215 = mem[(32 * t) + 128]
                                                                _22216 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22526 = mem[_20595]
                                                                mem[mem[64] + 68] = mem[_20595]
                                                                idx = 0
                                                                s = _20595 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22526:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22215))
                                                                staticcall address(_22215).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22216 + (32 * _22526) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23914 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _23996 = mem[_23914]
                                                                require mem[_23914] <= test266151307()
                                                                require _23914 + mem[_23914] + 31 < _23914 + return_data.size
                                                                _24138 = mem[_23914 + mem[_23914]]
                                                                require mem[_23914 + mem[_23914]] <= test266151307()
                                                                require _23914 + ceil32(return_data.size) + (32 * mem[_23914 + mem[_23914]]) + 32 <= test266151307() and (32 * mem[_23914 + mem[_23914]]) + 32 >= 0
                                                                mem[64] = _23914 + ceil32(return_data.size) + (32 * mem[_23914 + mem[_23914]]) + 32
                                                                mem[_23914 + ceil32(return_data.size)] = _24138
                                                                require _23996 + (32 * _24138) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23914 + _23996 + 32
                                                                u = _23914 + ceil32(return_data.size) + 32
                                                                while idx < _24138:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24138 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24138:
                                                                    if mem[_23914 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22160 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22160] = 0
                                                            mem[_22160 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_20249 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _20248 = mem[96]
                                                        _20298 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_20298]
                                                        mem[_20298 + 32] = address(_20061)
                                                        require 1 < mem[_20298]
                                                        mem[_20298 + 64] = address(_20117)
                                                        t = 0
                                                        while t < _20248:
                                                            require t < mem[96]
                                                            _22213 = mem[(32 * t) + 128]
                                                            _22214 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _20118
                                                            mem[mem[64] + 36] = 64
                                                            _22523 = mem[_20298]
                                                            mem[mem[64] + 68] = mem[_20298]
                                                            idx = 0
                                                            s = _20298 + 32
                                                            u = mem[64] + 100
                                                            while idx < _22523:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_22213))
                                                            staticcall address(_22213).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _22214 + (32 * _22523) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _23913 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _23995 = mem[_23913]
                                                            require mem[_23913] <= test266151307()
                                                            require _23913 + mem[_23913] + 31 < _23913 + return_data.size
                                                            _24137 = mem[_23913 + mem[_23913]]
                                                            require mem[_23913 + mem[_23913]] <= test266151307()
                                                            require _23913 + ceil32(return_data.size) + (32 * mem[_23913 + mem[_23913]]) + 32 <= test266151307() and (32 * mem[_23913 + mem[_23913]]) + 32 >= 0
                                                            mem[64] = _23913 + ceil32(return_data.size) + (32 * mem[_23913 + mem[_23913]]) + 32
                                                            mem[_23913 + ceil32(return_data.size)] = _24137
                                                            require _23995 + (32 * _24137) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _23913 + _23995 + 32
                                                            u = _23913 + ceil32(return_data.size) + 32
                                                            while idx < _24137:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24137 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24137:
                                                                if mem[_23913 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _22158 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22158] = 0
                                                        mem[_22158 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22304 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _22377 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22377] = 0
                                                        mem[_22377 + 32] = 0
                                                        if address(_22304) == address(_6728):
                                                            _22468 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22468] = 0
                                                            mem[_22468 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _22467 = mem[96]
                                                            _22522 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_22522]
                                                            mem[_22522 + 32] = address(_22304)
                                                            require 1 < mem[_22522]
                                                            mem[_22522 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _22467:
                                                                require t < mem[96]
                                                                _23824 = mem[(32 * t) + 128]
                                                                _23825 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24088 = mem[_22522]
                                                                mem[mem[64] + 68] = mem[_22522]
                                                                idx = 0
                                                                s = _22522 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24088:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23824))
                                                                staticcall address(_23824).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _23825 + (32 * _24088) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24656 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24710 = mem[_24656]
                                                                require mem[_24656] <= test266151307()
                                                                require _24656 + mem[_24656] + 31 < _24656 + return_data.size
                                                                _24786 = mem[_24656 + mem[_24656]]
                                                                require mem[_24656 + mem[_24656]] <= test266151307()
                                                                require _24656 + ceil32(return_data.size) + (32 * mem[_24656 + mem[_24656]]) + 32 <= test266151307() and (32 * mem[_24656 + mem[_24656]]) + 32 >= 0
                                                                mem[64] = _24656 + ceil32(return_data.size) + (32 * mem[_24656 + mem[_24656]]) + 32
                                                                mem[_24656 + ceil32(return_data.size)] = _24786
                                                                require _24710 + (32 * _24786) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24656 + _24710 + 32
                                                                u = _24656 + ceil32(return_data.size) + 32
                                                                while idx < _24786:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24786 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24786:
                                                                    if mem[_24656 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23791 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23791] = 0
                                                            mem[_23791 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_13459 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_22158 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                        else:
                            _13458 = mem[96]
                            _13470 = mem[64]
                            mem[mem[64]] = 2
                            mem[64] = mem[64] + 96
                            require 0 < mem[_13470]
                            mem[_13470 + 32] = address(_6726)
                            require 1 < mem[_13470]
                            mem[_13470 + 64] = address(_13425)
                            idx = 0
                            while idx < _13458:
                                require idx < mem[96]
                                _16654 = mem[(32 * idx) + 128]
                                _16655 = mem[64]
                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                mem[mem[64] + 4] = _6730
                                mem[mem[64] + 36] = 64
                                _16796 = mem[_13470]
                                mem[mem[64] + 68] = mem[_13470]
                                s = 0
                                t = _13470 + 32
                                u = mem[64] + 100
                                while s < _16796:
                                    mem[u] = mem[t + 12 len 20]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                require ext_code.size(address(_16654))
                                staticcall address(_16654).mem[mem[64] len 4] with:
                                        gas gas_remaining wei
                                       args mem[mem[64] + 4 len _16655 + (32 * _16796) + -mem[64] + 96]
                                if not ext_call.success:
                                    idx = idx + 1
                                    continue 
                                _19826 = mem[64]
                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                mem[64] = mem[64] + ceil32(return_data.size)
                                require return_data.size >= 32
                                _19889 = mem[_19826]
                                require mem[_19826] <= test266151307()
                                require _19826 + mem[_19826] + 31 < _19826 + return_data.size
                                _20006 = mem[_19826 + mem[_19826]]
                                require mem[_19826 + mem[_19826]] <= test266151307()
                                require _19826 + ceil32(return_data.size) + (32 * mem[_19826 + mem[_19826]]) + 32 <= test266151307() and (32 * mem[_19826 + mem[_19826]]) + 32 >= 0
                                mem[64] = _19826 + ceil32(return_data.size) + (32 * mem[_19826 + mem[_19826]]) + 32
                                mem[_19826 + ceil32(return_data.size)] = _20006
                                require _19889 + (32 * _20006) + 32 <= return_data.size
                                s = 0
                                t = _19826 + _19889 + 32
                                u = _19826 + ceil32(return_data.size) + 32
                                while s < _20006:
                                    require mem[t] == mem[t]
                                    mem[u] = mem[t]
                                    s = s + 1
                                    t = t + 32
                                    u = u + 32
                                    continue 
                                if _20006 < 2:
                                    idx = idx + 1
                                    continue 
                                if 1 < _20006:
                                    if mem[_19826 + ceil32(return_data.size) + 64] <= 0:
                                        idx = idx + 1
                                        continue 
                                    if idx < mem[96]:
                                        idx = idx + 1
                                        continue 
                                revert
                            _16631 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_16631] = 0
                            mem[_16631 + 32] = 0
                            require s < mem[(32 * arg1.length) + 128]
                            _16700 = mem[(32 * s) + (32 * arg1.length) + 160]
                            _16733 = mem[64]
                            mem[64] = mem[64] + 64
                            mem[_16733] = 0
                            mem[_16733 + 32] = 0
                            if address(_16700) == address(_6728):
                                _16771 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_16771] = 0
                                mem[_16771 + 32] = 0
                                if 0 <= mem[_10084 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _20055 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _20111 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _20112 = mem[_16631 + 32]
                                                    _20186 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_20186] = 0
                                                    mem[_20186 + 32] = 0
                                                    if address(_20055) == address(_20111):
                                                        _20243 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20243] = 0
                                                        mem[_20243 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _20386 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _20482 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20482] = 0
                                                        mem[_20482 + 32] = 0
                                                        if address(_20386) == address(_6728):
                                                            _20533 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20533] = 0
                                                            mem[_20533 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _20532 = mem[96]
                                                            _20585 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_20585]
                                                            mem[_20585 + 32] = address(_20386)
                                                            require 1 < mem[_20585]
                                                            mem[_20585 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _20532:
                                                                require t < mem[96]
                                                                _22202 = mem[(32 * t) + 128]
                                                                _22203 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22510 = mem[_20585]
                                                                mem[mem[64] + 68] = mem[_20585]
                                                                idx = 0
                                                                s = _20585 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22510:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22202))
                                                                staticcall address(_22202).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22203 + (32 * _22510) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23905 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _23987 = mem[_23905]
                                                                require mem[_23905] <= test266151307()
                                                                require _23905 + mem[_23905] + 31 < _23905 + return_data.size
                                                                _24123 = mem[_23905 + mem[_23905]]
                                                                require mem[_23905 + mem[_23905]] <= test266151307()
                                                                require _23905 + ceil32(return_data.size) + (32 * mem[_23905 + mem[_23905]]) + 32 <= test266151307() and (32 * mem[_23905 + mem[_23905]]) + 32 >= 0
                                                                mem[64] = _23905 + ceil32(return_data.size) + (32 * mem[_23905 + mem[_23905]]) + 32
                                                                mem[_23905 + ceil32(return_data.size)] = _24123
                                                                require _23987 + (32 * _24123) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23905 + _23987 + 32
                                                                u = _23905 + ceil32(return_data.size) + 32
                                                                while idx < _24123:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24123 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24123:
                                                                    if mem[_23905 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22148 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22148] = 0
                                                            mem[_22148 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_20243 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _20242 = mem[96]
                                                        _20295 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_20295]
                                                        mem[_20295 + 32] = address(_20055)
                                                        require 1 < mem[_20295]
                                                        mem[_20295 + 64] = address(_20111)
                                                        t = 0
                                                        while t < _20242:
                                                            require t < mem[96]
                                                            _22200 = mem[(32 * t) + 128]
                                                            _22201 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _20112
                                                            mem[mem[64] + 36] = 64
                                                            _22507 = mem[_20295]
                                                            mem[mem[64] + 68] = mem[_20295]
                                                            idx = 0
                                                            s = _20295 + 32
                                                            u = mem[64] + 100
                                                            while idx < _22507:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_22200))
                                                            staticcall address(_22200).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _22201 + (32 * _22507) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _23904 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _23986 = mem[_23904]
                                                            require mem[_23904] <= test266151307()
                                                            require _23904 + mem[_23904] + 31 < _23904 + return_data.size
                                                            _24122 = mem[_23904 + mem[_23904]]
                                                            require mem[_23904 + mem[_23904]] <= test266151307()
                                                            require _23904 + ceil32(return_data.size) + (32 * mem[_23904 + mem[_23904]]) + 32 <= test266151307() and (32 * mem[_23904 + mem[_23904]]) + 32 >= 0
                                                            mem[64] = _23904 + ceil32(return_data.size) + (32 * mem[_23904 + mem[_23904]]) + 32
                                                            mem[_23904 + ceil32(return_data.size)] = _24122
                                                            require _23986 + (32 * _24122) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _23904 + _23986 + 32
                                                            u = _23904 + ceil32(return_data.size) + 32
                                                            while idx < _24122:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24122 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24122:
                                                                if mem[_23904 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _22146 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22146] = 0
                                                        mem[_22146 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22292 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _22364 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22364] = 0
                                                        mem[_22364 + 32] = 0
                                                        if address(_22292) == address(_6728):
                                                            _22452 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22452] = 0
                                                            mem[_22452 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _22451 = mem[96]
                                                            _22506 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_22506]
                                                            mem[_22506 + 32] = address(_22292)
                                                            require 1 < mem[_22506]
                                                            mem[_22506 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _22451:
                                                                require t < mem[96]
                                                                _23818 = mem[(32 * t) + 128]
                                                                _23819 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24079 = mem[_22506]
                                                                mem[mem[64] + 68] = mem[_22506]
                                                                idx = 0
                                                                s = _22506 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24079:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23818))
                                                                staticcall address(_23818).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _23819 + (32 * _24079) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24647 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24701 = mem[_24647]
                                                                require mem[_24647] <= test266151307()
                                                                require _24647 + mem[_24647] + 31 < _24647 + return_data.size
                                                                _24783 = mem[_24647 + mem[_24647]]
                                                                require mem[_24647 + mem[_24647]] <= test266151307()
                                                                require _24647 + ceil32(return_data.size) + (32 * mem[_24647 + mem[_24647]]) + 32 <= test266151307() and (32 * mem[_24647 + mem[_24647]]) + 32 >= 0
                                                                mem[64] = _24647 + ceil32(return_data.size) + (32 * mem[_24647 + mem[_24647]]) + 32
                                                                mem[_24647 + ceil32(return_data.size)] = _24783
                                                                require _24701 + (32 * _24783) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24647 + _24701 + 32
                                                                u = _24647 + ceil32(return_data.size) + 32
                                                                while idx < _24783:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24783 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24783:
                                                                    if mem[_24647 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23779 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23779] = 0
                                                            mem[_23779 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_22146 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_10084]]
                                    mem[mem[_10084] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_10084]]
                                    mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_10084]]
                                    mem[mem[_10084] + 96] = address(_6728)
                                    require 3 < mem[mem[_10084]]
                                    mem[mem[_10084] + 128] = 0
                                    require 0 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 32] = 0
                                    require 1 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 64] = 0
                                    require 2 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 96] = 0
                                    mem[_10084 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _20057 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _20113 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _20114 = mem[_16631 + 32]
                                                    _20187 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_20187] = 0
                                                    mem[_20187 + 32] = 0
                                                    if address(_20057) == address(_20113):
                                                        _20245 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20245] = 0
                                                        mem[_20245 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _20389 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _20483 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_20483] = 0
                                                        mem[_20483 + 32] = 0
                                                        if address(_20389) == address(_6728):
                                                            _20537 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_20537] = 0
                                                            mem[_20537 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _20536 = mem[96]
                                                            _20588 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_20588]
                                                            mem[_20588 + 32] = address(_20389)
                                                            require 1 < mem[_20588]
                                                            mem[_20588 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _20536:
                                                                require t < mem[96]
                                                                _22206 = mem[(32 * t) + 128]
                                                                _22207 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _22515 = mem[_20588]
                                                                mem[mem[64] + 68] = mem[_20588]
                                                                idx = 0
                                                                s = _20588 + 32
                                                                u = mem[64] + 100
                                                                while idx < _22515:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_22206))
                                                                staticcall address(_22206).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _22207 + (32 * _22515) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _23908 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _23990 = mem[_23908]
                                                                require mem[_23908] <= test266151307()
                                                                require _23908 + mem[_23908] + 31 < _23908 + return_data.size
                                                                _24128 = mem[_23908 + mem[_23908]]
                                                                require mem[_23908 + mem[_23908]] <= test266151307()
                                                                require _23908 + ceil32(return_data.size) + (32 * mem[_23908 + mem[_23908]]) + 32 <= test266151307() and (32 * mem[_23908 + mem[_23908]]) + 32 >= 0
                                                                mem[64] = _23908 + ceil32(return_data.size) + (32 * mem[_23908 + mem[_23908]]) + 32
                                                                mem[_23908 + ceil32(return_data.size)] = _24128
                                                                require _23990 + (32 * _24128) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _23908 + _23990 + 32
                                                                u = _23908 + ceil32(return_data.size) + 32
                                                                while idx < _24128:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24128 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24128:
                                                                    if mem[_23908 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _22152 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22152] = 0
                                                            mem[_22152 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_20245 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _20244 = mem[96]
                                                        _20296 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_20296]
                                                        mem[_20296 + 32] = address(_20057)
                                                        require 1 < mem[_20296]
                                                        mem[_20296 + 64] = address(_20113)
                                                        t = 0
                                                        while t < _20244:
                                                            require t < mem[96]
                                                            _22204 = mem[(32 * t) + 128]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _20114
                                                            mem[mem[64] + 36] = 64
                                                            _22512 = mem[_20296]
                                                            mem[mem[64] + 68] = mem[_20296]
                                                            idx = 0
                                                            s = _20296 + 32
                                                            u = mem[64] + 100
                                                            while idx < _22512:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_22204))
                                                            staticcall address(_22204).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args _20114, 64, mem[mem[64] + 68 len (32 * _22512) + 32]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _23907 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _23989 = mem[_23907]
                                                            require mem[_23907] <= test266151307()
                                                            require _23907 + mem[_23907] + 31 < _23907 + return_data.size
                                                            _24127 = mem[_23907 + mem[_23907]]
                                                            require mem[_23907 + mem[_23907]] <= test266151307()
                                                            require _23907 + ceil32(return_data.size) + (32 * mem[_23907 + mem[_23907]]) + 32 <= test266151307() and (32 * mem[_23907 + mem[_23907]]) + 32 >= 0
                                                            mem[64] = _23907 + ceil32(return_data.size) + (32 * mem[_23907 + mem[_23907]]) + 32
                                                            mem[_23907 + ceil32(return_data.size)] = _24127
                                                            require _23989 + (32 * _24127) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _23907 + _23989 + 32
                                                            u = _23907 + ceil32(return_data.size) + 32
                                                            while idx < _24127:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24127 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24127:
                                                                if mem[_23907 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _22150 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22150] = 0
                                                        mem[_22150 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22296 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _22368 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22368] = 0
                                                        mem[_22368 + 32] = 0
                                                        if address(_22296) == address(_6728):
                                                            _22457 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_22457] = 0
                                                            mem[_22457 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _22456 = mem[96]
                                                            _22511 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_22511]
                                                            mem[_22511 + 32] = address(_22296)
                                                            require 1 < mem[_22511]
                                                            mem[_22511 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _22456:
                                                                require t < mem[96]
                                                                _23820 = mem[(32 * t) + 128]
                                                                _23821 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24082 = mem[_22511]
                                                                mem[mem[64] + 68] = mem[_22511]
                                                                idx = 0
                                                                s = _22511 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24082:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23820))
                                                                staticcall address(_23820).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _23821 + (32 * _24082) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24650 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24704 = mem[_24650]
                                                                require mem[_24650] <= test266151307()
                                                                require _24650 + mem[_24650] + 31 < _24650 + return_data.size
                                                                _24784 = mem[_24650 + mem[_24650]]
                                                                require mem[_24650 + mem[_24650]] <= test266151307()
                                                                require _24650 + ceil32(return_data.size) + (32 * mem[_24650 + mem[_24650]]) + 32 <= test266151307() and (32 * mem[_24650 + mem[_24650]]) + 32 >= 0
                                                                mem[64] = _24650 + ceil32(return_data.size) + (32 * mem[_24650 + mem[_24650]]) + 32
                                                                mem[_24650 + ceil32(return_data.size)] = _24784
                                                                require _24704 + (32 * _24784) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24650 + _24704 + 32
                                                                u = _24650 + ceil32(return_data.size) + 32
                                                                while idx < _24784:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24784 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24784:
                                                                    if mem[_24650 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23783 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23783] = 0
                                                            mem[_23783 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_22150 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                            else:
                                _16770 = mem[96]
                                _16795 = mem[64]
                                mem[mem[64]] = 2
                                mem[64] = mem[64] + 96
                                require 0 < mem[_16795]
                                mem[_16795 + 32] = address(_16700)
                                require 1 < mem[_16795]
                                mem[_16795 + 64] = address(_6728)
                                idx = 0
                                while idx < _16770:
                                    require idx < mem[96]
                                    _19706 = mem[(32 * idx) + 128]
                                    mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                    mem[mem[64] + 4] = 0
                                    mem[mem[64] + 36] = 64
                                    _19961 = mem[_16795]
                                    mem[mem[64] + 68] = mem[_16795]
                                    s = 0
                                    t = _16795 + 32
                                    u = mem[64] + 100
                                    while s < _19961:
                                        mem[u] = mem[t + 12 len 20]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    require ext_code.size(address(_19706))
                                    staticcall address(_19706).getAmountsOut(uint256 arg1, address[] arg2) with:
                                            gas gas_remaining wei
                                           args 0, 64, mem[mem[64] + 68 len (32 * _19961) + 32]
                                    if not ext_call.success:
                                        idx = idx + 1
                                        continue 
                                    _22330 = mem[64]
                                    mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                    mem[64] = mem[64] + ceil32(return_data.size)
                                    require return_data.size >= 32
                                    _22415 = mem[_22330]
                                    require mem[_22330] <= test266151307()
                                    require _22330 + mem[_22330] + 31 < _22330 + return_data.size
                                    _22563 = mem[_22330 + mem[_22330]]
                                    require mem[_22330 + mem[_22330]] <= test266151307()
                                    require _22330 + ceil32(return_data.size) + (32 * mem[_22330 + mem[_22330]]) + 32 <= test266151307() and (32 * mem[_22330 + mem[_22330]]) + 32 >= 0
                                    mem[64] = _22330 + ceil32(return_data.size) + (32 * mem[_22330 + mem[_22330]]) + 32
                                    mem[_22330 + ceil32(return_data.size)] = _22563
                                    require _22415 + (32 * _22563) + 32 <= return_data.size
                                    s = 0
                                    t = _22330 + _22415 + 32
                                    u = _22330 + ceil32(return_data.size) + 32
                                    while s < _22563:
                                        require mem[t] == mem[t]
                                        mem[u] = mem[t]
                                        s = s + 1
                                        t = t + 32
                                        u = u + 32
                                        continue 
                                    if _22563 < 2:
                                        idx = idx + 1
                                        continue 
                                    if 1 < _22563:
                                        if mem[_22330 + ceil32(return_data.size) + 64] <= 0:
                                            idx = idx + 1
                                            continue 
                                        if idx < mem[96]:
                                            idx = idx + 1
                                            continue 
                                    revert
                                _19663 = mem[64]
                                mem[64] = mem[64] + 64
                                mem[_19663] = 0
                                mem[_19663 + 32] = 0
                                if 0 <= mem[_10084 + 64]:
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _22626 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _22684 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _22685 = mem[_16631 + 32]
                                                    _22766 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_22766] = 0
                                                    mem[_22766 + 32] = 0
                                                    if address(_22626) == address(_22684):
                                                        _22820 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22820] = 0
                                                        mem[_22820 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22948 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _23036 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_23036] = 0
                                                        mem[_23036 + 32] = 0
                                                        if address(_22948) == address(_6728):
                                                            _23083 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23083] = 0
                                                            mem[_23083 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _23082 = mem[96]
                                                            _23123 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_23123]
                                                            mem[_23123 + 32] = address(_22948)
                                                            require 1 < mem[_23123]
                                                            mem[_23123 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _23082:
                                                                require t < mem[96]
                                                                _23811 = mem[(32 * t) + 128]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24070 = mem[_23123]
                                                                mem[mem[64] + 68] = mem[_23123]
                                                                idx = 0
                                                                s = _23123 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24070:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23811))
                                                                staticcall address(_23811).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                        gas gas_remaining wei
                                                                       args 0, 64, mem[mem[64] + 68 len (32 * _24070) + 32]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24643 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24697 = mem[_24643]
                                                                require mem[_24643] <= test266151307()
                                                                require _24643 + mem[_24643] + 31 < _24643 + return_data.size
                                                                _24777 = mem[_24643 + mem[_24643]]
                                                                require mem[_24643 + mem[_24643]] <= test266151307()
                                                                require _24643 + ceil32(return_data.size) + (32 * mem[_24643 + mem[_24643]]) + 32 <= test266151307() and (32 * mem[_24643 + mem[_24643]]) + 32 >= 0
                                                                mem[64] = _24643 + ceil32(return_data.size) + (32 * mem[_24643 + mem[_24643]]) + 32
                                                                mem[_24643 + ceil32(return_data.size)] = _24777
                                                                require _24697 + (32 * _24777) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24643 + _24697 + 32
                                                                u = _24643 + ceil32(return_data.size) + 32
                                                                while idx < _24777:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24777 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24777:
                                                                    if mem[_24643 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23773 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23773] = 0
                                                            mem[_23773 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_22820 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _22819 = mem[96]
                                                        _22865 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_22865]
                                                        mem[_22865 + 32] = address(_22626)
                                                        require 1 < mem[_22865]
                                                        mem[_22865 + 64] = address(_22684)
                                                        t = 0
                                                        while t < _22819:
                                                            require t < mem[96]
                                                            _23809 = mem[(32 * t) + 128]
                                                            _23810 = mem[64]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _22685
                                                            mem[mem[64] + 36] = 64
                                                            _24067 = mem[_22865]
                                                            mem[mem[64] + 68] = mem[_22865]
                                                            idx = 0
                                                            s = _22865 + 32
                                                            u = mem[64] + 100
                                                            while idx < _24067:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_23809))
                                                            staticcall address(_23809).mem[mem[64] len 4] with:
                                                                    gas gas_remaining wei
                                                                   args mem[mem[64] + 4 len _23810 + (32 * _24067) + -mem[64] + 96]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _24642 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _24696 = mem[_24642]
                                                            require mem[_24642] <= test266151307()
                                                            require _24642 + mem[_24642] + 31 < _24642 + return_data.size
                                                            _24776 = mem[_24642 + mem[_24642]]
                                                            require mem[_24642 + mem[_24642]] <= test266151307()
                                                            require _24642 + ceil32(return_data.size) + (32 * mem[_24642 + mem[_24642]]) + 32 <= test266151307() and (32 * mem[_24642 + mem[_24642]]) + 32 >= 0
                                                            mem[64] = _24642 + ceil32(return_data.size) + (32 * mem[_24642 + mem[_24642]]) + 32
                                                            mem[_24642 + ceil32(return_data.size)] = _24776
                                                            require _24696 + (32 * _24776) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _24642 + _24696 + 32
                                                            u = _24642 + ceil32(return_data.size) + 32
                                                            while idx < _24776:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24776 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24776:
                                                                if mem[_24642 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _23771 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_23771] = 0
                                                        mem[_23771 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _23880 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _23941 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_23941] = 0
                                                        mem[_23941 + 32] = 0
                                                        if address(_23880) == address(_6728):
                                                            _24024 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_24024] = 0
                                                            mem[_24024 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _24023 = mem[96]
                                                            _24066 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_24066]
                                                            mem[_24066 + 32] = address(_23880)
                                                            require 1 < mem[_24066]
                                                            mem[_24066 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _24023:
                                                                require t < mem[96]
                                                                _24601 = mem[(32 * t) + 128]
                                                                _24602 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24751 = mem[_24066]
                                                                mem[mem[64] + 68] = mem[_24066]
                                                                idx = 0
                                                                s = _24066 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24751:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_24601))
                                                                staticcall address(_24601).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _24602 + (32 * _24751) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24911 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24933 = mem[_24911]
                                                                require mem[_24911] <= test266151307()
                                                                require _24911 + mem[_24911] + 31 < _24911 + return_data.size
                                                                _24965 = mem[_24911 + mem[_24911]]
                                                                require mem[_24911 + mem[_24911]] <= test266151307()
                                                                require _24911 + ceil32(return_data.size) + (32 * mem[_24911 + mem[_24911]]) + 32 <= test266151307() and (32 * mem[_24911 + mem[_24911]]) + 32 >= 0
                                                                mem[64] = _24911 + ceil32(return_data.size) + (32 * mem[_24911 + mem[_24911]]) + 32
                                                                mem[_24911 + ceil32(return_data.size)] = _24965
                                                                require _24933 + (32 * _24965) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24911 + _24933 + 32
                                                                u = _24911 + ceil32(return_data.size) + 32
                                                                while idx < _24965:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24965 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24965:
                                                                    if mem[_24911 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _24587 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_24587] = 0
                                                            mem[_24587 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_23771 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                                else:
                                    require 0 < mem[mem[_10084]]
                                    mem[mem[_10084] + 32] = address(_6726)
                                    require s < mem[(32 * arg1.length) + 128]
                                    require 1 < mem[mem[_10084]]
                                    mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                    require 2 < mem[mem[_10084]]
                                    mem[mem[_10084] + 96] = address(_6728)
                                    require 3 < mem[mem[_10084]]
                                    mem[mem[_10084] + 128] = 0
                                    require 0 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                    require 1 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 64] = 0
                                    require 2 < mem[mem[_10084 + 32]]
                                    mem[mem[_10084 + 32] + 96] = 0
                                    mem[_10084 + 64] = 0
                                    idx = 0
                                    while idx < _6732:
                                        require idx < mem[(32 * arg1.length) + 128]
                                        require s < mem[(32 * arg1.length) + 128]
                                        if mem[(32 * s) + (32 * arg1.length) + 172 len 20] != mem[(32 * idx) + (32 * arg1.length) + 172 len 20]:
                                            require idx < mem[(32 * arg1.length) + 128]
                                            if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6726):
                                                require idx < mem[(32 * arg1.length) + 128]
                                                if mem[(32 * idx) + (32 * arg1.length) + 172 len 20] != address(_6728):
                                                    require s < mem[(32 * arg1.length) + 128]
                                                    _22628 = mem[(32 * s) + (32 * arg1.length) + 160]
                                                    require idx < mem[(32 * arg1.length) + 128]
                                                    _22686 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                    _22687 = mem[_16631 + 32]
                                                    _22767 = mem[64]
                                                    mem[64] = mem[64] + 64
                                                    mem[_22767] = 0
                                                    mem[_22767 + 32] = 0
                                                    if address(_22628) == address(_22686):
                                                        _22822 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_22822] = 0
                                                        mem[_22822 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _22951 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _23037 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_23037] = 0
                                                        mem[_23037 + 32] = 0
                                                        if address(_22951) == address(_6728):
                                                            _23087 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23087] = 0
                                                            mem[_23087 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _23086 = mem[96]
                                                            _23126 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_23126]
                                                            mem[_23126 + 32] = address(_22951)
                                                            require 1 < mem[_23126]
                                                            mem[_23126 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _23086:
                                                                require t < mem[96]
                                                                _23815 = mem[(32 * t) + 128]
                                                                _23816 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24075 = mem[_23126]
                                                                mem[mem[64] + 68] = mem[_23126]
                                                                idx = 0
                                                                s = _23126 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24075:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_23815))
                                                                staticcall address(_23815).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _23816 + (32 * _24075) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24646 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24700 = mem[_24646]
                                                                require mem[_24646] <= test266151307()
                                                                require _24646 + mem[_24646] + 31 < _24646 + return_data.size
                                                                _24782 = mem[_24646 + mem[_24646]]
                                                                require mem[_24646 + mem[_24646]] <= test266151307()
                                                                require _24646 + ceil32(return_data.size) + (32 * mem[_24646 + mem[_24646]]) + 32 <= test266151307() and (32 * mem[_24646 + mem[_24646]]) + 32 >= 0
                                                                mem[64] = _24646 + ceil32(return_data.size) + (32 * mem[_24646 + mem[_24646]]) + 32
                                                                mem[_24646 + ceil32(return_data.size)] = _24782
                                                                require _24700 + (32 * _24782) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24646 + _24700 + 32
                                                                u = _24646 + ceil32(return_data.size) + 32
                                                                while idx < _24782:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24782 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24782:
                                                                    if mem[_24646 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _23777 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_23777] = 0
                                                            mem[_23777 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_22822 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                    else:
                                                        _22821 = mem[96]
                                                        _22866 = mem[64]
                                                        mem[mem[64]] = 2
                                                        mem[64] = mem[64] + 96
                                                        require 0 < mem[_22866]
                                                        mem[_22866 + 32] = address(_22628)
                                                        require 1 < mem[_22866]
                                                        mem[_22866 + 64] = address(_22686)
                                                        t = 0
                                                        while t < _22821:
                                                            require t < mem[96]
                                                            _23813 = mem[(32 * t) + 128]
                                                            mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                            mem[mem[64] + 4] = _22687
                                                            mem[mem[64] + 36] = 64
                                                            _24072 = mem[_22866]
                                                            mem[mem[64] + 68] = mem[_22866]
                                                            idx = 0
                                                            s = _22866 + 32
                                                            u = mem[64] + 100
                                                            while idx < _24072:
                                                                mem[u] = mem[s + 12 len 20]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            require ext_code.size(address(_23813))
                                                            staticcall address(_23813).getAmountsOut(uint256 arg1, address[] arg2) with:
                                                                    gas gas_remaining wei
                                                                   args _22687, 64, mem[mem[64] + 68 len (32 * _24072) + 32]
                                                            if not ext_call.success:
                                                                t = t + 1
                                                                continue 
                                                            _24645 = mem[64]
                                                            mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                            mem[64] = mem[64] + ceil32(return_data.size)
                                                            require return_data.size >= 32
                                                            _24699 = mem[_24645]
                                                            require mem[_24645] <= test266151307()
                                                            require _24645 + mem[_24645] + 31 < _24645 + return_data.size
                                                            _24781 = mem[_24645 + mem[_24645]]
                                                            require mem[_24645 + mem[_24645]] <= test266151307()
                                                            require _24645 + ceil32(return_data.size) + (32 * mem[_24645 + mem[_24645]]) + 32 <= test266151307() and (32 * mem[_24645 + mem[_24645]]) + 32 >= 0
                                                            mem[64] = _24645 + ceil32(return_data.size) + (32 * mem[_24645 + mem[_24645]]) + 32
                                                            mem[_24645 + ceil32(return_data.size)] = _24781
                                                            require _24699 + (32 * _24781) + 32 <= return_data.size
                                                            idx = 0
                                                            s = _24645 + _24699 + 32
                                                            u = _24645 + ceil32(return_data.size) + 32
                                                            while idx < _24781:
                                                                require mem[s] == mem[s]
                                                                mem[u] = mem[s]
                                                                idx = idx + 1
                                                                s = s + 32
                                                                u = u + 32
                                                                continue 
                                                            if _24781 < 2:
                                                                t = t + 1
                                                                continue 
                                                            if 1 < _24781:
                                                                if mem[_24645 + ceil32(return_data.size) + 64] <= 0:
                                                                    t = t + 1
                                                                    continue 
                                                                if t < mem[96]:
                                                                    t = t + 1
                                                                    continue 
                                                            revert
                                                        _23775 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_23775] = 0
                                                        mem[_23775 + 32] = 0
                                                        require idx < mem[(32 * arg1.length) + 128]
                                                        _23884 = mem[(32 * idx) + (32 * arg1.length) + 160]
                                                        _23945 = mem[64]
                                                        mem[64] = mem[64] + 64
                                                        mem[_23945] = 0
                                                        mem[_23945 + 32] = 0
                                                        if address(_23884) == address(_6728):
                                                            _24029 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_24029] = 0
                                                            mem[_24029 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = 0
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                                        else:
                                                            _24028 = mem[96]
                                                            _24071 = mem[64]
                                                            mem[mem[64]] = 2
                                                            mem[64] = mem[64] + 96
                                                            require 0 < mem[_24071]
                                                            mem[_24071 + 32] = address(_23884)
                                                            require 1 < mem[_24071]
                                                            mem[_24071 + 64] = address(_6728)
                                                            t = 0
                                                            while t < _24028:
                                                                require t < mem[96]
                                                                _24603 = mem[(32 * t) + 128]
                                                                _24604 = mem[64]
                                                                mem[mem[64]] = 0xd06ca61f00000000000000000000000000000000000000000000000000000000
                                                                mem[mem[64] + 4] = 0
                                                                mem[mem[64] + 36] = 64
                                                                _24754 = mem[_24071]
                                                                mem[mem[64] + 68] = mem[_24071]
                                                                idx = 0
                                                                s = _24071 + 32
                                                                u = mem[64] + 100
                                                                while idx < _24754:
                                                                    mem[u] = mem[s + 12 len 20]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                require ext_code.size(address(_24603))
                                                                staticcall address(_24603).mem[mem[64] len 4] with:
                                                                        gas gas_remaining wei
                                                                       args mem[mem[64] + 4 len _24604 + (32 * _24754) + -mem[64] + 96]
                                                                if not ext_call.success:
                                                                    t = t + 1
                                                                    continue 
                                                                _24914 = mem[64]
                                                                mem[mem[64] len return_data.size] = ext_call.return_data[0 len return_data.size]
                                                                mem[64] = mem[64] + ceil32(return_data.size)
                                                                require return_data.size >= 32
                                                                _24936 = mem[_24914]
                                                                require mem[_24914] <= test266151307()
                                                                require _24914 + mem[_24914] + 31 < _24914 + return_data.size
                                                                _24966 = mem[_24914 + mem[_24914]]
                                                                require mem[_24914 + mem[_24914]] <= test266151307()
                                                                require _24914 + ceil32(return_data.size) + (32 * mem[_24914 + mem[_24914]]) + 32 <= test266151307() and (32 * mem[_24914 + mem[_24914]]) + 32 >= 0
                                                                mem[64] = _24914 + ceil32(return_data.size) + (32 * mem[_24914 + mem[_24914]]) + 32
                                                                mem[_24914 + ceil32(return_data.size)] = _24966
                                                                require _24936 + (32 * _24966) + 32 <= return_data.size
                                                                idx = 0
                                                                s = _24914 + _24936 + 32
                                                                u = _24914 + ceil32(return_data.size) + 32
                                                                while idx < _24966:
                                                                    require mem[s] == mem[s]
                                                                    mem[u] = mem[s]
                                                                    idx = idx + 1
                                                                    s = s + 32
                                                                    u = u + 32
                                                                    continue 
                                                                if _24966 < 2:
                                                                    t = t + 1
                                                                    continue 
                                                                if 1 < _24966:
                                                                    if mem[_24914 + ceil32(return_data.size) + 64] <= 0:
                                                                        t = t + 1
                                                                        continue 
                                                                    if t < mem[96]:
                                                                        t = t + 1
                                                                        continue 
                                                                revert
                                                            _24591 = mem[64]
                                                            mem[64] = mem[64] + 64
                                                            mem[_24591] = 0
                                                            mem[_24591 + 32] = 0
                                                            if 0 > mem[_10084 + 64]:
                                                                require 0 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 32] = address(_6726)
                                                                require s < mem[(32 * arg1.length) + 128]
                                                                require 1 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 64] = mem[(32 * s) + (32 * arg1.length) + 172 len 20]
                                                                require idx < mem[(32 * arg1.length) + 128]
                                                                require 2 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 96] = mem[(32 * idx) + (32 * arg1.length) + 172 len 20]
                                                                require 3 < mem[mem[_10084]]
                                                                mem[mem[_10084] + 128] = address(_6728)
                                                                require 0 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 32] = mem[_16631 + 12 len 20]
                                                                require 1 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 64] = mem[_23775 + 12 len 20]
                                                                require 2 < mem[mem[_10084 + 32]]
                                                                mem[mem[_10084 + 32] + 96] = 0
                                                                mem[_10084 + 64] = 0
                                        idx = idx + 1
                                        continue 
                s = s + 1
                continue 
            require idx < 100
            mem[(32 * idx) + _34] = _10084
        idx = idx + 1
        continue 
    _6725 = mem[64]
    mem[mem[64]] = 32
    idx = 0
    s = _34
    t = mem[64] + 3232
    u = mem[64] + 32
    while idx < 100:
        mem[u] = t + -_6725 - 32
        _10067 = mem[s]
        _10075 = mem[mem[s]]
        mem[t] = 96
        _10079 = mem[_10075]
        mem[t + 96] = mem[_10075]
        v = 0
        w = _10075 + 32
        x = t + 128
        while v < _10079:
            mem[x] = mem[w + 12 len 20]
            v = v + 1
            w = w + 32
            x = x + 32
            continue 
        _13390 = mem[_10067 + 32]
        mem[t + 32] = (32 * _10079) + 128
        _13407 = mem[_13390]
        mem[t + (32 * _10079) + 128] = mem[_13390]
        v = 0
        w = _13390 + 32
        x = t + (32 * _10079) + 160
        while v < _13407:
            mem[x] = mem[w + 12 len 20]
            v = v + 1
            w = w + 32
            x = x + 32
            continue 
        mem[t + 64] = mem[_10067 + 64]
        idx = idx + 1
        s = s + 32
        t = t + (32 * _10079) + (32 * _13407) + 160
        u = u + 32
        continue 
    return memory
      from mem[64]
       len t - mem[64]
}



}
